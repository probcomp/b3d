name: Codebase tests (GPU) 

on:
  pull_request:
  push:
    branches:
      - eighty-devx-gpu-ci

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  XLA_FLAGS: --xla_gpu_enable_command_buffer=
  XLA_PYTHON_CLIENT_PREALLOCATE: "false"
  XLA_PYTHON_CLIENT_ALLOCATOR: "platform"
  CPLUS_INCLUDE_PATH: "$CONDA_PREFIX/targets/x86_64-linux/include"

jobs:
  test:
    strategy:
      matrix:
        runner: [ParallelHoss]
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.ARTIFACT_REGISTRY_KEY }}"

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Install system environment and project dependencies
        env:
          GITHUB_CI: "true"
        run: ./install.sh

      - name: Setup caching for test assets
        id: cache-assets
        uses: actions/cache@v4
        with:
          path: assets
          key: ${{ runner.os }}-${{ matrix.runner }}-assets
          restore-keys: ${{ runner.os }}-${{ matrix.runner }}-assets

      - name: Setup pixi cache
        id: cache-pixi
        uses: actions/cache@v4
        with:
          path: .pixi
          key: ${{ runner.os }}-${{ matrix.runner }}-pixi
          restore-keys: ${{ runner.os }}-${{ matrix.runner }}-pixi

     - name: Run tests
        run: pixi run all-tests-ci

      # - name: Run tests
      #   uses: prefix-dev/setup-pixi@v0.8.1
      #   with:
      #     pixi-version: v0.25.0
      #     manifest-path: pyproject.toml
      #     cache: true
      # - run: pixi run all-tests-ci
