# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FBOutput

import flatbuffers

class FBFrameKeypoints(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsFBFrameKeypoints(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FBFrameKeypoints()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def FBFrameKeypointsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x6B\x65\x79\x70", size_prefixed=size_prefixed)

    # FBFrameKeypoints
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FBFrameKeypoints
    def Positions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .FBVector3 import FBVector3
            obj = FBVector3()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # FBFrameKeypoints
    def PositionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # FBFrameKeypoints
    def Visibilities(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # FBFrameKeypoints
    def VisibilitiesAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # FBFrameKeypoints
    def VisibilitiesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def FBFrameKeypointsStart(builder): builder.StartObject(2)
def FBFrameKeypointsAddPositions(builder, positions): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(positions), 0)
def FBFrameKeypointsStartPositionsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FBFrameKeypointsAddVisibilities(builder, visibilities): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(visibilities), 0)
def FBFrameKeypointsStartVisibilitiesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FBFrameKeypointsEnd(builder): return builder.EndObject()
