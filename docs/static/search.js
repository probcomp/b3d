window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"b3d": {"fullname": "b3d", "modulename": "b3d", "kind": "module", "doc": "<p></p>\n"}, "b3d.Renderer": {"fullname": "b3d.Renderer", "modulename": "b3d", "qualname": "Renderer", "kind": "class", "doc": "<p></p>\n"}, "b3d.Renderer.__init__": {"fullname": "b3d.Renderer.__init__", "modulename": "b3d", "qualname": "Renderer.__init__", "kind": "function", "doc": "<p>Triangle mesh renderer.</p>\n\n<p>Parameters:\n    width: int\n        Image width.\n    height: int\n        Image height.\n    fx: float\n        Focal length x.\n    fy: float\n        Focal length y.\n    cx: float\n        Principal point x.\n    cy: float\n        Principal point y.\n    near: float\n        Near plane.\n    far: float\n        Far plane.\n    num_layers: int\n        Number of layers in the depth buffer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span>, </span><span class=\"param\"><span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">2048</span></span>)</span>"}, "b3d.Renderer.renderer_env": {"fullname": "b3d.Renderer.renderer_env", "modulename": "b3d", "qualname": "Renderer.renderer_env", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Renderer.num_layers": {"fullname": "b3d.Renderer.num_layers", "modulename": "b3d", "qualname": "Renderer.num_layers", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Renderer.from_intrinsics_object": {"fullname": "b3d.Renderer.from_intrinsics_object", "modulename": "b3d", "qualname": "Renderer.from_intrinsics_object", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.get_intrinsics_object": {"fullname": "b3d.Renderer.get_intrinsics_object", "modulename": "b3d", "qualname": "Renderer.get_intrinsics_object", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.set_intrinsics": {"fullname": "b3d.Renderer.set_intrinsics", "modulename": "b3d", "qualname": "Renderer.set_intrinsics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.interpolate_many": {"fullname": "b3d.Renderer.interpolate_many", "modulename": "b3d", "qualname": "Renderer.interpolate_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">uvs</span>, </span><span class=\"param\"><span class=\"n\">triangle_ids</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.interpolate": {"fullname": "b3d.Renderer.interpolate", "modulename": "b3d", "qualname": "Renderer.interpolate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">uvs</span>, </span><span class=\"param\"><span class=\"n\">triangle_ids</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.rasterize_many": {"fullname": "b3d.Renderer.rasterize_many", "modulename": "b3d", "qualname": "Renderer.rasterize_many", "kind": "function", "doc": "<p>Rasterize many scenes in parallel. For scene number S and pixel at row i and column j,\nuvs[S, i, j] contains the u and v barycentric coordinates of the intersection point with\ntriangle index at triangle_ids[S, i, j] - 1 which is on object index object_ids[S, i, j] - 1.\nAnd the z coordinate of the intersection point is z[S, i, j].\nIf the pixel's ray did not intersect any triangle, the values in corresponding pixel is 0.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_scenes, num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\nOutputs:\n    uvs: float array, shape (num_scenes, height, width, 2)\n        UV coordinates of the intersection point on the triangle. Zeros if the pixel ray doesn't collide a triangle.\n    object_ids: int array, shape (num_scenes, height, width)\n        Index + 1 of the object that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    triangle_ids: int array, shape (num_scenes, height, width)\n        Index + 1 of the triangle face that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    zs: float array, shape (num_scenes, height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.rasterize": {"fullname": "b3d.Renderer.rasterize", "modulename": "b3d", "qualname": "Renderer.rasterize", "kind": "function", "doc": "<p>Rasterize a singe scene.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\nOutputs:\n    uvs: float array, shape (height, width, 2)\n        UV coordinates of the intersection point on the triangle. Zeros if the pixel ray doesn't collide a triangle.\n    object_ids: int array, shape (height, width)\n        Index + 1 of the object that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    triangle_ids: int array, shape (height, width)\n        Index + 1 of the triangle face that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    zs: float array, shape (height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.render_attribute_many": {"fullname": "b3d.Renderer.render_attribute_many", "modulename": "b3d", "qualname": "Renderer.render_attribute_many", "kind": "function", "doc": "<p>Render many scenes to an image by rasterizing and then interpolating attributes.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_scenes, num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\n    attributes: float array, shape (num_vertices, num_attributes)\n        Attributes corresponding to the vertices</p>\n\n<p>Outputs:\n    image: float array, shape (num_scenes, height, width, num_attributes)\n        At each pixel the value is the barycentric interpolation of the attributes corresponding to the\n        3 vertices of the triangle with which the pixel's ray intersected. If the pixel's ray does not intersect\n        any triangle the value at that pixel will be 0s.\n    zs: float array, shape (num_scenes, height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Renderer.render_attribute": {"fullname": "b3d.Renderer.render_attribute", "modulename": "b3d", "qualname": "Renderer.render_attribute", "kind": "function", "doc": "<p>Render a single scenes to an image by rasterizing and then interpolating attributes.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\n    attributes: float array, shape (num_vertices, num_attributes)\n        Attributes corresponding to the vertices</p>\n\n<p>Outputs:\n    image: float array, shape (height, width, num_attributes)\n        At each pixel the value is the barycentric interpolation of the attributes corresponding to the\n        3 vertices of the triangle with which the pixel's ray intersected. If the pixel's ray does not intersect\n        any triangle the value at that pixel will be 0s.\n    zs: float array, shape (height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal": {"fullname": "b3d.RendererOriginal", "modulename": "b3d", "qualname": "RendererOriginal", "kind": "class", "doc": "<p></p>\n"}, "b3d.RendererOriginal.__init__": {"fullname": "b3d.RendererOriginal.__init__", "modulename": "b3d", "qualname": "RendererOriginal.__init__", "kind": "function", "doc": "<p>Triangle mesh renderer.</p>\n\n<p>Parameters:\n    width: int\n        Image width.\n    height: int\n        Image height.\n    fx: float\n        Focal length x.\n    fy: float\n        Focal length y.\n    cx: float\n        Principal point x.\n    cy: float\n        Principal point y.\n    near: float\n        Near plane.\n    far: float\n        Far plane.\n    num_layers: int\n        Number of layers in the depth buffer.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span><span class=\"o\">=</span><span class=\"mf\">75.0</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span><span class=\"o\">=</span><span class=\"mf\">75.0</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"mf\">50.0</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"mf\">50.0</span>,</span><span class=\"param\">\t<span class=\"n\">near</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">far</span><span class=\"o\">=</span><span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">scaling</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span>)</span>"}, "b3d.RendererOriginal.renderer_env": {"fullname": "b3d.RendererOriginal.renderer_env", "modulename": "b3d", "qualname": "RendererOriginal.renderer_env", "kind": "variable", "doc": "<p></p>\n"}, "b3d.RendererOriginal.set_intrinsics": {"fullname": "b3d.RendererOriginal.set_intrinsics", "modulename": "b3d", "qualname": "RendererOriginal.set_intrinsics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.rasterize_many": {"fullname": "b3d.RendererOriginal.rasterize_many", "modulename": "b3d", "qualname": "RendererOriginal.rasterize_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.rasterize": {"fullname": "b3d.RendererOriginal.rasterize", "modulename": "b3d", "qualname": "RendererOriginal.rasterize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.rasterize_mesh": {"fullname": "b3d.RendererOriginal.rasterize_mesh", "modulename": "b3d", "qualname": "RendererOriginal.rasterize_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.rasterize_original": {"fullname": "b3d.RendererOriginal.rasterize_original", "modulename": "b3d", "qualname": "RendererOriginal.rasterize_original", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.interpolate_many": {"fullname": "b3d.RendererOriginal.interpolate_many", "modulename": "b3d", "qualname": "RendererOriginal.interpolate_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attr</span>, </span><span class=\"param\"><span class=\"n\">rast</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.interpolate": {"fullname": "b3d.RendererOriginal.interpolate", "modulename": "b3d", "qualname": "RendererOriginal.interpolate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attr</span>, </span><span class=\"param\"><span class=\"n\">rast</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.render_many": {"fullname": "b3d.RendererOriginal.render_many", "modulename": "b3d", "qualname": "RendererOriginal.render_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.render": {"fullname": "b3d.RendererOriginal.render", "modulename": "b3d", "qualname": "RendererOriginal.render", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.render_rgbd_many": {"fullname": "b3d.RendererOriginal.render_rgbd_many", "modulename": "b3d", "qualname": "RendererOriginal.render_rgbd_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.render_rgbd": {"fullname": "b3d.RendererOriginal.render_rgbd", "modulename": "b3d", "qualname": "RendererOriginal.render_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"fullname": "b3d.RendererOriginal.render_rgbd_from_mesh", "modulename": "b3d", "qualname": "RendererOriginal.render_rgbd_from_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.RendererOriginal.rr_log_rgbd": {"fullname": "b3d.RendererOriginal.rr_log_rgbd", "modulename": "b3d", "qualname": "RendererOriginal.rr_log_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span>, </span><span class=\"param\"><span class=\"n\">rgbd</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose": {"fullname": "b3d.Pose", "modulename": "b3d", "qualname": "Pose", "kind": "class", "doc": "<p>Pose class with positions and quaternions representing rotation.</p>\n"}, "b3d.Pose.__init__": {"fullname": "b3d.Pose.__init__", "modulename": "b3d", "qualname": "Pose.__init__", "kind": "function", "doc": "<p>3D rigid transformation</p>\n\n<p>position: 3D translation vector\nquaternion: 4D quaternion in xyzw</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">quaternion</span></span>)</span>"}, "b3d.Pose.identity_quaternion": {"fullname": "b3d.Pose.identity_quaternion", "modulename": "b3d", "qualname": "Pose.identity_quaternion", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0., 0., 0., 1.], dtype=float32)"}, "b3d.Pose.unit_quaternion": {"fullname": "b3d.Pose.unit_quaternion", "modulename": "b3d", "qualname": "Pose.unit_quaternion", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.pos": {"fullname": "b3d.Pose.pos", "modulename": "b3d", "qualname": "Pose.pos", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.position": {"fullname": "b3d.Pose.position", "modulename": "b3d", "qualname": "Pose.position", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.xyzw": {"fullname": "b3d.Pose.xyzw", "modulename": "b3d", "qualname": "Pose.xyzw", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.quat": {"fullname": "b3d.Pose.quat", "modulename": "b3d", "qualname": "Pose.quat", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.quaternion": {"fullname": "b3d.Pose.quaternion", "modulename": "b3d", "qualname": "Pose.quaternion", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.wxyz": {"fullname": "b3d.Pose.wxyz", "modulename": "b3d", "qualname": "Pose.wxyz", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.rot": {"fullname": "b3d.Pose.rot", "modulename": "b3d", "qualname": "Pose.rot", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.normalize": {"fullname": "b3d.Pose.normalize", "modulename": "b3d", "qualname": "Pose.normalize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.quat_in_upper_hemisphere": {"fullname": "b3d.Pose.quat_in_upper_hemisphere", "modulename": "b3d", "qualname": "Pose.quat_in_upper_hemisphere", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.canonical": {"fullname": "b3d.Pose.canonical", "modulename": "b3d", "qualname": "Pose.canonical", "kind": "function", "doc": "<p>Chooses a canonical representative for the quaternion of the pose, i.e.\nchooses from {q, -q} s.t. q[3] &gt;= 0. Note that if q[3]==0 there is still ambiguity.</p>\n\n<p>Recall that SO(3) is isomorphic to  S^3/x~-x and\nalso to D^3/~ where x~-x for x in S^2 = \\partial D^3.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.flatten": {"fullname": "b3d.Pose.flatten", "modulename": "b3d", "qualname": "Pose.flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.tree_flatten": {"fullname": "b3d.Pose.tree_flatten", "modulename": "b3d", "qualname": "Pose.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.tree_unflatten": {"fullname": "b3d.Pose.tree_unflatten", "modulename": "b3d", "qualname": "Pose.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.copy": {"fullname": "b3d.Pose.copy", "modulename": "b3d", "qualname": "Pose.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.flat": {"fullname": "b3d.Pose.flat", "modulename": "b3d", "qualname": "Pose.flat", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.shape": {"fullname": "b3d.Pose.shape", "modulename": "b3d", "qualname": "Pose.shape", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Pose.reshape": {"fullname": "b3d.Pose.reshape", "modulename": "b3d", "qualname": "Pose.reshape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.slice": {"fullname": "b3d.Pose.slice", "modulename": "b3d", "qualname": "Pose.slice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.as_matrix": {"fullname": "b3d.Pose.as_matrix", "modulename": "b3d", "qualname": "Pose.as_matrix", "kind": "function", "doc": "<p>Return a 4x4 pose matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.identity": {"fullname": "b3d.Pose.identity", "modulename": "b3d", "qualname": "Pose.identity", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.eye": {"fullname": "b3d.Pose.eye", "modulename": "b3d", "qualname": "Pose.eye", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.id": {"fullname": "b3d.Pose.id", "modulename": "b3d", "qualname": "Pose.id", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.apply": {"fullname": "b3d.Pose.apply", "modulename": "b3d", "qualname": "Pose.apply", "kind": "function", "doc": "<p>Apply pose to vectors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vec</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.Pose.compose": {"fullname": "b3d.Pose.compose", "modulename": "b3d", "qualname": "Pose.compose", "kind": "function", "doc": "<p>Compose with other pose.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span></span><span class=\"return-annotation\">) -> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>:</span></span>", "funcdef": "def"}, "b3d.Pose.scale": {"fullname": "b3d.Pose.scale", "modulename": "b3d", "qualname": "Pose.scale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>:</span></span>", "funcdef": "def"}, "b3d.Pose.concatenate_poses": {"fullname": "b3d.Pose.concatenate_poses", "modulename": "b3d", "qualname": "Pose.concatenate_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.concat": {"fullname": "b3d.Pose.concat", "modulename": "b3d", "qualname": "Pose.concat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.stack_poses": {"fullname": "b3d.Pose.stack_poses", "modulename": "b3d", "qualname": "Pose.stack_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.split": {"fullname": "b3d.Pose.split", "modulename": "b3d", "qualname": "Pose.split", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">n</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.inv": {"fullname": "b3d.Pose.inv", "modulename": "b3d", "qualname": "Pose.inv", "kind": "function", "doc": "<p>Inverse of pose.</p>\n\n<p>Note that for rotation matrix R and\ntranslation vector x we have</p>\n\n<pre><code>    [[ R x ]  [[ R' -R'x ]  = [[ I  0 ]\n     [ 0 1 ]]  [ 0    1  ]]      0  1 ]]\n</code></pre>\n\n<p>where R' is the transpose of R.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.inverse": {"fullname": "b3d.Pose.inverse", "modulename": "b3d", "qualname": "Pose.inverse", "kind": "function", "doc": "<p>Inverse of pose.</p>\n\n<p>Note that for rotation matrix R and\ntranslation vector x we have</p>\n\n<pre><code>    [[ R x ]  [[ R' -R'x ]  = [[ I  0 ]\n     [ 0 1 ]]  [ 0    1  ]]      0  1 ]]\n</code></pre>\n\n<p>where R' is the transpose of R.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_matrix": {"fullname": "b3d.Pose.from_matrix", "modulename": "b3d", "qualname": "Pose.from_matrix", "kind": "function", "doc": "<p>Create an Pose from a 4x4 matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">matrix</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_xyzw": {"fullname": "b3d.Pose.from_xyzw", "modulename": "b3d", "qualname": "Pose.from_xyzw", "kind": "function", "doc": "<p>Create a pose from a quaternion. With zero translation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_quat": {"fullname": "b3d.Pose.from_quat", "modulename": "b3d", "qualname": "Pose.from_quat", "kind": "function", "doc": "<p>Create a pose from a quaternion. With zero translation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_pos": {"fullname": "b3d.Pose.from_pos", "modulename": "b3d", "qualname": "Pose.from_pos", "kind": "function", "doc": "<p>Create a pose from a vector. With the identity rotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position_vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_translation": {"fullname": "b3d.Pose.from_translation", "modulename": "b3d", "qualname": "Pose.from_translation", "kind": "function", "doc": "<p>Create a pose from a vector. With the identity rotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position_vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_vec": {"fullname": "b3d.Pose.from_vec", "modulename": "b3d", "qualname": "Pose.from_vec", "kind": "function", "doc": "<p>Creates a Pose from a 7-vector [p_x, p_y, p_z, q_x, q_y, q_z, q_w]\nwhere p is the position and q is the quaternion for the rotation.</p>\n\n<p>Args:\n    posxyzw: Jax array with shape (7,)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">posxyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_pos_matrix": {"fullname": "b3d.Pose.from_pos_matrix", "modulename": "b3d", "qualname": "Pose.from_pos_matrix", "kind": "function", "doc": "<p>Create an Pose from a position and a 3x3 matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">matrix</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.from_position_and_target": {"fullname": "b3d.Pose.from_position_and_target", "modulename": "b3d", "qualname": "Pose.from_position_and_target", "kind": "function", "doc": "<p>Create a camera pose at <code>position</code> with the camera-z-axis pointint at <code>target</code>.\nRecall that in world coordinates we assume z-axis is up.</p>\n\n<p>Args:\n    <code>position</code>: 3D position vector of the camera\n    <code>target</code>: 3D position vector of the point to look at\n    <code>up</code>: 3D vector pointing up.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">position</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">up</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.sample_uniform_pose": {"fullname": "b3d.Pose.sample_uniform_pose", "modulename": "b3d", "qualname": "Pose.sample_uniform_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.sample_uniform_pose_vmap": {"fullname": "b3d.Pose.sample_uniform_pose_vmap", "modulename": "b3d", "qualname": "Pose.sample_uniform_pose_vmap", "kind": "function", "doc": "<p>Vectorized version of sample_uniform_pose. Takes similar arguments as sample_uniform_pose but with additional array axes over which sample_uniform_pose is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.sample_gaussian_vmf_pose": {"fullname": "b3d.Pose.sample_gaussian_vmf_pose", "modulename": "b3d", "qualname": "Pose.sample_gaussian_vmf_pose", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"fullname": "b3d.Pose.sample_gaussian_vmf_pose_jit", "modulename": "b3d", "qualname": "Pose.sample_gaussian_vmf_pose_jit", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"fullname": "b3d.Pose.sample_gaussian_vmf_pose_vmap", "modulename": "b3d", "qualname": "Pose.sample_gaussian_vmf_pose_vmap", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Rot": {"fullname": "b3d.Rot", "modulename": "b3d", "qualname": "Rot", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;jax._src.scipy.spatial.transform.Rotation&#x27;&gt;"}, "b3d.MeshLibrary": {"fullname": "b3d.MeshLibrary", "modulename": "b3d", "qualname": "MeshLibrary", "kind": "class", "doc": "<p></p>\n"}, "b3d.MeshLibrary.__init__": {"fullname": "b3d.MeshLibrary.__init__", "modulename": "b3d", "qualname": "MeshLibrary.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">vertex_index_to_object</span></span>)</span>"}, "b3d.MeshLibrary.vertices": {"fullname": "b3d.MeshLibrary.vertices", "modulename": "b3d", "qualname": "MeshLibrary.vertices", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.faces": {"fullname": "b3d.MeshLibrary.faces", "modulename": "b3d", "qualname": "MeshLibrary.faces", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.ranges": {"fullname": "b3d.MeshLibrary.ranges", "modulename": "b3d", "qualname": "MeshLibrary.ranges", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.attributes": {"fullname": "b3d.MeshLibrary.attributes", "modulename": "b3d", "qualname": "MeshLibrary.attributes", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.vertex_index_to_object": {"fullname": "b3d.MeshLibrary.vertex_index_to_object", "modulename": "b3d", "qualname": "MeshLibrary.vertex_index_to_object", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.objects": {"fullname": "b3d.MeshLibrary.objects", "modulename": "b3d", "qualname": "MeshLibrary.objects", "kind": "variable", "doc": "<p></p>\n"}, "b3d.MeshLibrary.make_empty_library": {"fullname": "b3d.MeshLibrary.make_empty_library", "modulename": "b3d", "qualname": "MeshLibrary.make_empty_library", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.tree_flatten": {"fullname": "b3d.MeshLibrary.tree_flatten", "modulename": "b3d", "qualname": "MeshLibrary.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.tree_unflatten": {"fullname": "b3d.MeshLibrary.tree_unflatten", "modulename": "b3d", "qualname": "MeshLibrary.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.get_object_name": {"fullname": "b3d.MeshLibrary.get_object_name", "modulename": "b3d", "qualname": "MeshLibrary.get_object_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj_idx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.get_num_objects": {"fullname": "b3d.MeshLibrary.get_num_objects", "modulename": "b3d", "qualname": "MeshLibrary.get_num_objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.add_object": {"fullname": "b3d.MeshLibrary.add_object", "modulename": "b3d", "qualname": "MeshLibrary.add_object", "kind": "function", "doc": "<p>Given a new set of vertices and faces, update library.\nThe input vertices/faces should correspond to a novel object, not a\nnovel copy of an object already indexed by the library.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">attributes</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.MeshLibrary.add_trimesh": {"fullname": "b3d.MeshLibrary.add_trimesh", "modulename": "b3d", "qualname": "MeshLibrary.add_trimesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span>, </span><span class=\"param\"><span class=\"n\">vertex_scale_factor</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh": {"fullname": "b3d.Mesh", "modulename": "b3d", "qualname": "Mesh", "kind": "class", "doc": "<p></p>\n"}, "b3d.Mesh.__init__": {"fullname": "b3d.Mesh.__init__", "modulename": "b3d", "qualname": "Mesh.__init__", "kind": "function", "doc": "<p>The Mesh class represents a 3D triangle mesh with the shape represented in terms\nof 3D vertices and faces that form triangles from the vertices. And, the vertex_attributes\nare associated with each of the vertices.</p>\n\n<p>vertices: jnp.ndarray of shape (N, 3) representing the 3D coordinates of the vertices.\nfaces: jnp.ndarray of shape (M, 3) representing the indices of the vertices that form the faces.\nvertex_attributes: jnp.ndarray of shape (N, D) representing the attributes of the vertices.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">vertex_attributes</span></span>)</span>"}, "b3d.Mesh.vertices": {"fullname": "b3d.Mesh.vertices", "modulename": "b3d", "qualname": "Mesh.vertices", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Mesh.faces": {"fullname": "b3d.Mesh.faces", "modulename": "b3d", "qualname": "Mesh.faces", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Mesh.vertex_attributes": {"fullname": "b3d.Mesh.vertex_attributes", "modulename": "b3d", "qualname": "Mesh.vertex_attributes", "kind": "variable", "doc": "<p></p>\n"}, "b3d.Mesh.tree_flatten": {"fullname": "b3d.Mesh.tree_flatten", "modulename": "b3d", "qualname": "Mesh.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.tree_unflatten": {"fullname": "b3d.Mesh.tree_unflatten", "modulename": "b3d", "qualname": "Mesh.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.copy": {"fullname": "b3d.Mesh.copy", "modulename": "b3d", "qualname": "Mesh.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.from_obj_file": {"fullname": "b3d.Mesh.from_obj_file", "modulename": "b3d", "qualname": "Mesh.from_obj_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.from_obj": {"fullname": "b3d.Mesh.from_obj", "modulename": "b3d", "qualname": "Mesh.from_obj", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.from_trimesh": {"fullname": "b3d.Mesh.from_trimesh", "modulename": "b3d", "qualname": "Mesh.from_trimesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trimesh_mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.save": {"fullname": "b3d.Mesh.save", "modulename": "b3d", "qualname": "Mesh.save", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.transform": {"fullname": "b3d.Mesh.transform", "modulename": "b3d", "qualname": "Mesh.transform", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.merge_meshes": {"fullname": "b3d.Mesh.merge_meshes", "modulename": "b3d", "qualname": "Mesh.merge_meshes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.transform_and_merge_meshes": {"fullname": "b3d.Mesh.transform_and_merge_meshes", "modulename": "b3d", "qualname": "Mesh.transform_and_merge_meshes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshes</span>, </span><span class=\"param\"><span class=\"n\">poses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.transform_mesh": {"fullname": "b3d.Mesh.transform_mesh", "modulename": "b3d", "qualname": "Mesh.transform_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mesh</span>, </span><span class=\"param\"><span class=\"n\">pose</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.squeeze_mesh": {"fullname": "b3d.Mesh.squeeze_mesh", "modulename": "b3d", "qualname": "Mesh.squeeze_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"fullname": "b3d.Mesh.mesh_from_xyz_colors_dimensions", "modulename": "b3d", "qualname": "Mesh.mesh_from_xyz_colors_dimensions", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span>, </span><span class=\"param\"><span class=\"n\">colors</span>, </span><span class=\"param\"><span class=\"n\">dimensions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.rr_visualize": {"fullname": "b3d.Mesh.rr_visualize", "modulename": "b3d", "qualname": "Mesh.rr_visualize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">channel</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.scale": {"fullname": "b3d.Mesh.scale", "modulename": "b3d", "qualname": "Mesh.scale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scale</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.cube_mesh": {"fullname": "b3d.Mesh.cube_mesh", "modulename": "b3d", "qualname": "Mesh.cube_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.Mesh.shape": {"fullname": "b3d.Mesh.shape", "modulename": "b3d", "qualname": "Mesh.shape", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d": {"fullname": "b3d.bayes3d", "modulename": "b3d.bayes3d", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.enumerative_proposals": {"fullname": "b3d.bayes3d.enumerative_proposals", "modulename": "b3d.bayes3d.enumerative_proposals", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"fullname": "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move", "modulename": "b3d.bayes3d.enumerative_proposals", "qualname": "enumerate_and_select_best_move", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addressses</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">all_deltas</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"fullname": "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move", "modulename": "b3d.bayes3d.enumerative_proposals", "qualname": "gvmf_and_select_best_move", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">variance</span>, </span><span class=\"param\"><span class=\"n\">concentration</span>, </span><span class=\"param\"><span class=\"n\">address</span>, </span><span class=\"param\"><span class=\"n\">number</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"fullname": "b3d.bayes3d.enumerative_proposals.gvmf_and_sample", "modulename": "b3d.bayes3d.enumerative_proposals", "qualname": "gvmf_and_sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">variance</span>, </span><span class=\"param\"><span class=\"n\">concentration</span>, </span><span class=\"param\"><span class=\"n\">address</span>, </span><span class=\"param\"><span class=\"n\">number</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.likelihoods": {"fullname": "b3d.bayes3d.likelihoods", "modulename": "b3d.bayes3d.likelihoods", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.likelihoods.PixelOutlier": {"fullname": "b3d.bayes3d.likelihoods.PixelOutlier", "modulename": "b3d.bayes3d.likelihoods", "qualname": "PixelOutlier", "kind": "class", "doc": "<p></p>\n"}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"fullname": "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args", "modulename": "b3d.bayes3d.likelihoods", "qualname": "PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"fullname": "b3d.bayes3d.likelihoods.PixelOutlier.logpdf", "modulename": "b3d.bayes3d.likelihoods", "qualname": "PixelOutlier.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">height</span>,</span><span class=\"param\">\t<span class=\"n\">width</span>,</span><span class=\"param\">\t<span class=\"n\">near</span>,</span><span class=\"param\">\t<span class=\"n\">far</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"fullname": "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs", "modulename": "b3d.bayes3d.likelihoods", "qualname": "pixel_outlier_logpdfs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">height</span>,</span><span class=\"param\">\t<span class=\"n\">width</span>,</span><span class=\"param\">\t<span class=\"n\">near</span>,</span><span class=\"param\">\t<span class=\"n\">far</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library": {"fullname": "b3d.bayes3d.mesh_library", "modulename": "b3d.bayes3d.mesh_library", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary", "kind": "class", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.__init__", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">vertex_index_to_object</span></span>)</span>"}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.vertices", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.vertices", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.faces", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.faces", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.ranges", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.ranges", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.attributes", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.attributes", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.vertex_index_to_object", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.objects", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.objects", "kind": "variable", "doc": "<p></p>\n"}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.make_empty_library", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.get_object_name", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj_idx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.get_num_objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.add_object", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.add_object", "kind": "function", "doc": "<p>Given a new set of vertices and faces, update library.\nThe input vertices/faces should correspond to a novel object, not a\nnovel copy of an object already indexed by the library.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">attributes</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"fullname": "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh", "modulename": "b3d.bayes3d.mesh_library", "qualname": "MeshLibrary.add_trimesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span>, </span><span class=\"param\"><span class=\"n\">vertex_scale_factor</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model": {"fullname": "b3d.bayes3d.model", "modulename": "b3d.bayes3d.model", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.model.ModelArgs": {"fullname": "b3d.bayes3d.model.ModelArgs", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs", "kind": "class", "doc": "<p>ModelArgs(color_tolerance, depth_tolerance, inlier_score, outlier_prob, color_multiplier, depth_multiplier)</p>\n", "bases": "builtins.tuple"}, "b3d.bayes3d.model.ModelArgs.__init__": {"fullname": "b3d.bayes3d.model.ModelArgs.__init__", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.__init__", "kind": "function", "doc": "<p>Create new instance of ModelArgs(color_tolerance, depth_tolerance, inlier_score, outlier_prob, color_multiplier, depth_multiplier)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">color_tolerance</span>,</span><span class=\"param\">\t<span class=\"n\">depth_tolerance</span>,</span><span class=\"param\">\t<span class=\"n\">inlier_score</span>,</span><span class=\"param\">\t<span class=\"n\">outlier_prob</span>,</span><span class=\"param\">\t<span class=\"n\">color_multiplier</span>,</span><span class=\"param\">\t<span class=\"n\">depth_multiplier</span></span>)</span>"}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"fullname": "b3d.bayes3d.model.ModelArgs.color_tolerance", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.color_tolerance", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"fullname": "b3d.bayes3d.model.ModelArgs.depth_tolerance", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.depth_tolerance", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"fullname": "b3d.bayes3d.model.ModelArgs.inlier_score", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.inlier_score", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n"}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"fullname": "b3d.bayes3d.model.ModelArgs.outlier_prob", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.outlier_prob", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n"}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"fullname": "b3d.bayes3d.model.ModelArgs.color_multiplier", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.color_multiplier", "kind": "variable", "doc": "<p>Alias for field number 4</p>\n"}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"fullname": "b3d.bayes3d.model.ModelArgs.depth_multiplier", "modulename": "b3d.bayes3d.model", "qualname": "ModelArgs.depth_multiplier", "kind": "variable", "doc": "<p>Alias for field number 5</p>\n"}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"fullname": "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace", "modulename": "b3d.bayes3d.model", "qualname": "get_rgb_depth_inliers_from_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"fullname": "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args", "modulename": "b3d.bayes3d.model", "qualname": "get_rgb_depth_inliers_from_observed_rendered_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.RGBDSensorModel": {"fullname": "b3d.bayes3d.model.RGBDSensorModel", "modulename": "b3d.bayes3d.model", "qualname": "RGBDSensorModel", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"fullname": "b3d.bayes3d.model.RGBDSensorModel.__init__", "modulename": "b3d.bayes3d.model", "qualname": "RGBDSensorModel.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"fullname": "b3d.bayes3d.model.RGBDSensorModel.sample", "modulename": "b3d.bayes3d.model", "qualname": "RGBDSensorModel.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">rendered_rgb</span>, </span><span class=\"param\"><span class=\"n\">rendered_depth</span>, </span><span class=\"param\"><span class=\"n\">model_args</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"fullname": "b3d.bayes3d.model.RGBDSensorModel.logpdf", "modulename": "b3d.bayes3d.model", "qualname": "RGBDSensorModel.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">observed</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.rgbd_sensor_model": {"fullname": "b3d.bayes3d.model.rgbd_sensor_model", "modulename": "b3d.bayes3d.model", "qualname": "rgbd_sensor_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "RGBDSensorModel()"}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"fullname": "b3d.bayes3d.model.model_multiobject_gl_factory", "modulename": "b3d.bayes3d.model", "qualname": "model_multiobject_gl_factory", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">renderer</span>, </span><span class=\"param\"><span class=\"n\">image_likelihood</span><span class=\"o\">=</span><span class=\"n\">RGBDSensorModel</span><span class=\"p\">()</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"fullname": "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace", "modulename": "b3d.bayes3d.model", "qualname": "get_rendered_rgb_depth_from_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.get_poses_from_trace": {"fullname": "b3d.bayes3d.model.get_poses_from_trace", "modulename": "b3d.bayes3d.model", "qualname": "get_poses_from_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.get_object_ids_from_trace": {"fullname": "b3d.bayes3d.model.get_object_ids_from_trace", "modulename": "b3d.bayes3d.model", "qualname": "get_object_ids_from_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"fullname": "b3d.bayes3d.model.rerun_visualize_trace_t", "modulename": "b3d.bayes3d.model", "qualname": "rerun_visualize_trace_t", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">modes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;rgb&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;depth&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;inliers&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.bayes3d.scene_graph": {"fullname": "b3d.bayes3d.scene_graph", "modulename": "b3d.bayes3d.scene_graph", "kind": "module", "doc": "<p></p>\n"}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"fullname": "b3d.bayes3d.scene_graph.contact_parameters_to_pose", "modulename": "b3d.bayes3d.scene_graph", "qualname": "contact_parameters_to_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cp</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera": {"fullname": "b3d.camera", "modulename": "b3d.camera", "kind": "module", "doc": "<p></p>\n"}, "b3d.camera.ImageShape": {"fullname": "b3d.camera.ImageShape", "modulename": "b3d.camera", "qualname": "ImageShape", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "tuple[int, ...]"}, "b3d.camera.ScreenCoordinates": {"fullname": "b3d.camera.ScreenCoordinates", "modulename": "b3d.camera", "qualname": "ScreenCoordinates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.camera.CameraCoordinates": {"fullname": "b3d.camera.CameraCoordinates", "modulename": "b3d.camera", "qualname": "CameraCoordinates", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.camera.DepthImage": {"fullname": "b3d.camera.DepthImage", "modulename": "b3d.camera", "qualname": "DepthImage", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.camera.CameraMatrix3x3": {"fullname": "b3d.camera.CameraMatrix3x3", "modulename": "b3d.camera", "qualname": "CameraMatrix3x3", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.camera.BoundingBox": {"fullname": "b3d.camera.BoundingBox", "modulename": "b3d.camera", "qualname": "BoundingBox", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.camera.Intrinsics": {"fullname": "b3d.camera.Intrinsics", "modulename": "b3d.camera", "qualname": "Intrinsics", "kind": "class", "doc": "<p>Intrinsics(width, height, fx, fy, cx, cy, near, far)</p>\n", "bases": "typing.NamedTuple"}, "b3d.camera.Intrinsics.__init__": {"fullname": "b3d.camera.Intrinsics.__init__", "modulename": "b3d.camera", "qualname": "Intrinsics.__init__", "kind": "function", "doc": "<p>Create new instance of Intrinsics(width, height, fx, fy, cx, cy, near, far)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">near</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">far</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span>)</span>"}, "b3d.camera.Intrinsics.width": {"fullname": "b3d.camera.Intrinsics.width", "modulename": "b3d.camera", "qualname": "Intrinsics.width", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.height": {"fullname": "b3d.camera.Intrinsics.height", "modulename": "b3d.camera", "qualname": "Intrinsics.height", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.fx": {"fullname": "b3d.camera.Intrinsics.fx", "modulename": "b3d.camera", "qualname": "Intrinsics.fx", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.fy": {"fullname": "b3d.camera.Intrinsics.fy", "modulename": "b3d.camera", "qualname": "Intrinsics.fy", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.cx": {"fullname": "b3d.camera.Intrinsics.cx", "modulename": "b3d.camera", "qualname": "Intrinsics.cx", "kind": "variable", "doc": "<p>Alias for field number 4</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.cy": {"fullname": "b3d.camera.Intrinsics.cy", "modulename": "b3d.camera", "qualname": "Intrinsics.cy", "kind": "variable", "doc": "<p>Alias for field number 5</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.near": {"fullname": "b3d.camera.Intrinsics.near", "modulename": "b3d.camera", "qualname": "Intrinsics.near", "kind": "variable", "doc": "<p>Alias for field number 6</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.far": {"fullname": "b3d.camera.Intrinsics.far", "modulename": "b3d.camera", "qualname": "Intrinsics.far", "kind": "variable", "doc": "<p>Alias for field number 7</p>\n", "annotation": ": jax.Array"}, "b3d.camera.Intrinsics.from_array": {"fullname": "b3d.camera.Intrinsics.from_array", "modulename": "b3d.camera", "qualname": "Intrinsics.from_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.Intrinsics.as_array": {"fullname": "b3d.camera.Intrinsics.as_array", "modulename": "b3d.camera", "qualname": "Intrinsics.as_array", "kind": "function", "doc": "<p>Returns intrinsics as a float array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.Intrinsics.downscale": {"fullname": "b3d.camera.Intrinsics.downscale", "modulename": "b3d.camera", "qualname": "Intrinsics.downscale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.RenderConfig": {"fullname": "b3d.camera.RenderConfig", "modulename": "b3d.camera", "qualname": "RenderConfig", "kind": "class", "doc": "<p>RenderConfig(bg_color,)</p>\n", "bases": "typing.NamedTuple"}, "b3d.camera.RenderConfig.__init__": {"fullname": "b3d.camera.RenderConfig.__init__", "modulename": "b3d.camera", "qualname": "RenderConfig.__init__", "kind": "function", "doc": "<p>Create new instance of RenderConfig(bg_color,)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">bg_color</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span></span>)</span>"}, "b3d.camera.RenderConfig.bg_color": {"fullname": "b3d.camera.RenderConfig.bg_color", "modulename": "b3d.camera", "qualname": "RenderConfig.bg_color", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n", "annotation": ": jax.Array"}, "b3d.camera.pixel_centers_from_shape": {"fullname": "b3d.camera.pixel_centers_from_shape", "modulename": "b3d.camera", "qualname": "pixel_centers_from_shape", "kind": "function", "doc": "<p>Returns an array of sensor coordinates <code>uv</code> of the centers of each pixel of an image.</p>\n\n<p>Args:\n    <code>img_shape</code>: (H,W) shape of an image.</p>\n\n<p>Returns:\n    (H,W,2) array of sensor coordinates of the centers of each image pixel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">img_shape</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.camera_from_screen_and_depth": {"fullname": "b3d.camera.camera_from_screen_and_depth", "modulename": "b3d.camera", "qualname": "camera_from_screen_and_depth", "kind": "function", "doc": "<p>Returns camera coordinates <code>xyz</code> from sensor coordinates <code>uv</code>, and depth measurements <code>z</code>.\nThese are related by the camera matrix $K$ as follows:\n$$\n    (x, y, z)^T = K^{-1} * (z<em>u, z</em>v, z)^T.\n$$</p>\n\n<p>Args:\n    <code>uv</code>: (...,2) array of  sensor coordinates.\n    <code>z</code>:  (...,)  array of depth measurements.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (...,3) array of camera coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uv</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.camera_from_screen": {"fullname": "b3d.camera.camera_from_screen", "modulename": "b3d.camera", "qualname": "camera_from_screen", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uv</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.camera_from_depth": {"fullname": "b3d.camera.camera_from_depth", "modulename": "b3d.camera", "qualname": "camera_from_depth", "kind": "function", "doc": "<p>Maps to camera coordinates <code>xyz</code> from depth measurements <code>z</code>.\nThe relation between <code>xyz</code> and <code>z</code> is given by\n$$\n    (x, y, z)^T = K^{-1} * (z<em>u, z</em>v, z)^T,\n$$\nwhere $(u,v)$ is the center of the pixel\nassociated with the measurement $z$, and\n$K$ is the camera matrix.</p>\n\n<p>Args:\n    <code>z</code>: (H,W) array of depth measurements.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (H,W,3) array of camera coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.xyz_from_depth": {"fullname": "b3d.camera.xyz_from_depth", "modulename": "b3d.camera", "qualname": "xyz_from_depth", "kind": "function", "doc": "<p>Maps to camera coordinates <code>xyz</code> from depth measurements <code>z</code>.\nThe relation between <code>xyz</code> and <code>z</code> is given by\n$$\n    (x, y, z)^T = K^{-1} * (z<em>u, z</em>v, z)^T,\n$$\nwhere $(u,v)$ is the center of the pixel\nassociated with the measurement $z$, and\n$K$ is the camera matrix.</p>\n\n<p>Args:\n    <code>z</code>: (H,W) array of depth measurements.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (H,W,3) array of camera coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.unproject_depth": {"fullname": "b3d.camera.unproject_depth", "modulename": "b3d.camera", "qualname": "unproject_depth", "kind": "function", "doc": "<p>Maps to camera coordinates <code>xyz</code> from depth measurements <code>z</code>.\nThe relation between <code>xyz</code> and <code>z</code> is given by\n$$\n    (x, y, z)^T = K^{-1} * (z<em>u, z</em>v, z)^T,\n$$\nwhere $(u,v)$ is the center of the pixel\nassociated with the measurement $z$, and\n$K$ is the camera matrix.</p>\n\n<p>Args:\n    <code>z</code>: (H,W) array of depth measurements.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (H,W,3) array of camera coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.screen_from_camera": {"fullname": "b3d.camera.screen_from_camera", "modulename": "b3d.camera", "qualname": "screen_from_camera", "kind": "function", "doc": "<p>Maps to sensor coordintaes <code>uv</code> from camera coordinates <code>xyz</code>, which are\ndefined by $(u,v) = (u'/z,v'/z)$, where\n$$\n    (u', v', z)^T = K * (x, y, z)^T,\n$$\nand $K$ is the camera matrix.</p>\n\n<p>Args:\n    <code>xyz</code>: (...,3) array of camera coordinates.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (...,2) array of screen coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.screen_from_xyz": {"fullname": "b3d.camera.screen_from_xyz", "modulename": "b3d.camera", "qualname": "screen_from_xyz", "kind": "function", "doc": "<p>Maps to sensor coordintaes <code>uv</code> from camera coordinates <code>xyz</code>, which are\ndefined by $(u,v) = (u'/z,v'/z)$, where\n$$\n    (u', v', z)^T = K * (x, y, z)^T,\n$$\nand $K$ is the camera matrix.</p>\n\n<p>Args:\n    <code>xyz</code>: (...,3) array of camera coordinates.\n    <code>intrinsics</code>: Intrinsics.</p>\n\n<p>Returns:\n    (...,2) array of screen coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.screen_from_world": {"fullname": "b3d.camera.screen_from_world", "modulename": "b3d.camera", "qualname": "screen_from_world", "kind": "function", "doc": "<p>Maps to screen coordintaes <code>uv</code> from world coordinates <code>xyz</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.camera_matrix_from_intrinsics": {"fullname": "b3d.camera.camera_matrix_from_intrinsics", "modulename": "b3d.camera", "qualname": "camera_matrix_from_intrinsics", "kind": "function", "doc": "<p>Returns a 3x3 camera matrix following the OpenCV convention, ie.</p>\n\n<pre><code>K = [[fx,  0, cx],\n     [ 0, fy, cy],\n     [ 0,  0,  1]]\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intr</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">Intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.camera_rays_from_intrinsics": {"fullname": "b3d.camera.camera_rays_from_intrinsics", "modulename": "b3d.camera", "qualname": "camera_rays_from_intrinsics", "kind": "function", "doc": "<p>Returns an camera coordinates for each center of a pixel on\nthe embedded camera canvas.</p>\n\n<p>Args:\n    <code>intr</code>: Intrinsics.\nReturns:\n    (H, W, 3)-array of camera coordinates (where <code>H, W</code> are given in <code>intr</code>)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intr</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">Intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.canvas_from_intrinsics": {"fullname": "b3d.camera.canvas_from_intrinsics", "modulename": "b3d.camera", "qualname": "canvas_from_intrinsics", "kind": "function", "doc": "<p>Returns the bounding box of the sensor canvas in camera space.</p>\n\n<p>Args:\n    <code>intr</code>: Intrinsics.\nReturns:\n    (2, 3)-array of camera coordinates, encoding\n    lower-left and upper-right corners of the bounding box.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">intr</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">Intrinsics</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.camera.homogeneous_coordinates": {"fullname": "b3d.camera.homogeneous_coordinates", "modulename": "b3d.camera", "qualname": "homogeneous_coordinates", "kind": "function", "doc": "<p>Maps from planar to homogeneous coordinates, eg.,\nmaps (x,y) to (x, y, 1).</p>\n\n<p>Args:\n    <code>xs</code>: (...,N) array of N-dim points.</p>\n\n<p>Returns:\n    (...,N+1) array of homogeneous coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xs</span>, </span><span class=\"param\"><span class=\"n\">z</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"n\">weak_type</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.planar_coordinates": {"fullname": "b3d.camera.planar_coordinates", "modulename": "b3d.camera", "qualname": "planar_coordinates", "kind": "function", "doc": "<p>Maps homogeneous to planar coordinates, eg.,\nmaps (x,y,z) to (x/z, y/z).</p>\n\n<p>Args:\n    <code>xs</code>: (...,N+1) array of N+1-dim points.</p>\n\n<p>Returns:\n    (...,N) array of planar coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.rgb_for_point_from_img": {"fullname": "b3d.camera.rgb_for_point_from_img", "modulename": "b3d.camera", "qualname": "rgb_for_point_from_img", "kind": "function", "doc": "<p>Projects a point onto an image and returns the color.</p>\n\n<p>Args:\n    <code>xyz</code>: (..., 3) array of 3D points\n    <code>img_rgb</code>: (H, W, 3) array of colors (color image)\n    <code>intrinsics_rgb</code>: Intrinsics</p>\n\n<p>Returns:\n    (..., 3)-array of colors for each point in xyz</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span>, </span><span class=\"param\"><span class=\"n\">img_rgb</span>, </span><span class=\"param\"><span class=\"n\">intrinsics_rgb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.camera.CAM_ALONG_X": {"fullname": "b3d.camera.CAM_ALONG_X", "modulename": "b3d.camera", "qualname": "CAM_ALONG_X", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([[ 0,  0,  1, -1],\n       [ 1,  0,  0,  0],\n       [ 0,  1,  0,  0],\n       [ 0,  0,  0,  0]], dtype=int32)"}, "b3d.chisight": {"fullname": "b3d.chisight", "modulename": "b3d.chisight", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense": {"fullname": "b3d.chisight.dense", "modulename": "b3d.chisight.dense", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.dense_model": {"fullname": "b3d.chisight.dense.dense_model", "modulename": "b3d.chisight.dense.dense_model", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"fullname": "b3d.chisight.dense.dense_model.make_dense_multiobject_model", "modulename": "b3d.chisight.dense.dense_model", "qualname": "make_dense_multiobject_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">renderer</span>, </span><span class=\"param\"><span class=\"n\">likelihood_func</span>, </span><span class=\"param\"><span class=\"n\">sample_func</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer": {"fullname": "b3d.chisight.dense.differentiable_renderer", "modulename": "b3d.chisight.dense.differentiable_renderer", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"fullname": "b3d.chisight.dense.differentiable_renderer.BIGNUM", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "BIGNUM", "kind": "variable", "doc": "<p></p>\n", "default_value": "1000000.0"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams", "kind": "class", "doc": "<p>Hyperparameters for the differentiable renderer.</p>\n\n<ul>\n<li>WINDOW: specifies the size of the window around each pixel.\nThe window will have size (2 * WINDOW + 1) x (2 * WINDOW + 1).</li>\n<li>SIGMA, GAMMA, EPSILON: Hyperparameters for softras-style scoring.\nSee <a href=\"https://arxiv.org/pdf/1904.01786\">https://arxiv.org/pdf/1904.01786</a> for details.\nDecreasing sigma will increase the sharpness of the boundaries.\nDecreasing gamma will increase the effect of the z value on a triangle's\ncontribution to the pixel.\nIncreasing epsilon will increase the weight of the background (ie. of\ncontributions not corresponding to any triangle).\nSee b3d.differentiable_renderer.DEFAULT_HYPERPARAMS for one suggested set of values.</li>\n</ul>\n"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">window</span>, </span><span class=\"param\"><span class=\"n\">sigma</span>, </span><span class=\"param\"><span class=\"n\">gamma</span>, </span><span class=\"param\"><span class=\"n\">epsilon</span></span>)</span>"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams.WINDOW", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams.SIGMA", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams.GAMMA", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"fullname": "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DifferentiableRendererHyperparams.EPSILON", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics", "kind": "class", "doc": "<p>Internal data structure for passing around hyperparameters and camera intrinsics\nwithin the differentiable renderer.</p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hyperparams</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span></span>)</span>"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.hyperparams", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.fx", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.fy", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.cx", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"fullname": "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "HyperparamsAndIntrinsics.cy", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"fullname": "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "DEFAULT_HYPERPARAMS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams object&gt;"}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"fullname": "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "render_to_rgbd_dist_params", "kind": "function", "doc": "<p>Variant of <code>render_to_dist_params</code> for rendering RGBD.\nAccepts RGB vertex attributes and appends depth to them.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">renderer</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">Renderer</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">vertex_rgbs</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams</span><span class=\"o\">=&lt;</span><span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">chisight</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"o\">.</span><span class=\"n\">differentiable_renderer</span><span class=\"o\">.</span><span class=\"n\">DifferentiableRendererHyperparams</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"fullname": "b3d.chisight.dense.differentiable_renderer.render_to_dist_params", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "render_to_dist_params", "kind": "function", "doc": "<p>Differentiable rendering to parameters for a per-pixel\ncategorical distribution over attributes (e.g. RGB or RGBD).</p>\n\n<p>Args:</p>\n\n<ul>\n<li>renderer: b3d.Renderer</li>\n<li>vertices: (V, 3)</li>\n<li>faces: (F, 3)</li>\n<li>vertex_attributes: (F, A) [A=3 for RGB; A=4 for RGBD]</li>\n<li>hyperparams: DifferentiableRendererHyperparams\nReturns:</li>\n<li>weights (H, W, U)</li>\n<li>attributes (H, W, U-1, A)\nFor each pixel, the first weight is the weight assigned to the background\n(ie. assigned to not hitting any object).\nThe remaining weights are those assigned to some triangles in the scene.\nThe attributes measured on those triangles are contained in <code>attributes</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">renderer</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">vertex_attributes</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams</span><span class=\"o\">=&lt;</span><span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">chisight</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"o\">.</span><span class=\"n\">differentiable_renderer</span><span class=\"o\">.</span><span class=\"n\">DifferentiableRendererHyperparams</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">quaternion</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">))</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"fullname": "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "render_to_average_rgbd", "kind": "function", "doc": "<p>Variant of <code>render_to_average</code> for rendering RGBD.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">renderer</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">vertex_rgbs</span>,</span><span class=\"param\">\t<span class=\"n\">background_attribute</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.</span> <span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams</span><span class=\"o\">=&lt;</span><span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">chisight</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"o\">.</span><span class=\"n\">differentiable_renderer</span><span class=\"o\">.</span><span class=\"n\">DifferentiableRendererHyperparams</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"fullname": "b3d.chisight.dense.differentiable_renderer.render_to_average", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "render_to_average", "kind": "function", "doc": "<p>Differentiable rendering to produce an image by averaging\nthe categorical distribution over attributes (e.g. RGB or RGBD)\nreturned by <code>render_to_dist_params</code>.</p>\n\n<p>Args:</p>\n\n<ul>\n<li>renderer: b3d.Renderer</li>\n<li>vertices: (V, 3)</li>\n<li>faces: (F, 3)</li>\n<li>vertex_attributes: (F, A) [A=3 for RGB; A=4 for RGBD]</li>\n<li>background_attribute: (A,) attribute to assign to pixels not hitting any object</li>\n<li>hyperparams: DifferentiableRendererHyperparams\nReturns:</li>\n<li>image (H, W, A)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">renderer</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">vertex_attributes</span>,</span><span class=\"param\">\t<span class=\"n\">background_attribute</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams</span><span class=\"o\">=&lt;</span><span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">chisight</span><span class=\"o\">.</span><span class=\"n\">dense</span><span class=\"o\">.</span><span class=\"n\">differentiable_renderer</span><span class=\"o\">.</span><span class=\"n\">DifferentiableRendererHyperparams</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"fullname": "b3d.chisight.dense.differentiable_renderer.dist_params_to_average", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "dist_params_to_average", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">weights</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">background_attribute</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_pixel_attribute_dist_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ij</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">vertex_attributes</span>,</span><span class=\"param\">\t<span class=\"n\">triangle_intersected_padded</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_weights_and_barycentric_coords", "kind": "function", "doc": "<p>Returns:</p>\n\n<ul>\n<li>unique_triangle_indices (U,)\nThe values will be\n    - one token -10 for the background, at index 0\n    - one token -2 of padding (ignore these)\n    - the rest are the indices of the unique triangles in the window</li>\n<li>weights (U,)\nThe weights for each triangle.  Will be 0 in every slot where <code>unique_triangle_indices</code> is -2.</li>\n<li>barycentric_coords (U - 1, 3)\nThe interpolated attributes for each triangle (and nothing for the background).\nWill filled with -1s for every triangle where <code>unique_triangle_indices</code> is -2.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ij</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">triangle_intersected_padded</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"fullname": "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "barycentric_interpolation", "kind": "function", "doc": "<p>Args:</p>\n\n<ul>\n<li>vertex_indices: (3,) indices of the vertices in the triangle</li>\n<li>vertex_attributes: (V, A) attributes of the vertices</li>\n<li>barycentric_coords: (3,) barycentric coordinates of the point\nReturns:</li>\n<li>interpolated_attributes: (A,) interpolated attributes of the point</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertex_indices</span>, </span><span class=\"param\"><span class=\"n\">vertex_attributes</span>, </span><span class=\"param\"><span class=\"n\">barycentric_coords</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_z_values", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_z_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ij</span>,</span><span class=\"param\">\t<span class=\"n\">unique_triangle_values</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_z_value", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_z_value", "kind": "function", "doc": "<p>Project pixel (i, j) to the plane of <code>triangle_idx</code>, then\ncompute the z value of the projected point.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ij</span>, </span><span class=\"param\"><span class=\"n\">triangle_idx</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_signed_dists_and_barycentric_coords", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">ij</span>,</span><span class=\"param\">\t<span class=\"n\">unique_triangle_values</span>,</span><span class=\"param\">\t<span class=\"n\">vertices</span>,</span><span class=\"param\">\t<span class=\"n\">faces</span>,</span><span class=\"param\">\t<span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"fullname": "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "get_signed_dist_and_barycentric_coords", "kind": "function", "doc": "<p>Project pixel (i, j) to the plane of <code>triangle_idx</code>, obtaining 3D point <code>p</code>,\nthen compute\n (1) the signed distance within that plane from p\n    to the boundary of the triangle.  (Positive = inside the triangle,\n    negative = outside the triangle.)\n (2) the barycentric coordinates of <code>p</code> within the triangle, as a triple (a, b, c)\n    summing to 1 (up to floating point).  These coordinates give the triangle area across\n    from the 0th, 1st, and 2nd vertices in triangle <code>triangle_idx</code>, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ij</span>, </span><span class=\"param\"><span class=\"n\">triangle_idx</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"fullname": "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "pt_is_in_plane", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">triangle</span>, </span><span class=\"param\"><span class=\"n\">point_on_plane</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"fullname": "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "project_pixel_to_plane", "kind": "function", "doc": "<p>Project pixel ij to the plane defined by the given triangle.\nArgs:</p>\n\n<ul>\n<li>ij: (2,) pixel coordinates</li>\n<li>triangle: (3, 3) vertices of the triangle (triangle[f] is one vertex)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ij</span>, </span><span class=\"param\"><span class=\"n\">triangle</span>, </span><span class=\"param\"><span class=\"n\">hyperparams_and_intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"fullname": "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "project_ray_to_plane", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ray_origin</span>, </span><span class=\"param\"><span class=\"n\">ray_dir</span>, </span><span class=\"param\"><span class=\"n\">triangle</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"fullname": "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg", "modulename": "b3d.chisight.dense.differentiable_renderer", "qualname": "dist_to_line_seg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span>, </span><span class=\"param\"><span class=\"n\">b</span>, </span><span class=\"param\"><span class=\"n\">p</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods": {"fullname": "b3d.chisight.dense.likelihoods", "modulename": "b3d.chisight.dense.likelihoods", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood", "qualname": "log_gaussian_kernel", "kind": "function", "doc": "<p>Creates a 2D Gaussian kernel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood", "qualname": "filter_half_width", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood", "qualname": "filter_size", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood", "qualname": "blur_intermediate_likelihood_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "qualname": "log_gaussian_kernel", "kind": "function", "doc": "<p>Creates a 2D Gaussian kernel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "qualname": "filter_half_width", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "qualname": "filter_size", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff", "qualname": "blur_intermediate_likelihood_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "log_gaussian_kernel", "kind": "function", "doc": "<p>Creates a 2D Gaussian kernel.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">sigma</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "lower_bound", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0., 0., 0., 0.], dtype=float32)"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "upper_bound", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([  1.,   1.,   1., 100.], dtype=float32)"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "filter_size", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "blur_intermediate_sample_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">latent_rgbd</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"fullname": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func", "modulename": "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian", "qualname": "blur_intermediate_likelihood_func", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">latent_rgbd</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.image_likelihood": {"fullname": "b3d.chisight.dense.likelihoods.image_likelihood", "modulename": "b3d.chisight.dense.likelihoods.image_likelihood", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"fullname": "b3d.chisight.dense.likelihoods.kray_outlier_volume", "modulename": "b3d.chisight.dense.likelihoods.kray_outlier_volume", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"fullname": "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args", "modulename": "b3d.chisight.dense.likelihoods.kray_outlier_volume", "qualname": "get_rgb_depth_inliers_from_observed_rendered_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">color_tolerance</span>,</span><span class=\"param\">\t<span class=\"n\">depth_tolerance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"fullname": "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate", "modulename": "b3d.chisight.dense.likelihoods.kray_outlier_volume", "qualname": "kray_likelihood_intermediate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">scene_mesh</span>, </span><span class=\"param\"><span class=\"n\">renderer</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.krays": {"fullname": "b3d.chisight.dense.likelihoods.krays", "modulename": "b3d.chisight.dense.likelihoods.krays", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs", "kind": "class", "doc": "<p>KRaysImageLikelihoodArgs(color_tolerance, depth_tolerance, inlier_score, outlier_prob, multiplier)</p>\n", "bases": "builtins.tuple"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.__init__", "kind": "function", "doc": "<p>Create new instance of KRaysImageLikelihoodArgs(color_tolerance, depth_tolerance, inlier_score, outlier_prob, multiplier)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">color_tolerance</span>,</span><span class=\"param\">\t<span class=\"n\">depth_tolerance</span>,</span><span class=\"param\">\t<span class=\"n\">inlier_score</span>,</span><span class=\"param\">\t<span class=\"n\">outlier_prob</span>,</span><span class=\"param\">\t<span class=\"n\">multiplier</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.color_tolerance", "kind": "variable", "doc": "<p>Alias for field number 0</p>\n"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.depth_tolerance", "kind": "variable", "doc": "<p>Alias for field number 1</p>\n"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.inlier_score", "kind": "variable", "doc": "<p>Alias for field number 2</p>\n"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.outlier_prob", "kind": "variable", "doc": "<p>Alias for field number 3</p>\n"}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"fullname": "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "KRaysImageLikelihoodArgs.multiplier", "kind": "variable", "doc": "<p>Alias for field number 4</p>\n"}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"fullname": "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "get_rgb_depth_inliers_from_observed_rendered_args", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_rgb</span>,</span><span class=\"param\">\t<span class=\"n\">observed_depth</span>,</span><span class=\"param\">\t<span class=\"n\">rendered_depth</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"fullname": "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model", "modulename": "b3d.chisight.dense.likelihoods.krays", "qualname": "make_krays_image_observation_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">renderer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "kind": "module", "doc": "<p>This file defines several likelihoods over RGBD images.</p>\n"}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.normalize", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "normalize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">probs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap", "kind": "class", "doc": "<p><code>ArgMap(dist : genjax.ExactDensity, argmap : function)(*args)</code>\nis the distribution which samples from <code>dist(*argmap(*args))</code>.</p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap.dist", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap.argmap", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ArgMap.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist", "kind": "class", "doc": "<p>Given a distribution on a pixel's value, returns a distribution on an image.\nConstructor args:</p>\n\n<ul>\n<li>pixel_dist: Dist on pixel value (e.g. on an RGB or RGBD value)</li>\n<li>map_args: [bool] (N,) whether the nth arg should be mapped over\nalong the width and height axes (otherwise all pixels will have\nthe same value for that arg)\nDistribution args:</li>\n<li>height</li>\n<li>width</li>\n<li>*pixel_dist_args</li>\n</ul>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist.pixel_dist", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist.map_args", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">pixel_dist_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "ImageDistFromPixelDist.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed_image</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">pixel_dist_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "UniformRGBDPixelModel", "kind": "class", "doc": "<p>Args:</p>\n\n<ul>\n<li>mindepth () (min value for uniform on depth)</li>\n<li>maxdepth () (max value for uniform on depth)\nReturns:</li>\n<li>rgbd (4,)</li>\n</ul>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "UniformRGBDPixelModel.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "UniformRGBDPixelModel.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mindepth</span>, </span><span class=\"param\"><span class=\"n\">maxdepth</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "UniformRGBDPixelModel.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">mindepth</span>, </span><span class=\"param\"><span class=\"n\">maxdepth</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "uniform_rgbd_pixel_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "UniformRGBDPixelModel()"}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "uniform_rgbd_image_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "ImageDistFromPixelDist(pixel_dist=UniformRGBDPixelModel(), map_args=[False, False])"}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "image_sample", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([[[0.69776773, 0.8955662 , 0.7551701 , 0.56184995],\n        [0.14049637, 0.02801001, 0.47871697, 0.6806399 ],\n        [0.6895969 , 0.61208975, 0.93284   , 0.77910936],\n        ...,\n        [0.9295002 , 0.6997621 , 0.23418224, 0.36495158],\n        [0.8690524 , 0.0350554 , 0.9048333 , 0.6648029 ],\n        [0.30655336, 0.71107256, 0.08145595, 0.6430669 ]],\n\n       [[0.05652034, 0.6733513 , 0.74606776, 0.7768644 ],\n        [0.752046  , 0.81940365, 0.8656795 , 0.36229187],\n        [0.6792772 , 0.09873414, 0.9180372 , 0.86802423],\n        ...,\n        [0.94764245, 0.9057692 , 0.2939899 , 0.3059311 ],\n        [0.02689052, 0.30535793, 0.59719646, 0.1961546 ],\n        [0.329903  , 0.04605341, 0.9130409 , 0.16443186]],\n\n       [[0.92436326, 0.3926692 , 0.21276689, 0.2696147 ],\n        [0.9448594 , 0.25314236, 0.6319947 , 0.74765795],\n        [0.8205074 , 0.17280412, 0.13950205, 0.6617175 ],\n        ...,\n        [0.8001094 , 0.38884783, 0.68148255, 0.7244905 ],\n        [0.126989  , 0.06391084, 0.45700228, 0.15585442],\n        [0.69189703, 0.19252491, 0.8310069 , 0.4664004 ]],\n\n       ...,\n\n       [[0.504362  , 0.28593183, 0.06100738, 0.33103418],\n        [0.43954146, 0.8431097 , 0.6507629 , 0.8762004 ],\n        [0.08563113, 0.519444  , 0.76533675, 0.30106753],\n        ...,\n        [0.5099342 , 0.07787025, 0.5591619 , 0.81915003],\n        [0.79076016, 0.24936807, 0.13898265, 0.4901245 ],\n        [0.6340071 , 0.18840885, 0.4918834 , 0.29720363]],\n\n       [[0.37888455, 0.21904242, 0.19868314, 0.36017245],\n        [0.00940609, 0.9386114 , 0.06162822, 0.33897102],\n        [0.6009495 , 0.14999509, 0.9688647 , 0.89094627],\n        ...,\n        [0.2862184 , 0.4107052 , 0.7525182 , 0.77406156],\n        [0.6778002 , 0.74611974, 0.8442534 , 0.52073765],\n        [0.56196666, 0.45014703, 0.01143432, 0.7597119 ]],\n\n       [[0.53818226, 0.66123736, 0.8052741 , 0.67579466],\n        [0.2572353 , 0.69480324, 0.25170505, 0.18326835],\n        [0.58100545, 0.86008406, 0.5496088 , 0.45934454],\n        ...,\n        [0.77240086, 0.6827799 , 0.3295611 , 0.15116587],\n        [0.9683833 , 0.7034689 , 0.38074005, 0.1400818 ],\n        [0.6613616 , 0.954399  , 0.693261  , 0.21665955]]], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.score", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "score", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array(1.2659892, dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.laplace", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "laplace", "kind": "variable", "doc": "<p></p>\n", "default_value": "ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;))"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel", "kind": "class", "doc": "<p>Combine a model on an RGB value and a model on a depth value, each\ncentered at a given value, into a model on a RGB-Depth value.</p>\n\n<p>Constructor args:</p>\n\n<ul>\n<li>depth_pixel_model : genjax.ExactDensity</li>\n<li>color_pixel_model : genjax.ExactDensity</li>\n</ul>\n\n<p>Distribution args:</p>\n\n<ul>\n<li>rendered_rgbd : a (4,) array around which the RGBD value will be sampled</li>\n<li>depth_args : tuple of arguments so that <code>(rgb, *depth_args)</code> is accepted\nby <code>depth_pixel_model</code></li>\n<li>color_args : tuple of arguments so that <code>(rgb, *color_args)</code> is accepted\nby <code>color_pixel_model</code></li>\n</ul>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel.depth_pixel_model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel.color_pixel_model", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">rendered_rgbd</span>, </span><span class=\"param\"><span class=\"n\">depth_args</span>, </span><span class=\"param\"><span class=\"n\">color_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "RGBDPixelModel.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">rendered_rgbd</span>, </span><span class=\"param\"><span class=\"n\">depth_args</span>, </span><span class=\"param\"><span class=\"n\">color_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "laplace_rgbd_pixel_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)))"}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "laplace_rgb_uniform_depth_pixel_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "RGBDPixelModel(depth_pixel_model=ArgMap(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;)), argmap=&lt;function &lt;lambda&gt;&gt;), color_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)))"}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "uniform_rgb_laplace_depth_pixel_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ArgMap(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;)), argmap=&lt;function &lt;lambda&gt;&gt;))"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s1", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s1", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0.21170911, 0.24934486, 0.14813222], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s2", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s2", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0.37168035, 0.6342275 , 0.47052714], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s3", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s3", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0.5552479 , 0.69474125, 0.29765356, 1.3442861 ], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "VmapMixturePixelModel", "kind": "class", "doc": "<p>A distribution which is a mixture of <code>dist</code> on different arguments.</p>\n\n<p>Constructor args:</p>\n\n<ul>\n<li>dist : genjax.ExactDensity</li>\n</ul>\n\n<p>Distribution args:</p>\n\n<ul>\n<li>probs : (N,) array of probabilities</li>\n<li>*args : list of arguments so that <code>dist.sample(key, *args[i])</code> is valid\nfor each i</li>\n</ul>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "VmapMixturePixelModel.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "VmapMixturePixelModel.dist", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "VmapMixturePixelModel.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">probs</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "VmapMixturePixelModel.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed</span>, </span><span class=\"param\"><span class=\"n\">probs</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "multilaplace_pixel_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=VmapMixturePixelModel(dist=RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)))), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s4", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s4", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([ 0.97030926, -2.6424496 ,  2.3805192 ,  0.9415597 ], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "multi_uniform_rgb_depth_laplace", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=VmapMixturePixelModel(dist=RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ArgMap(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;)), argmap=&lt;function &lt;lambda&gt;&gt;))), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "PythonMixturePixelModel", "kind": "class", "doc": "<p>Mixture of different distributions.\nConstructor:</p>\n\n<ul>\n<li>dists : list of genjax.ExactDensity</li>\n</ul>\n\n<p>Distribution args:</p>\n\n<ul>\n<li>probs : (N,) array of probabilities</li>\n<li>args : list of arguments so that <code>dists[i].sample(key, *args[i])</code> is valid\nfor each i</li>\n</ul>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "PythonMixturePixelModel.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "PythonMixturePixelModel.dists", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &lt;built-in function any&gt;"}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "PythonMixturePixelModel.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">probs</span>, </span><span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "PythonMixturePixelModel.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">observed</span>, </span><span class=\"param\"><span class=\"n\">probs</span>, </span><span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "uniform_multilaplace_mixture", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=PythonMixturePixelModel(dists=[UniformRGBDPixelModel(), ArgMap(dist=VmapMixturePixelModel(dist=RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)))), argmap=&lt;function &lt;lambda&gt;&gt;)]), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "mixture_of_uniform_and_multi_uniformrgb_laplacedepth", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=PythonMixturePixelModel(dists=[UniformRGBDPixelModel(), ArgMap(dist=VmapMixturePixelModel(dist=RGBDPixelModel(depth_pixel_model=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), color_pixel_model=ArgMap(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;)), argmap=&lt;function &lt;lambda&gt;&gt;))), argmap=&lt;function &lt;lambda&gt;&gt;)]), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s5", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s5", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0.65636635, 0.50460726, 0.545558  , 1.4104824 ], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.s6", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "s6", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0.8953161, 0.5225136, 0.6829598, 1.4104824], dtype=float32)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "get_uniform_multilaplace_image_dist_with_fixed_params", "kind": "function", "doc": "<p>Get a distribution on images in which each pixel's value is generated\nindependently, from a distribution on RGBD values which is a mixture\nof a uniform and N laplace distributions with different centers.</p>\n\n<p>Function arguments:</p>\n\n<ul>\n<li>height</li>\n<li>width</li>\n<li>depth_scale : () scale for the laplaces on depth</li>\n<li>color_scale : () scale for the laplaces on RGB</li>\n<li>mindepth : () min value for uniform on depth</li>\n<li>maxdepth : () max value for uniform on depth</li>\n</ul>\n\n<p>Distribution arguments:</p>\n\n<ul>\n<li>weights : (N + 1,) array of probabilities. The first weight is the probability\nassigned to the uniform distribution.</li>\n<li>rgbds : (N, 4) array of RGBD values: the centers for the N laplace distributions.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">depth_scale</span>, </span><span class=\"param\"><span class=\"n\">color_scale</span>, </span><span class=\"param\"><span class=\"n\">mindepth</span>, </span><span class=\"param\"><span class=\"n\">maxdepth</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "multilaplace_pixel_model_rgb_only", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=VmapMixturePixelModel(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;))), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "uniform_multilaplace_mixture_rgb_only", "kind": "variable", "doc": "<p></p>\n", "default_value": "ArgMap(dist=PythonMixturePixelModel(dists=[ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function &lt;lambda&gt;&gt;)), ArgMap(dist=VmapMixturePixelModel(dist=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;))), argmap=&lt;function &lt;lambda&gt;&gt;)]), argmap=&lt;function &lt;lambda&gt;&gt;)"}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"fullname": "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params", "modulename": "b3d.chisight.dense.likelihoods.other_likelihoods", "qualname": "get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params", "kind": "function", "doc": "<p>Get a distribution on images in which each pixel's value is generated\nindependently, from a distribution on RGB values which is a mixture\nof a uniform and N laplace distributions with different centers.</p>\n\n<p>Function arguments:</p>\n\n<ul>\n<li>height</li>\n<li>width</li>\n<li>color_scale : () scale for the laplaces on RGB</li>\n</ul>\n\n<p>Distribution arguments:</p>\n\n<ul>\n<li>weights : (N + 1,) array of probabilities. The first weight is the probability\nassigned to the uniform distribution.</li>\n<li>rgbds : (N, 4) array of RGBD values: the centers for the N laplace distributions.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">color_scale</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"fullname": "b3d.chisight.dense.likelihoods.simple_likelihood", "modulename": "b3d.chisight.dense.likelihoods.simple_likelihood", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"fullname": "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood", "modulename": "b3d.chisight.dense.likelihoods.simple_likelihood", "qualname": "simple_likelihood", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgbd</span>, </span><span class=\"param\"><span class=\"n\">rendered_rgbd</span>, </span><span class=\"param\"><span class=\"n\">likelihood_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system": {"fullname": "b3d.chisight.particle_system", "modulename": "b3d.chisight.particle_system", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"fullname": "b3d.chisight.particle_system.dummy_mapped_uniform_pose", "modulename": "b3d.chisight.particle_system", "qualname": "dummy_mapped_uniform_pose", "kind": "variable", "doc": "<p></p>\n", "default_value": "VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None))"}, "b3d.chisight.particle_system.uniform_pose_args": {"fullname": "b3d.chisight.particle_system.uniform_pose_args", "modulename": "b3d.chisight.particle_system", "qualname": "uniform_pose_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 2.0, 0.5)"}, "b3d.chisight.particle_system.latent_particle_model": {"fullname": "b3d.chisight.particle_system.latent_particle_model", "modulename": "b3d.chisight.particle_system", "qualname": "latent_particle_model", "kind": "variable", "doc": "<p>Retval is a dict with keys \"relative_particle_poses\", \"absolute_particle_poses\",\n\"object_poses\", \"camera_poses\", \"vis_mask\"\nLeading dimension for each timestep is the batch dimension.</p>\n", "default_value": "StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function latent_particle_model&gt;))"}, "b3d.chisight.particle_system.make_dense_gps_model": {"fullname": "b3d.chisight.particle_system.make_dense_gps_model", "modulename": "b3d.chisight.particle_system", "qualname": "make_dense_gps_model", "kind": "function", "doc": "<p>The provided likelihood should be a Generative Function with\none latent choice at address <code>\"image\"</code>, which accepts <code>(mesh, other_args)</code> as input,\nand outputs <code>(image, metadata)</code>.\nThe value <code>image</code> should be sampled at <code>\"image\"</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">likelihood</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system.visualize_particle_system": {"fullname": "b3d.chisight.particle_system.visualize_particle_system", "modulename": "b3d.chisight.particle_system", "qualname": "visualize_particle_system", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">latent_particle_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">particle_dynamics_summary</span>,</span><span class=\"param\">\t<span class=\"n\">final_state</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">transform_Viz_Trace</span><span class=\"o\">=</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">quaternion</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">))</span>,</span><span class=\"param\">\t<span class=\"n\">viz_prefix</span><span class=\"o\">=</span><span class=\"s1\">&#39;trace&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"fullname": "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image", "modulename": "b3d.chisight.particle_system", "qualname": "particle_2d_pixel_coordinates_to_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pixel_coords</span>, </span><span class=\"param\"><span class=\"n\">image_height</span>, </span><span class=\"param\"><span class=\"n\">image_width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system.visualize_sparse_observation": {"fullname": "b3d.chisight.particle_system.visualize_sparse_observation", "modulename": "b3d.chisight.particle_system", "qualname": "visualize_sparse_observation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sparse_model_args</span>, </span><span class=\"param\"><span class=\"n\">observations</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system.visualize_dense_gps": {"fullname": "b3d.chisight.particle_system.visualize_dense_gps", "modulename": "b3d.chisight.particle_system", "qualname": "visualize_dense_gps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">latent_particle_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">dense_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">particle_dynamics_summary</span>,</span><span class=\"param\">\t<span class=\"n\">final_state</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.particle_system.visualize_dense_observation": {"fullname": "b3d.chisight.particle_system.visualize_dense_observation", "modulename": "b3d.chisight.particle_system", "qualname": "visualize_dense_observation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observations</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.patch_tracking": {"fullname": "b3d.chisight.patch_tracking", "modulename": "b3d.chisight.patch_tracking", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.patch_tracking.get_patches": {"fullname": "b3d.chisight.patch_tracking.get_patches", "modulename": "b3d.chisight.patch_tracking", "qualname": "get_patches", "kind": "function", "doc": "<p>Centers given as (N, 2) storing (x, y) pixel coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">centers</span>, </span><span class=\"param\"><span class=\"n\">rgbds</span>, </span><span class=\"param\"><span class=\"n\">pose_WC</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"fullname": "b3d.chisight.patch_tracking.get_patches_from_pointcloud", "modulename": "b3d.chisight.patch_tracking", "qualname": "get_patches_from_pointcloud", "kind": "function", "doc": "<p>Centers given as (N, 2) storing (x, y) pixel coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">centers</span>, </span><span class=\"param\"><span class=\"n\">rgbs</span>, </span><span class=\"param\"><span class=\"n\">xyzs_W</span>, </span><span class=\"param\"><span class=\"n\">pose_WC</span>, </span><span class=\"param\"><span class=\"n\">fx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"fullname": "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker", "modulename": "b3d.chisight.patch_tracking", "qualname": "get_adam_optimization_patch_tracker", "kind": "function", "doc": "<p>Args:\n    - model: instance of the multiple object model from b3d.patch_tracking.model\n    - patch_vertices_P: The vertices of the patch in the patch's local frame. Shape (N, V, 3)\n    - patch_faces: The faces of the patch. Shape (N, F, 3)\n    - patch_vertex_colors: The vertex colors of the patch. Shape (N, V, 3)\n    - pose_WC: The camera pose. Default is the identity pose.</p>\n\n<p>Returns:</p>\n\n<ul>\n<li>get_initial_tracker_state:\nA function from the initial patch poses, poses_WP, to an initial state object <code>tracker_state</code> for the patch tracker.</li>\n<li>update_tracker_state:\nA function from <code>(tracker_state, new_observed_rgbd)</code> to a tuple <code>(new_patch_poses, updated_tracker_state)</code>,\nwhere <code>new_patch_poses</code> is a pair (positions, quaternions) for the updated patch poses,\nand <code>new_tracker_state</code> is the updated tracker state.\nAt time 0, <code>new_observed_rgbd</code> should be the observed_rgbd for the frame at t=0.</li>\n<li>get_trace: A function s.t. <code>get_trace(pos, quat, observed_rgbd)</code> returns a trace for <code>model</code> with the patches\nat the given positions and quaternions.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">patches</span>,</span><span class=\"param\">\t<span class=\"n\">pose_WC</span><span class=\"o\">=</span><span class=\"n\">Pose</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">),</span> <span class=\"n\">quaternion</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">))</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"fullname": "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking", "modulename": "b3d.chisight.patch_tracking", "qualname": "get_default_multiobject_model_for_patchtracking", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">renderer</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse": {"fullname": "b3d.chisight.sparse", "modulename": "b3d.chisight.sparse", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps": {"fullname": "b3d.chisight.sparse.dynamic_gps", "modulename": "b3d.chisight.sparse.dynamic_gps", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS", "kind": "class", "doc": "<p>Time dependent Generative Particle System Class.</p>\n\n<p>Args:\n    <code>positions</code>: (T,N,3)-array of particle positions in assigned cluster coordinates\n    <code>quaternions</code>: (T,N,4)-array of particle quaternions (x,y,z,w) in assigned cluster coordinates\n    <code>diagonal_covariances</code>: (N,3)-array\n    <code>features</code>: (N,F)-array of particle features\n    <code>cluster_assignments</code>: (N,)-array of cluster assignments assigning elements to 0-(K-1) clusters\n    <code>cluster_positions</code>: (T,K,3)-array of cluster positions in world coordiantes\n    <code>cluster_quaternions</code>: (T,K,4)-array of cluster quaternions in world coorindates</p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">quaternions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">diagonal_covariances</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">features</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_assignments</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_positions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_quaternions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span>)</span>"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.quaternions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.diagonal_covariances", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.features", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.cluster_assignments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.cluster_positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.cluster_quaternions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.from_pose_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">particle_poses</span>,</span><span class=\"param\">\t<span class=\"n\">particle_covariances</span>,</span><span class=\"param\">\t<span class=\"n\">features</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_assignments</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_poses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.from_absolute_pose_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">absolute_particle_poses</span>,</span><span class=\"param\">\t<span class=\"n\">particle_covariances</span>,</span><span class=\"param\">\t<span class=\"n\">features</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_assignments</span>,</span><span class=\"param\">\t<span class=\"n\">cluster_poses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.flat", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.num_timesteps", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.num_particles", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.feature_dim", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.num_clusters", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.relative_particle_poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.particle_poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.cluster_poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.absolute_particle_poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.at_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.compute_relative_poses", "kind": "function", "doc": "<p>Returns the relative poses with respect to the cluster poses.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">absolute_poses</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.change_coordinates", "kind": "function", "doc": "<p>Performs a coordinate change to given pose's coordinate system.\nThat means we transform the cluster poses to the new coordinate\nsystem and compute $p^{-1}q$ for each cluster pose $q$.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.get_cluster", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"fullname": "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster", "modulename": "b3d.chisight.sparse.dynamic_gps", "qualname": "DynamicGPS.random_color_by_cluster", "kind": "function", "doc": "<p>Returns an array of colors for each particle based on the cluster assignment.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.dynamic_sfm": {"fullname": "b3d.chisight.sparse.dynamic_sfm", "modulename": "b3d.chisight.sparse.dynamic_sfm", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.gps_utils": {"fullname": "b3d.chisight.sparse.gps_utils", "modulename": "b3d.chisight.sparse.gps_utils", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.gps_utils.inv": {"fullname": "b3d.chisight.sparse.gps_utils.inv", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "inv", "kind": "function", "doc": "<p>Return the inverse of a square matrix</p>\n\n<p>JAX implementation of <code>numpy.linalg.inv()</code>.</p>\n\n<p>Args:\n  a: array of shape <code>(..., N, N)</code> specifying square array(s) to be inverted.</p>\n\n<p>Returns:\n  Array of shape <code>(..., N, N)</code> containing the inverse of the input.</p>\n\n<p>Notes:\n  In most cases, explicitly computing the inverse of a matrix is ill-advised. For\n  example, to compute <code>x = inv(A) @ b</code>, it is more performant and numerically\n  precise to use a direct solve, such as <code>jax.scipy.linalg.solve()</code>.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.scipy.linalg.inv()</code>: SciPy-style API for matrix inverse</li>\n<li><code>jax.numpy.linalg.solve()</code>: direct linear solver</li>\n</ul>\n\n<p>Example:\n  Compute the inverse of a 3x3 matrix</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a_inv</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">inv</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a_inv</span>  <span class=\"c1\"># doctest: +SKIP</span>\n<span class=\"go\">Array([[ 0.        , -0.25      ,  0.5       ],</span>\n<span class=\"go\">       [-0.25      ,  0.5       , -0.25000003],</span>\n<span class=\"go\">       [ 0.5       , -0.25      ,  0.        ]], dtype=float32)</span>\n</code></pre>\n</div>\n\n<p>Check that multiplying with the inverse gives the identity:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">allclose</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">@</span> <span class=\"n\">a_inv</span><span class=\"p\">,</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">eye</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mf\">1E-5</span><span class=\"p\">)</span>\n<span class=\"go\">Array(True, dtype=bool)</span>\n</code></pre>\n</div>\n\n<p>Multiply the inverse by a vector <code>b</code>, to find a solution to <code>a @ x = b</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a_inv</span> <span class=\"o\">@</span> <span class=\"n\">b</span>\n<span class=\"go\">Array([ 0.  ,  1.25, -0.5 ], dtype=float32)</span>\n</code></pre>\n</div>\n\n<p>Note, however, that explicitly computing the inverse in such a case can lead\n  to poor performance and loss of precision as the size of the problem grows.\n  Instead, you should use a direct solver like <code>jax.numpy.linalg.solve()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">solve</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"go\"> Array([ 0.  ,  1.25, -0.5 ], dtype=float32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.logsumexp": {"fullname": "b3d.chisight.sparse.gps_utils.logsumexp", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "logsumexp", "kind": "function", "doc": "<p>Log-sum-exp reduction.</p>\n\n<p>JAX implementation of <code>scipy.special.logsumexp()</code>.</p>\n\n<p>$$\\mathrm{logsumexp}(a) = \\mathrm{log} \\sum_j b \\cdot \\mathrm{exp}(a_{ij})$$</p>\n\n<p>where the \\( j \\) indices range over one or more dimensions to be reduced.</p>\n\n<p>Args:\n  a: the input array\n  axis: the axis or axes over which to reduce. May be either <code>None</code>, an\n    int, or a tuple of ints.\n  b: scaling factors for \\( \\mathrm{exp}(a) \\). Must be broadcastable to the\n    shape of <code>a</code>.\n  keepdims: If <code>True</code>, the axes that are reduced are left in the output as\n    dimensions of size 1.\n  return_sign: If <code>True</code>, the output will be a <code>(result, sign)</code> pair,\n    where <code>sign</code> is the sign of the sums and <code>result</code> contains the\n    logarithms of their absolute values. If <code>False</code> only <code>result</code> is\n    returned and it will contain NaN values if the sums are negative.\n  where: Elements to include in the reduction.</p>\n\n<p>Returns:\n  Either an array <code>result</code> or a pair of arrays <code>(result, sign)</code>, depending\n  on the value of the <code>return_sign</code> argument.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_sign</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.logaddexp": {"fullname": "b3d.chisight.sparse.gps_utils.logaddexp", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "logaddexp", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;jax._src.custom_derivatives.custom_jvp object&gt;"}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"fullname": "b3d.chisight.sparse.gps_utils.CovarianceMatrix", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "CovarianceMatrix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"fullname": "b3d.chisight.sparse.gps_utils.PrecisionMatrix", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "PrecisionMatrix", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"fullname": "b3d.chisight.sparse.gps_utils.RayOrigin", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "RayOrigin", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.chisight.sparse.gps_utils.RayDirection": {"fullname": "b3d.chisight.sparse.gps_utils.RayDirection", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "RayDirection", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"fullname": "b3d.chisight.sparse.gps_utils.ellipsoid_embedding", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ellipsoid_embedding", "kind": "function", "doc": "<p>Returns A with cov = A@A.T</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cov</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"fullname": "b3d.chisight.sparse.gps_utils.dq_from_cov", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "dq_from_cov", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cov</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.bilinear": {"fullname": "b3d.chisight.sparse.gps_utils.bilinear", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "bilinear", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"fullname": "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "gaussian_restriction_to_ray", "kind": "function", "doc": "<p>Restricts a normalized Gaussian to a ray and returns\nthe mean <code>mu</code> and standard deviation <code>sig</code>, such that,\nparameterizing they ray by $r(t) = o +t*v$, we have\n$$\n    N( r(t) | \\tilde\\mu, cov) = w * N(t | \\mu, \\sigma)\n$$\nwhere\n$$\n    w = N( r(\\mu) | \\tilde\\mu, cov) /  N(\\mu, \\mu, \\sigma).\n$$\nNote that $\\mu$ is the maximum of both the nominator and denominator.\nAlso note that the first equation implies that the integral of\nthe Gaussian along the ray is given by $w$.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mu_tilde</span>, </span><span class=\"param\"><span class=\"n\">prec</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">o</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"fullname": "b3d.chisight.sparse.gps_utils.cov_from_dq_composition", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "cov_from_dq_composition", "kind": "function", "doc": "<p>Covariance matrix from particle representation <code>(diag, quat)</code>,\nwhere <code>diag</code> is an array of eigenvalues and <code>quat</code> is a quaternion\nrepresenting the matrix of eigenvectors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">diag</span>, </span><span class=\"param\"><span class=\"n\">quat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussian", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussian", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussian.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussian.sample", "kind": "function", "doc": "<p>Samples a 2d pointlight on the sensor canvas from a 3d Gaussian distribution.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mu</span>, </span><span class=\"param\"><span class=\"n\">cov</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussian.logpdf", "kind": "function", "doc": "<p>Evaluates the log probability of a 2d pointlight\nunder a 3d Gaussian distribution.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uv</span>, </span><span class=\"param\"><span class=\"n\">mu</span>, </span><span class=\"param\"><span class=\"n\">cov</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"fullname": "b3d.chisight.sparse.gps_utils.projective_gaussian", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "projective_gaussian", "kind": "variable", "doc": "<p></p>\n", "default_value": "ProjectiveGaussian()"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussianMixture", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussianMixture.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussianMixture.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "ProjectiveGaussianMixture.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"fullname": "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "projective_gaussian_mixture", "kind": "variable", "doc": "<p></p>\n", "default_value": "ProjectiveGaussianMixture()"}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"fullname": "b3d.chisight.sparse.gps_utils.HomogeneousMixture", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "HomogeneousMixture", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "HomogeneousMixture.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"fullname": "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "HomogeneousMixture.dist", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"fullname": "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "HomogeneousMixture.sample", "kind": "function", "doc": "<p>Args:\n    <code>key</code>: PRNGKey\n    <code>log_weights</code>: Log weights of the components\n    <code>comp_args</code>: Arguments for the components\n        (each row corresponds to a component)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">comp_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "HomogeneousMixture.logpdf", "kind": "function", "doc": "<p>Args:\n    <code>x</code>: Sample from mixture\n    <code>log_weights</code>: Log weights of the components\n    <code>comp_args</code>: Arguments for the components\n        (each row corresponds to a component)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">comp_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture.p0", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture.p1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Any"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture.sample", "kind": "function", "doc": "<p>Args:\n    <code>key</code>: PRNGKey\n    <code>log_weights</code>: Log weights of the components\n    <code>comp_args</code>: Tuple of arguments for each components</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">comp_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "TwoComponentMixture.logpdf", "kind": "function", "doc": "<p>Args:\n    <code>x</code>: Sample from mixture\n    <code>log_weights</code>: Log weights of the components\n    <code>comp_args</code>: Tuple of arguments for each components</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">log_weights</span>, </span><span class=\"param\"><span class=\"n\">comp_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.IndexDist": {"fullname": "b3d.chisight.sparse.gps_utils.IndexDist", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "IndexDist", "kind": "class", "doc": "<p>Distribution over arrival indices conditioned on being an outlier or not.\nWe mimic a masking combinator here, we don't want to score the arrival index\nin the case of being an outlier.</p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.IndexDist.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "IndexDist.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"fullname": "b3d.chisight.sparse.gps_utils.IndexDist.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "IndexDist.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">logprobs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.IndexDist.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "IndexDist.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">logprobs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.index_dist": {"fullname": "b3d.chisight.sparse.gps_utils.index_dist", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "index_dist", "kind": "variable", "doc": "<p></p>\n", "default_value": "IndexDist()"}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureHack", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureHack", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureHack.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureHack.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureHack.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureHack.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureHack.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uv</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureStepHack", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureStepHack", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureStepHack.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureStepHack.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"fullname": "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "MixtureStepHack.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uv</span>, </span><span class=\"param\"><span class=\"n\">is_outlier</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">mus</span>, </span><span class=\"param\"><span class=\"n\">covs</span>, </span><span class=\"param\"><span class=\"n\">cam</span>, </span><span class=\"param\"><span class=\"n\">intr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"fullname": "b3d.chisight.sparse.gps_utils.mixture_step_hack", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "mixture_step_hack", "kind": "variable", "doc": "<p></p>\n", "default_value": "MixtureStepHack()"}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"fullname": "b3d.chisight.sparse.gps_utils.add_dummy_var", "modulename": "b3d.chisight.sparse.gps_utils", "qualname": "add_dummy_var", "kind": "function", "doc": "<p>Adds a <code>dummy</code> variable to a distribution to make it easily mappable while keeping the other args fixed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">generative_functions</span><span class=\"o\">.</span><span class=\"n\">distributions</span><span class=\"o\">.</span><span class=\"n\">distribution</span><span class=\"o\">.</span><span class=\"n\">ExactDensity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.hgps_utils": {"fullname": "b3d.chisight.sparse.hgps_utils", "modulename": "b3d.chisight.sparse.hgps_utils", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.hgps_utils.depreciated": {"fullname": "b3d.chisight.sparse.hgps_utils.depreciated", "modulename": "b3d.chisight.sparse.hgps_utils", "qualname": "depreciated", "kind": "function", "doc": "<p>Decorator to mark functions as depreciated.</p>\n\n<p>Example Usage:</p>\n\n<pre><code>@depreciated(\"Use `something_new` instead.\")\ndef something_old(x):\n    return x\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model": {"fullname": "b3d.chisight.sparse.sparse_gps_model", "modulename": "b3d.chisight.sparse.sparse_gps_model", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"fullname": "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "minimal_observation_model", "kind": "variable", "doc": "<p>Simple observation model for debugging.</p>\n", "default_value": "StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function minimal_observation_model&gt;))"}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"fullname": "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "make_sparse_gps_model", "kind": "function", "doc": "<p>Models independently moving rigid object as clusters of\nGaussians which specify the position, pose, and uncertainty of 3d keypoints in space.</p>\n\n<p>For simplicity we assume that keypoints can only emit a single constant feature,\nthat we may interpret as a \"point light\".</p>\n\n<p>We can easily extend this model to handle feature vectors.</p>\n\n<p>Args:\n    <code>T</code>: Number of time steps\n    <code>N</code>: Number of particles\n    <code>K</code>: Number of object clusters\n    <code>F</code>: Feature dimension\n    <code>particle_pose_prior</code>: Particle pose model <code>(nums: Array, *args) -&gt; poses</code>.\n    <code>particle_pose_prior_args</code>: Arguments for the particle pose prior\n    <code>object_pose_prior</code>: Cluster prior model <code>(nums: Array, *args) -&gt; poses</code>.\n    <code>object_pose_prior_args</code>: Arguments for the object cluster pose prior\n    <code>camera_pose_prior</code>: Camera pose prior model <code>(*args) -&gt; pose</code>.\n    <code>camera_pose_prior_args</code>: Arguments for the camera pose prior.\n    <code>observation_model</code>: Observation model <code>(vis: Array: Array, mus, cam, intr, *args) -&gt; observations</code>.\n    <code>observation_model_args</code>: Arguments for the observation model\n    <code>object_motion_model</code>: Object motion model <code>(poses, *args) -&gt; poses</code>.\n    <code>object_motion_model_args</code>: Arguments for the object motion model\n    <code>camera_motion_model</code>: Camera motion model <code>(pose, *args) -&gt; pose</code>.\n    <code>camera_motion_model_args</code>: Arguments for the camera motion model</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">T</span>,</span><span class=\"param\">\t<span class=\"n\">N</span>,</span><span class=\"param\">\t<span class=\"n\">K</span>,</span><span class=\"param\">\t<span class=\"n\">F</span>,</span><span class=\"param\">\t<span class=\"n\">particle_pose_prior</span>,</span><span class=\"param\">\t<span class=\"n\">particle_pose_prior_args</span>,</span><span class=\"param\">\t<span class=\"n\">object_pose_prior</span>,</span><span class=\"param\">\t<span class=\"n\">object_pose_prior_args</span>,</span><span class=\"param\">\t<span class=\"n\">camera_pose_prior</span>,</span><span class=\"param\">\t<span class=\"n\">camera_pose_prior_args</span>,</span><span class=\"param\">\t<span class=\"n\">observation_model</span>,</span><span class=\"param\">\t<span class=\"n\">observation_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">object_motion_model</span>,</span><span class=\"param\">\t<span class=\"n\">object_motion_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">camera_motion_model</span>,</span><span class=\"param\">\t<span class=\"n\">camera_motion_model_args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"fullname": "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "SparseGPSModelTrace", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "Any"}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_particle_poses", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_particle_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_assignments", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_assignments", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_object_poses", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_object_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_cameras", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_cameras", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_observations", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_observations", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_num_timesteps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_num_particles", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_num_particles", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_num_objects", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_num_objects", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"fullname": "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "get_dynamic_gps", "kind": "function", "doc": "<p>Gets the DynamicGPS object from a SparseGPSModelTrace.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tr</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"fullname": "b3d.chisight.sparse.sparse_gps_model.set_camera_choice", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "set_camera_choice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">cam</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>, </span><span class=\"param\"><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"fullname": "b3d.chisight.sparse.sparse_gps_model.set_particle_choice", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "set_particle_choice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"fullname": "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice", "modulename": "b3d.chisight.sparse.sparse_gps_model", "qualname": "set_sensor_coordinates_choice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">uvs</span>, </span><span class=\"param\"><span class=\"n\">ch</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_model_reality_check": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "kind": "module", "doc": "<p></p>\n"}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.key", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "key", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([ 928981903, 3453687069], dtype=uint32)"}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "dummy_mapped_uniform_pose", "kind": "variable", "doc": "<p></p>\n", "default_value": "VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None))"}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.intr", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "intr", "kind": "variable", "doc": "<p></p>\n", "default_value": "Intrinsics(width=100, height=50, fx=100.0, fy=100.0, cx=50.0, cy=25.0, near=1e-06, far=100.0)"}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "outlier_prob", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0"}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.p0", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "p0", "kind": "variable", "doc": "<p></p>\n", "default_value": "Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32))"}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "particle_pose_prior", "kind": "variable", "doc": "<p></p>\n", "default_value": "VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None))"}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "particle_pose_prior_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 0.5, 0.25)"}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "object_pose_prior", "kind": "variable", "doc": "<p></p>\n", "default_value": "VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None))"}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "object_pose_prior_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 2.0, 0.5)"}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "camera_pose_prior", "kind": "variable", "doc": "<p></p>\n", "default_value": "UniformPoseInBall()"}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "camera_pose_prior_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 0.1, 0.1)"}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.observation_model", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "observation_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function minimal_observation_model&gt;))"}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "observation_model_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(2.0,)"}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "object_motion_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "VmapCombinator(gen_fn=UniformPoseInBall(), in_axes=(0, None, None))"}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "object_motion_model_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(0.1, 0.1)"}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "camera_motion_model", "kind": "variable", "doc": "<p></p>\n", "default_value": "UniformPoseInBall()"}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "camera_motion_model_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(0.1, 0.2)"}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.F", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "F", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.maker_args", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "maker_args", "kind": "variable", "doc": "<p></p>\n", "default_value": "(2, 3, 3, 0, VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None)), (Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 0.5, 0.25), VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None)), (Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 2.0, 0.5), UniformPoseInBall(), (Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), 0.1, 0.1), StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function minimal_observation_model&gt;)), (2.0,), VmapCombinator(gen_fn=UniformPoseInBall(), in_axes=(0, None, None)), (0.1, 0.1), UniformPoseInBall(), (0.1, 0.2))"}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.model", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "model", "kind": "variable", "doc": "<p></p>\n", "default_value": "StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function make_sparse_gps_model.&lt;locals&gt;.sparse_gps_model&gt;))"}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.jimportance", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "jimportance", "kind": "function", "doc": "<p>Returns a properly weighted pair, a [<code>Trace</code>][genjax.core.Trace] and a [<code>Weight</code>][genjax.core.Weight], properly weighted for the target induced by the generative function for the provided constraint and arguments.</p>\n\n<p>Examples:\n    (<strong>Full constraints</strong>) A simple example using the <code>importance</code> interface on distributions:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    from genjax import normal\n    from genjax import ChoiceMapBuilder as C\n    from jax.random import PRNGKey</p>\n\n<pre><code>key = PRNGKey(0)\n\ntr, w = normal.importance(key, C.v(1.0), (0.0, 1.0))\nprint(tr.get_sample().render_html())\n</code></pre>\n\n<p><pre><code>\n(**Internal proposal for partial constraints**) Specifying a _partial_ constraint on a [`StaticGenerativeFunction`][genjax.StaticGenerativeFunction]:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nfrom genjax import flip, uniform, gen\nfrom genjax import ChoiceMapBuilder as C\n\n\n@gen\ndef model():\n    p = uniform(0.0, 1.0) @ \"p\"\n    f1 = flip(p) @ \"f1\"\n    f2 = flip(p) @ \"f2\"\n\n\ntr, w = model.importance(key, C.kw(f1=True, f2=True), ())\nprint(tr.get_sample().render_html())\n</code></pre></p>\n\n<p>Under the hood, creates an [<code>UpdateProblem</code>][genjax.core.UpdateProblem] which requests that the generative function respond with a move from the _empty_ trace (the only possible value for _empty_ target $\\delta_\\emptyset$) to the target induced by the generative function for constraint $C$ with arguments $a$.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">constraint</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Constraint</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span><span class=\"p\">,</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.jsimulate", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "jsimulate", "kind": "function", "doc": "<p>Execute the generative function, sampling from its distribution over samples, and return a [<code>Trace</code>][genjax.core.Trace].</p>\n\n<h2 id=\"more-on-traces\">More on traces</h2>\n\n<p>The [<code>Trace</code>][genjax.core.Trace] returned by <code>simulate</code> implements its own interface.</p>\n\n<p>It is responsible for storing the arguments of the invocation ([<code>genjax.Trace.get_args</code>][]), the return value of the generative function ([<code>genjax.Trace.get_retval</code>][]), the identity of the generative function which produced the trace ([<code>genjax.Trace.get_gen_fn</code>][]), the sample of traced random choices produced during the invocation ([<code>genjax.Trace.get_sample</code>][]) and _the score_ of the sample ([<code>genjax.Trace.get_score</code>][]).</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    import genjax\n    from jax import vmap, jit\n    from jax.random import PRNGKey\n    from jax.random import split</p>\n\n<pre><code>@genjax.gen\ndef model():\n    x = genjax.normal(0.0, 1.0) @ \"x\"\n    return x\n\n\nkey = PRNGKey(0)\ntr = model.simulate(key, ())\nprint(tr.render_html())\n</code></pre>\n\n<p><pre><code>\nAnother example, using the same model, composed into [`genjax.repeat`](combinators.md#genjax.repeat) - which creates a new generative function, which has the same interface:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n@genjax.gen\ndef model():\n    x = genjax.normal(0.0, 1.0) @ \"x\"\n    return x\n\n\nkey = PRNGKey(0)\ntr = model.repeat(n=10).simulate(key, ())\nprint(tr.render_html())</p>\n\n</code></pre>\n<pre><code>(**Fun, flirty, fast ... parallel?**) Feel free to use `jax.jit` and `jax.vmap`!\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nkey = PRNGKey(0)\nsub_keys = split(key, 10)\nsim = model.repeat(n=10).simulate\ntr = jit(vmap(sim, in_axes=(0, None)))(sub_keys, ())\nprint(tr.render_html())\n```\n\n<p></code></pre></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">generative_functions</span><span class=\"o\">.</span><span class=\"n\">static</span><span class=\"o\">.</span><span class=\"n\">StaticTrace</span>:</span></span>", "funcdef": "def"}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"fullname": "b3d.chisight.sparse.sparse_model_reality_check.tr", "modulename": "b3d.chisight.sparse.sparse_model_reality_check", "qualname": "tr", "kind": "variable", "doc": "<p></p>\n", "default_value": "StaticTrace(gen_fn=StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function make_sparse_gps_model.&lt;locals&gt;.sparse_gps_model&gt;)), args=(Intrinsics(width=&lt;jax.Array(100, dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array(50, dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array(50., dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array(25., dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array(1.e-06, dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;),), retval={&#x27;absolute_particle_poses&#x27;: &lt;b3d.pose.core.Pose object&gt;, &#x27;camera_poses&#x27;: &lt;b3d.pose.core.Pose object&gt;, &#x27;object_assignments&#x27;: &lt;jax.Array([1, 2, 2], dtype=int32)&gt;, &#x27;object_poses&#x27;: &lt;b3d.pose.core.Pose object&gt;, &#x27;relative_particle_poses&#x27;: &lt;b3d.pose.core.Pose object&gt;}, addresses=AddressVisitor(visited=[(&#x27;particle_poses&#x27;,), (&#x27;object_assignments&#x27;,), (&#x27;initial_object_poses&#x27;,), (&#x27;initial_camera_pose&#x27;,), (&#x27;initial_visibility&#x27;,), (&#x27;initial_observation&#x27;,), (&#x27;chain&#x27;,)]), subtraces=[VmapTrace(gen_fn=VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None)), inner=DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), args=(&lt;jax.Array([0, 1, 2], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, &lt;jax.Array([0.5, 0.5, 0.5], dtype=float32, weak_type=True)&gt;, &lt;jax.Array([0.25, 0.25, 0.25], dtype=float32, weak_type=True)&gt;), value=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array([3.3542812, 3.3542812, 3.3542812], dtype=float32, weak_type=True)&gt;), args=(&lt;jax.Array([0, 1, 2], dtype=int32)&gt;, Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), &lt;jax.Array(0.5, dtype=float32, weak_type=True)&gt;, &lt;jax.Array(0.25, dtype=float32, weak_type=True)&gt;), retval=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array(10.062843, dtype=float32)&gt;), VmapTrace(gen_fn=VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), in_axes=(0,)), inner=DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), args=(&lt;jax.Array float32(3, 3) \u22480.0 \u00b10.0 [\u22650.0, \u22640.0] zero:9&gt;,), value=&lt;jax.Array([1, 2, 2], dtype=int32)&gt;, score=&lt;jax.Array([-1.0986123, -1.0986123, -1.0986123], dtype=float32)&gt;), args=(&lt;jax.Array float32(3, 3) \u22480.0 \u00b10.0 [\u22650.0, \u22640.0] zero:9&gt;,), retval=&lt;jax.Array([1, 2, 2], dtype=int32)&gt;, score=&lt;jax.Array(-3.295837, dtype=float32)&gt;), VmapTrace(gen_fn=VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), in_axes=(0, None, None, None)), inner=DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function add_dummy_var.&lt;locals&gt;.&lt;lambda&gt;&gt;)), args=(&lt;jax.Array([0, 1, 2], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, &lt;jax.Array([2., 2., 2.], dtype=float32, weak_type=True)&gt;, &lt;jax.Array([0.5, 0.5, 0.5], dtype=float32, weak_type=True)&gt;), value=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array([-2.9482756, -2.9482756, -2.9482756], dtype=float32, weak_type=True)&gt;), args=(&lt;jax.Array([0, 1, 2], dtype=int32)&gt;, Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), &lt;jax.Array(2., dtype=float32, weak_type=True)&gt;, &lt;jax.Array(0.5, dtype=float32, weak_type=True)&gt;), retval=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array(-8.844827, dtype=float32)&gt;), DistributionTrace(gen_fn=UniformPoseInBall(), args=(Pose(position=Array([0., 0., 0.], dtype=float32), quaternion=Array([0., 0., 0., 1.], dtype=float32)), &lt;jax.Array(0.1, dtype=float32, weak_type=True)&gt;, &lt;jax.Array(0.1, dtype=float32, weak_type=True)&gt;), value=Pose(position=Array([ 0.06165233, -0.0063771 ,  0.01083641], dtype=float32), quaternion=Array([ 0.06026272,  0.06731053, -0.03324331,  0.9953556 ], dtype=float32)), score=&lt;jax.Array(10.947545, dtype=float32, weak_type=True)&gt;), VmapTrace(gen_fn=VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), in_axes=(0,)), inner=DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), args=(&lt;jax.Array([0., 0., 0.], dtype=float32, weak_type=True)&gt;,), value=&lt;jax.Array([1, 1, 1], dtype=int32)&gt;, score=&lt;jax.Array([-0.6931472, -0.6931472, -0.6931472], dtype=float32)&gt;), args=(&lt;jax.Array([0., 0., 0.], dtype=float32, weak_type=True)&gt;,), retval=&lt;jax.Array([1, 1, 1], dtype=int32)&gt;, score=&lt;jax.Array(-2.0794415, dtype=float32)&gt;), StaticTrace(gen_fn=StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function minimal_observation_model&gt;)), args=(&lt;jax.Array([1, 1, 1], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([ 0.06165233, -0.0063771 ,  0.01083641], dtype=float32), quaternion=Array([ 0.06026272,  0.06731053, -0.03324331,  0.9953556 ], dtype=float32)), Intrinsics(width=&lt;jax.Array(100, dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array(50, dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array(50., dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array(25., dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array(1.e-06, dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;), &lt;jax.Array(2., dtype=float32, weak_type=True)&gt;), retval=&lt;jax.Array float32(3, 2) \u22482.4e+01 \u00b16.2e+01 [\u2265-9.1e+01, \u22649.7e+01] nonzero:6&gt;, addresses=AddressVisitor(visited=[(&#x27;sensor_coordinates&#x27;,)]), subtraces=[DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), args=(&lt;jax.Array float32(3, 2) \u22482.4e+01 \u00b16.2e+01 [\u2265-9.3e+01, \u22649.7e+01] nonzero:6&gt;, &lt;jax.Array float32(3, 2) \u22482.0 \u00b10.0 [\u22652.0, \u22642.0] nonzero:6&gt;), value=&lt;jax.Array float32(3, 2) \u22482.4e+01 \u00b16.2e+01 [\u2265-9.1e+01, \u22649.7e+01] nonzero:6&gt;, score=&lt;jax.Array(-12.868806, dtype=float32)&gt;)], score=&lt;jax.Array(-12.868806, dtype=float32)&gt;), ScanTrace(scan_gen_fn=ScanCombinator(kernel_gen_fn=StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function make_sparse_gps_model.&lt;locals&gt;.kernel&gt;)), length=1, reverse=False, unroll=1), inner=StaticTrace(gen_fn=StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function make_sparse_gps_model.&lt;locals&gt;.kernel&gt;)), args=((&lt;jax.Array([0], dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([[ 0.06165233, -0.0063771 ,  0.01083641]], dtype=float32), quaternion=Array([[ 0.06026272,  0.06731053, -0.03324331,  0.9953556 ]], dtype=float32)), (&lt;jax.Array([[1, 2, 2]], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array([100], dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array([50], dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array([50.], dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array([25.], dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array([1.e-06], dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;))), None), retval=((&lt;jax.Array([1], dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([[ 0.02077635, -0.06212867, -0.03399825]], dtype=float32), quaternion=Array([[ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ]], dtype=float32)), (&lt;jax.Array([[1, 2, 2]], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array([100], dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array([50], dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array([50.], dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array([25.], dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array([1.e-06], dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;))), (&lt;jax.Array([1], dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([[ 0.02077635, -0.06212867, -0.03399825]], dtype=float32), quaternion=Array([[ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ]], dtype=float32)), (&lt;jax.Array([[1, 2, 2]], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array([100], dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array([50], dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array([50.], dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array([25.], dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array([1.e-06], dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;)))), addresses=AddressVisitor(visited=[(&#x27;object_poses&#x27;,), (&#x27;camera_pose&#x27;,), (&#x27;visibility&#x27;,), (&#x27;observation&#x27;,)]), subtraces=[VmapTrace(gen_fn=VmapCombinator(gen_fn=UniformPoseInBall(), in_axes=(0, None, None)), inner=DistributionTrace(gen_fn=UniformPoseInBall(), args=(&lt;b3d.pose.core.Pose object&gt;, &lt;jax.Array([[0.1, 0.1, 0.1]], dtype=float32, weak_type=True)&gt;, &lt;jax.Array([[0.1, 0.1, 0.1]], dtype=float32, weak_type=True)&gt;), value=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array([[10.947545, 10.947545, 10.947545]], dtype=float32, weak_type=True)&gt;), args=(&lt;b3d.pose.core.Pose object&gt;, &lt;jax.Array([0.1], dtype=float32, weak_type=True)&gt;, &lt;jax.Array([0.1], dtype=float32, weak_type=True)&gt;), retval=&lt;b3d.pose.core.Pose object&gt;, score=&lt;jax.Array([32.842636], dtype=float32)&gt;), DistributionTrace(gen_fn=UniformPoseInBall(), args=(Pose(position=Array([[ 0.06165233, -0.0063771 ,  0.01083641]], dtype=float32), quaternion=Array([[ 0.06026272,  0.06731053, -0.03324331,  0.9953556 ]], dtype=float32)), &lt;jax.Array([0.1], dtype=float32, weak_type=True)&gt;, &lt;jax.Array([0.2], dtype=float32, weak_type=True)&gt;), value=Pose(position=Array([[ 0.02077635, -0.06212867, -0.03399825]], dtype=float32), quaternion=Array([[ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ]], dtype=float32)), score=&lt;jax.Array([8.859054], dtype=float32, weak_type=True)&gt;), VmapTrace(gen_fn=VmapCombinator(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), in_axes=(0,)), inner=DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), args=(&lt;jax.Array([[0., 0., 0.]], dtype=float32, weak_type=True)&gt;,), value=&lt;jax.Array([[1, 1, 1]], dtype=int32)&gt;, score=&lt;jax.Array([[-0.6931472, -0.6931472, -0.6931472]], dtype=float32)&gt;), args=(&lt;jax.Array([[0., 0., 0.]], dtype=float32, weak_type=True)&gt;,), retval=&lt;jax.Array([[1, 1, 1]], dtype=int32)&gt;, score=&lt;jax.Array([-2.0794415], dtype=float32)&gt;), StaticTrace(gen_fn=StaticGenerativeFunction(source=Closure(dyn_args=(), fn=&lt;function minimal_observation_model&gt;)), args=(&lt;jax.Array([[1, 1, 1]], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([[ 0.02077635, -0.06212867, -0.03399825]], dtype=float32), quaternion=Array([[ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ]], dtype=float32)), Intrinsics(width=&lt;jax.Array([100], dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array([50], dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array([50.], dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array([25.], dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array([1.e-06], dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;), &lt;jax.Array([2.], dtype=float32, weak_type=True)&gt;), retval=&lt;jax.Array float32(1, 3, 2) \u22486.6e+01 \u00b15.9e+01 [\u2265-5.9e+01, \u22641.2e+02] nonzero:6&gt;, addresses=AddressVisitor(visited=[(&#x27;sensor_coordinates&#x27;,)]), subtraces=[DistributionTrace(gen_fn=ExactDensityFromCallables(sampler=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.sampler&gt;), logpdf_evaluator=Closure(dyn_args=(), fn=&lt;function tfp_distribution.&lt;locals&gt;.logpdf&gt;)), args=(&lt;jax.Array float32(1, 3, 2) \u22486.6e+01 \u00b15.9e+01 [\u2265-6e+01, \u22641.2e+02] nonzero:6&gt;, &lt;jax.Array float32(1, 3, 2) \u22482.0 \u00b10.0 [\u22652.0, \u22642.0] nonzero:6&gt;), value=&lt;jax.Array float32(1, 3, 2) \u22486.6e+01 \u00b15.9e+01 [\u2265-5.9e+01, \u22641.2e+02] nonzero:6&gt;, score=&lt;jax.Array([-13.183142], dtype=float32)&gt;)], score=&lt;jax.Array([-13.183142], dtype=float32)&gt;)], score=&lt;jax.Array([26.439108], dtype=float32)&gt;), args=((&lt;jax.Array(0, dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([ 0.06165233, -0.0063771 ,  0.01083641], dtype=float32), quaternion=Array([ 0.06026272,  0.06731053, -0.03324331,  0.9953556 ], dtype=float32)), (&lt;jax.Array([1, 2, 2], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array(100, dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array(50, dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array(50., dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array(25., dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array(1.e-06, dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;))), None), retval=((&lt;jax.Array(1, dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([ 0.02077635, -0.06212867, -0.03399825], dtype=float32), quaternion=Array([ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ], dtype=float32)), (&lt;jax.Array([1, 2, 2], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array(100, dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array(50, dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array(50., dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array(25., dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array(1.e-06, dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array(100., dtype=float32, weak_type=True)&gt;))), (&lt;jax.Array([1], dtype=int32, weak_type=True)&gt;, &lt;b3d.pose.core.Pose object&gt;, Pose(position=Array([[ 0.02077635, -0.06212867, -0.03399825]], dtype=float32), quaternion=Array([[ 0.11416911, -0.23016302, -0.09324552,  0.9619229 ]], dtype=float32)), (&lt;jax.Array([[1, 2, 2]], dtype=int32)&gt;, &lt;b3d.pose.core.Pose object&gt;, Intrinsics(width=&lt;jax.Array([100], dtype=int32, weak_type=True)&gt;, height=&lt;jax.Array([50], dtype=int32, weak_type=True)&gt;, fx=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, fy=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;, cx=&lt;jax.Array([50.], dtype=float32, weak_type=True)&gt;, cy=&lt;jax.Array([25.], dtype=float32, weak_type=True)&gt;, near=&lt;jax.Array([1.e-06], dtype=float32, weak_type=True)&gt;, far=&lt;jax.Array([100.], dtype=float32, weak_type=True)&gt;)))), score=&lt;jax.Array(26.439108, dtype=float32)&gt;)], score=&lt;jax.Array(20.360584, dtype=float32)&gt;)"}, "b3d.colors": {"fullname": "b3d.colors", "modulename": "b3d.colors", "kind": "module", "doc": "<p></p>\n"}, "b3d.colors.rgb_to_lab": {"fullname": "b3d.colors.rgb_to_lab", "modulename": "b3d.colors", "qualname": "rgb_to_lab", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.lab_to_rgb": {"fullname": "b3d.colors.lab_to_rgb", "modulename": "b3d.colors", "qualname": "lab_to_rgb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lab</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.labd_to_rgbd": {"fullname": "b3d.colors.labd_to_rgbd", "modulename": "b3d.colors", "qualname": "labd_to_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">labd</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.rgbd_to_labd": {"fullname": "b3d.colors.rgbd_to_labd", "modulename": "b3d.colors", "qualname": "rgbd_to_labd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.rgb_to_hsv": {"fullname": "b3d.colors.rgb_to_hsv", "modulename": "b3d.colors", "qualname": "rgb_to_hsv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.cie94_err": {"fullname": "b3d.colors.cie94_err", "modulename": "b3d.colors", "qualname": "cie94_err", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lab1</span>, </span><span class=\"param\"><span class=\"n\">lab2</span>, </span><span class=\"param\"><span class=\"n\">kC</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">kH</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">kL</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">K1</span><span class=\"o\">=</span><span class=\"mf\">0.045</span>, </span><span class=\"param\"><span class=\"n\">K2</span><span class=\"o\">=</span><span class=\"mf\">0.015</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.ciede2000_err": {"fullname": "b3d.colors.ciede2000_err", "modulename": "b3d.colors", "qualname": "ciede2000_err", "kind": "function", "doc": "<p>Calculates the CIEDE2000 standard difference between\nn pairs of L<em>a</em>b* space colors</p>\n\n<p>In:\n_lab1: (n, 3) array of colors\n_lab2: (n, 3) array of colors</p>\n\n<p>Out:\n(n, 1) array of CIEDE2000 color difference between the input colors</p>\n\n<p>References:\n<a href=\"https://www.wikiwand.com/en/Color_difference#CIEDE2000\">https://www.wikiwand.com/en/Color_difference#CIEDE2000</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">I1</span>, </span><span class=\"param\"><span class=\"n\">I2</span>, </span><span class=\"param\"><span class=\"n\">kC</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">kH</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">kL</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">K1</span><span class=\"o\">=</span><span class=\"mf\">0.045</span>, </span><span class=\"param\"><span class=\"n\">K2</span><span class=\"o\">=</span><span class=\"mf\">0.015</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.colors.color_error_helper": {"fullname": "b3d.colors.color_error_helper", "modulename": "b3d.colors", "qualname": "color_error_helper", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">observed_rgb</span>, </span><span class=\"param\"><span class=\"n\">rendered_rgb</span>, </span><span class=\"param\"><span class=\"n\">lab_tolerance</span>, </span><span class=\"param\"><span class=\"n\">cielab</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io": {"fullname": "b3d.io", "modulename": "b3d.io", "kind": "module", "doc": "<p></p>\n"}, "b3d.io.MeshData": {"fullname": "b3d.io.MeshData", "modulename": "b3d.io", "qualname": "MeshData", "kind": "class", "doc": "<p>Mesh data class. Note: Spatial units are measured in meters.</p>\n\n<p>Args:\n        vertices_positions:     (T, N, 3) Float Array\n        vertices_normals:       (T, N, 3) Float Array\n        vertices_uv:            (N, 2) Float Array; corresponds to the texture coordinates associated with the vertex. [0,0] represents the bottom-left corner of the texture, and [1,1] represents the top-rigtht.\n        triangles:              (M, 3) Int Array; vertices indexes\n        triangles_materials:    (M, ) Int Array; material index\n        materials:              (A, B, H, W, 3) Uint8 Array; there are B RGB textures for each material. For each material, the first texture is the color map texture, the second one (optional) is the normal map texture, and the third one (optional), the specular map texture.</p>\n"}, "b3d.io.MeshData.__init__": {"fullname": "b3d.io.MeshData.__init__", "modulename": "b3d.io", "qualname": "MeshData.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">vertices_positions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">vertices_normals</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">vertices_uv</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">triangles</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">triangles_materials</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">materials</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "b3d.io.MeshData.vertices_positions": {"fullname": "b3d.io.MeshData.vertices_positions", "modulename": "b3d.io", "qualname": "MeshData.vertices_positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.MeshData.vertices_normals": {"fullname": "b3d.io.MeshData.vertices_normals", "modulename": "b3d.io", "qualname": "MeshData.vertices_normals", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.MeshData.vertices_uv": {"fullname": "b3d.io.MeshData.vertices_uv", "modulename": "b3d.io", "qualname": "MeshData.vertices_uv", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.MeshData.triangles": {"fullname": "b3d.io.MeshData.triangles", "modulename": "b3d.io", "qualname": "MeshData.triangles", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.MeshData.triangles_materials": {"fullname": "b3d.io.MeshData.triangles_materials", "modulename": "b3d.io", "qualname": "MeshData.triangles_materials", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.MeshData.materials": {"fullname": "b3d.io.MeshData.materials", "modulename": "b3d.io", "qualname": "MeshData.materials", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.MeshData.save": {"fullname": "b3d.io.MeshData.save", "modulename": "b3d.io", "qualname": "MeshData.save", "kind": "function", "doc": "<p>Saves input to file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.MeshData.load": {"fullname": "b3d.io.MeshData.load", "modulename": "b3d.io", "qualname": "MeshData.load", "kind": "function", "doc": "<p>Loads input from file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData": {"fullname": "b3d.io.FeatureTrackData", "modulename": "b3d.io", "qualname": "FeatureTrackData", "kind": "class", "doc": "<p>Feature track data class. Note: Spatial units are measured in meters.</p>\n\n<p>Args:\n        observed_keypoints_positions: (T, N, 2) Float Array; 2D points stored as [x, y]\n        keypoint_visibility:          (T, N) Boolean Array\n        camera_intrinsics:            (8,) Float Array of camera intrinsics, see <code>camera.py</code>.\n        rgbd_images:                  (T, H, W, 4) Float Array\n        (optional) fps:                          Float\n        (optional) observed_features :           (T, N, F) Float Array OR None\n        (optional) latent_keypoint_positions :   (T, N, 3) Float Array OR None\n        (optional) latent_keypoint_quaternions : (T, N, 4) Float Array OR None\n        (optional) object_assignments:           (N,) Int Array OR None\n        (optional) camera_position:              (T, 3) Float Array OR None\n        (optional) camera_quaternion:            (T, 4) Float Array OR None</p>\n\n<p>Example:</p>\n\n<pre><code># Initialize\ndata = FeatureTrackData(\n    observed_keypoints_positions = uv,\n    keypoint_visibility = vis,\n    camera_intrinsics = intr,\n    rgbd_images = rgb_or_rgbd)\n\n# Save and load\nfname = \"_temp.npz\"\ndata.save(fname)\ndata = FeatureTrackData.load(fname)\n\n# Quick access\nuv   = data.uv\nvis  = data.vis\nrgb  = data.rgb\nrgbd = data.rgbd\nintr = data.intrinsics\ncams = data.camera_poses\n</code></pre>\n\n<p>FeatureTrackData.load also supports\n(1) Loading from npz files with a <code>rgb_imgs</code> field instead of <code>rgbd_images</code>.\n    In this case, the loader also looks for a <code>xyz</code> field to complete the <code>rgbd_images</code>;\n    if none is found, the depth channel is set to zeros.\n(2) Loading from npz files with a <code>latent_keypoint_visibility</code> field instead of <code>keypoint_visibility</code>.</p>\n"}, "b3d.io.FeatureTrackData.__init__": {"fullname": "b3d.io.FeatureTrackData.__init__", "modulename": "b3d.io", "qualname": "FeatureTrackData.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">observed_keypoints_positions</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">keypoint_visibility</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">rgbd_images</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">camera_intrinsics</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">fps</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">observed_features</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">latent_keypoint_positions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">latent_keypoint_quaternions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">object_assignments</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_quaternion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"fullname": "b3d.io.FeatureTrackData.observed_keypoints_positions", "modulename": "b3d.io", "qualname": "FeatureTrackData.observed_keypoints_positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.FeatureTrackData.keypoint_visibility": {"fullname": "b3d.io.FeatureTrackData.keypoint_visibility", "modulename": "b3d.io", "qualname": "FeatureTrackData.keypoint_visibility", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.FeatureTrackData.camera_intrinsics": {"fullname": "b3d.io.FeatureTrackData.camera_intrinsics", "modulename": "b3d.io", "qualname": "FeatureTrackData.camera_intrinsics", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.FeatureTrackData.rgbd_images": {"fullname": "b3d.io.FeatureTrackData.rgbd_images", "modulename": "b3d.io", "qualname": "FeatureTrackData.rgbd_images", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.FeatureTrackData.fps": {"fullname": "b3d.io.FeatureTrackData.fps", "modulename": "b3d.io", "qualname": "FeatureTrackData.fps", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.observed_features": {"fullname": "b3d.io.FeatureTrackData.observed_features", "modulename": "b3d.io", "qualname": "FeatureTrackData.observed_features", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"fullname": "b3d.io.FeatureTrackData.latent_keypoint_positions", "modulename": "b3d.io", "qualname": "FeatureTrackData.latent_keypoint_positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"fullname": "b3d.io.FeatureTrackData.latent_keypoint_quaternions", "modulename": "b3d.io", "qualname": "FeatureTrackData.latent_keypoint_quaternions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.object_assignments": {"fullname": "b3d.io.FeatureTrackData.object_assignments", "modulename": "b3d.io", "qualname": "FeatureTrackData.object_assignments", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.camera_position": {"fullname": "b3d.io.FeatureTrackData.camera_position", "modulename": "b3d.io", "qualname": "FeatureTrackData.camera_position", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.camera_quaternion": {"fullname": "b3d.io.FeatureTrackData.camera_quaternion", "modulename": "b3d.io", "qualname": "FeatureTrackData.camera_quaternion", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[jax.Array]", "default_value": "None"}, "b3d.io.FeatureTrackData.num_frames": {"fullname": "b3d.io.FeatureTrackData.num_frames", "modulename": "b3d.io", "qualname": "FeatureTrackData.num_frames", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.num_keypoints": {"fullname": "b3d.io.FeatureTrackData.num_keypoints", "modulename": "b3d.io", "qualname": "FeatureTrackData.num_keypoints", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.shape": {"fullname": "b3d.io.FeatureTrackData.shape", "modulename": "b3d.io", "qualname": "FeatureTrackData.shape", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.uv": {"fullname": "b3d.io.FeatureTrackData.uv", "modulename": "b3d.io", "qualname": "FeatureTrackData.uv", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.vis": {"fullname": "b3d.io.FeatureTrackData.vis", "modulename": "b3d.io", "qualname": "FeatureTrackData.vis", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.rgb": {"fullname": "b3d.io.FeatureTrackData.rgb", "modulename": "b3d.io", "qualname": "FeatureTrackData.rgb", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.visibility": {"fullname": "b3d.io.FeatureTrackData.visibility", "modulename": "b3d.io", "qualname": "FeatureTrackData.visibility", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.rgbd": {"fullname": "b3d.io.FeatureTrackData.rgbd", "modulename": "b3d.io", "qualname": "FeatureTrackData.rgbd", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.camera_poses": {"fullname": "b3d.io.FeatureTrackData.camera_poses", "modulename": "b3d.io", "qualname": "FeatureTrackData.camera_poses", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.FeatureTrackData.intrinsics": {"fullname": "b3d.io.FeatureTrackData.intrinsics", "modulename": "b3d.io", "qualname": "FeatureTrackData.intrinsics", "kind": "variable", "doc": "<p>Returns camera intrinsics as an Intrinsics object</p>\n"}, "b3d.io.FeatureTrackData.save": {"fullname": "b3d.io.FeatureTrackData.save", "modulename": "b3d.io", "qualname": "FeatureTrackData.save", "kind": "function", "doc": "<p>Saves input to file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.load": {"fullname": "b3d.io.FeatureTrackData.load", "modulename": "b3d.io", "qualname": "FeatureTrackData.load", "kind": "function", "doc": "<p>Loads input from file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.slice_time": {"fullname": "b3d.io.FeatureTrackData.slice_time", "modulename": "b3d.io", "qualname": "FeatureTrackData.slice_time", "kind": "function", "doc": "<p>Slices data in time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start_frame</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">end_frame</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.downscale": {"fullname": "b3d.io.FeatureTrackData.downscale", "modulename": "b3d.io", "qualname": "FeatureTrackData.downscale", "kind": "function", "doc": "<p>Downscales the rgbd images by the given factor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.has_depth_channel": {"fullname": "b3d.io.FeatureTrackData.has_depth_channel", "modulename": "b3d.io", "qualname": "FeatureTrackData.has_depth_channel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"fullname": "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0", "modulename": "b3d.io", "qualname": "FeatureTrackData.remove_points_invisible_at_frame0", "kind": "function", "doc": "<p>Filter this FeatureTrackData to only include keypoints that are visible at frame 0.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"fullname": "b3d.io.FeatureTrackData.all_points_visible_at_frame0", "modulename": "b3d.io", "qualname": "FeatureTrackData.all_points_visible_at_frame0", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"fullname": "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0", "modulename": "b3d.io", "qualname": "FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0", "kind": "function", "doc": "<p>Filter the keypoints in this FeatureTrackData object, returning a new\nFeatureTrackData in which no two observed keypoints\nare closer than <code>min_2D_distance</code> pixels in the first frame.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">min_2D_distance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"fullname": "b3d.io.FeatureTrackData.min_2D_distance_at_frame0", "modulename": "b3d.io", "qualname": "FeatureTrackData.min_2D_distance_at_frame0", "kind": "function", "doc": "<p>Returns the minimum 2D distance between any two keypoints at frame 0.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.FeatureTrackData.quick_plot": {"fullname": "b3d.io.FeatureTrackData.quick_plot", "modulename": "b3d.io", "qualname": "FeatureTrackData.quick_plot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>, </span><span class=\"param\"><span class=\"n\">downsize</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.VideoInput": {"fullname": "b3d.io.VideoInput", "modulename": "b3d.io", "qualname": "VideoInput", "kind": "class", "doc": "<p>Video data input. Note: Spatial units are measured in meters.</p>\n\n<p>World Coordinates. The floor is x,y and up is z.\nCamera Pose. The camera pose should be interpretted as the z-axis pointing out of the camera,\n    x-axis pointing to the right, and y-axis pointing down. This is the OpenCV convention.\nQuaternions. We follow scipy.spatial.transform.Rotation.from_quat which uses scalar-last (x, y, z, w)\nCamera Intrinsics. We store it as an array of shape (8,) containing width, height, fx, fy, cx, cy, near, far.\n    The camera matrix is given by: $$ K = \\begin{bmatrix} f_x &amp; 0 &amp; c_x \\ 0 &amp; f_y &amp; c_y \\ 0 &amp; 0 &amp; 1 \\end{bmatrix} $$\nSpatial units. Spatial units are measured in meters (if not indicated otherwise).</p>\n\n<p><strong>Attributes:</strong></p>\n\n<ul>\n<li>rgb\nvideo_input['rgb'][t,i,j] contains RGB values in the interval [0,255] of pixel i,j at time t.\nShape: (T,H,W,3) -- Note this might be different from the width and height of xyz\nType: uint8, in [0,255]</li>\n<li>xyz\nvideo_input['xyz'][t,i,j] is the 3d point associated with pixel i,j at time t in camera coordinates\nShape: (T, H', W', 3) -- Note this might be different from the width and height of rgb\nType: Float</li>\n<li>camera_positions\nvideo_input['camera_positions'][t] is the position of the camera at time t\nShape: (T, 3)\nType: Float</li>\n<li>camera_quaternions\nvideo_input['camera_quaternions'][t] is the quaternion (in xyzw format) representing the orientation of the camera at time t\nShape: (T, 4)\nType: Float</li>\n<li>camera_intrinsics_rgb\nvideo_input['camera_intrinsics_rgb'][:] contains width, height, fx, fy, cx, cy, near, far. Width and height determine the shape of rgb above\nShape: (8,)\nType: Float</li>\n<li>camera_intrinsics_depth\nvideo_input['camera_intrinsics_depth'][:] contains width, height, fx, fy, cx, cy, near, far. Width and height determine the shape of xyz above\nShape: (8,)\nType: Float</li>\n<li>fps\nFrames per second of the video\nType: Float</li>\n</ul>\n\n<p><strong>Note:</strong>\nFor compactness, rgb values are saved as uint8 values, however\nthe output of the renderer is a float between 0 and 1. VideoInput\nstores uint8 colors, so please use the rgb_float property for\ncompatibility.</p>\n\n<p><strong>Note:</strong>\nThe width and height of the <code>rgb</code> and <code>xyz</code> arrays may differ.\nTheir shapes match the entries in <code>camera_intrinsics_rgb</code> and\n<code>camera_intrinsics_depth</code>, respectively. The latter was used\nto project the <code>depth</code> arrays to <code>xyz</code>.</p>\n"}, "b3d.io.VideoInput.__init__": {"fullname": "b3d.io.VideoInput.__init__", "modulename": "b3d.io", "qualname": "VideoInput.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rgb</span>,</span><span class=\"param\">\t<span class=\"n\">xyz</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_positions</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_quaternions</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_intrinsics_rgb</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">camera_intrinsics_depth</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "b3d.io.VideoInput.rgb": {"fullname": "b3d.io.VideoInput.rgb", "modulename": "b3d.io", "qualname": "VideoInput.rgb", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.xyz": {"fullname": "b3d.io.VideoInput.xyz", "modulename": "b3d.io", "qualname": "VideoInput.xyz", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.camera_positions": {"fullname": "b3d.io.VideoInput.camera_positions", "modulename": "b3d.io", "qualname": "VideoInput.camera_positions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.camera_quaternions": {"fullname": "b3d.io.VideoInput.camera_quaternions", "modulename": "b3d.io", "qualname": "VideoInput.camera_quaternions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"fullname": "b3d.io.VideoInput.camera_intrinsics_rgb", "modulename": "b3d.io", "qualname": "VideoInput.camera_intrinsics_rgb", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.camera_intrinsics_depth": {"fullname": "b3d.io.VideoInput.camera_intrinsics_depth", "modulename": "b3d.io", "qualname": "VideoInput.camera_intrinsics_depth", "kind": "variable", "doc": "<p></p>\n", "annotation": ": jax.Array"}, "b3d.io.VideoInput.z": {"fullname": "b3d.io.VideoInput.z", "modulename": "b3d.io", "qualname": "VideoInput.z", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.VideoInput.depth": {"fullname": "b3d.io.VideoInput.depth", "modulename": "b3d.io", "qualname": "VideoInput.depth", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.VideoInput.rgbd": {"fullname": "b3d.io.VideoInput.rgbd", "modulename": "b3d.io", "qualname": "VideoInput.rgbd", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.VideoInput.fps": {"fullname": "b3d.io.VideoInput.fps", "modulename": "b3d.io", "qualname": "VideoInput.fps", "kind": "variable", "doc": "<p></p>\n"}, "b3d.io.VideoInput.to_dict": {"fullname": "b3d.io.VideoInput.to_dict", "modulename": "b3d.io", "qualname": "VideoInput.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.VideoInput.save": {"fullname": "b3d.io.VideoInput.save", "modulename": "b3d.io", "qualname": "VideoInput.save", "kind": "function", "doc": "<p>Saves VideoInput to file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.VideoInput.save_in_timeframe": {"fullname": "b3d.io.VideoInput.save_in_timeframe", "modulename": "b3d.io", "qualname": "VideoInput.save_in_timeframe", "kind": "function", "doc": "<p>Saves new VideoInput containing data\nbetween a timeframe into file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">start_t</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">end_t</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.VideoInput.load": {"fullname": "b3d.io.VideoInput.load", "modulename": "b3d.io", "qualname": "VideoInput.load", "kind": "function", "doc": "<p>Loads VideoInput from file</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.io.VideoInput.rgb_float": {"fullname": "b3d.io.VideoInput.rgb_float", "modulename": "b3d.io", "qualname": "VideoInput.rgb_float", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose": {"fullname": "b3d.pose", "modulename": "b3d.pose", "kind": "module", "doc": "<p></p>\n"}, "b3d.pose.core": {"fullname": "b3d.pose.core", "modulename": "b3d.pose.core", "kind": "module", "doc": "<p></p>\n"}, "b3d.pose.core.Array": {"fullname": "b3d.pose.core.Array", "modulename": "b3d.pose.core", "qualname": "Array", "kind": "class", "doc": "<p>Array base class for JAX</p>\n\n<p><code>jax.Array</code> is the public interface for instance checks and type annotation\nof JAX arrays and tracers. Its main applications are in instance checks and\ntype annotations; for example::</p>\n\n<p>x = jnp.arange(5)\n  isinstance(x, jax.Array)  # returns True both inside and outside traced functions.</p>\n\n<p>def f(x: Array) -> Array:  # type annotations are valid for traced and non-traced types.\n    return x</p>\n\n<p><code>jax.Array</code> should not be used directly for creation of arrays; instead you\nshould use array creation routines offered in <code>jax.numpy</code>, such as\n<code>jax.numpy.array()</code>, <code>jax.numpy.zeros()</code>, <code>jax.numpy.ones()</code>,\n<code>jax.numpy.full()</code>, <code>jax.numpy.arange()</code>, etc.</p>\n", "bases": "abc.ABC"}, "b3d.pose.core.Array.dtype": {"fullname": "b3d.pose.core.Array.dtype", "modulename": "b3d.pose.core", "qualname": "Array.dtype", "kind": "variable", "doc": "<p>The data type (<code>numpy.dtype</code>) of the array.</p>\n", "annotation": ": numpy.dtype"}, "b3d.pose.core.Array.ndim": {"fullname": "b3d.pose.core.Array.ndim", "modulename": "b3d.pose.core", "qualname": "Array.ndim", "kind": "variable", "doc": "<p>The number of dimensions in the array.</p>\n", "annotation": ": int"}, "b3d.pose.core.Array.size": {"fullname": "b3d.pose.core.Array.size", "modulename": "b3d.pose.core", "qualname": "Array.size", "kind": "variable", "doc": "<p>The total number of elements in the array.</p>\n", "annotation": ": int"}, "b3d.pose.core.Array.shape": {"fullname": "b3d.pose.core.Array.shape", "modulename": "b3d.pose.core", "qualname": "Array.shape", "kind": "variable", "doc": "<p>The shape of the array.</p>\n", "annotation": ": tuple[int, ...]"}, "b3d.pose.core.Array.addressable_data": {"fullname": "b3d.pose.core.Array.addressable_data", "modulename": "b3d.pose.core", "qualname": "Array.addressable_data", "kind": "function", "doc": "<p>Return an array of the addressable data at a particular index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.addressable_shards": {"fullname": "b3d.pose.core.Array.addressable_shards", "modulename": "b3d.pose.core", "qualname": "Array.addressable_shards", "kind": "variable", "doc": "<p>List of addressable shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.pose.core.Array.global_shards": {"fullname": "b3d.pose.core.Array.global_shards", "modulename": "b3d.pose.core", "qualname": "Array.global_shards", "kind": "variable", "doc": "<p>List of global shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.pose.core.Array.is_fully_addressable": {"fullname": "b3d.pose.core.Array.is_fully_addressable", "modulename": "b3d.pose.core", "qualname": "Array.is_fully_addressable", "kind": "variable", "doc": "<p>Is this Array fully addressable?</p>\n\n<p>A jax.Array is fully addressable if the current process can address all of\nthe devices named in the <code>Sharding</code>. <code>is_fully_addressable</code> is\nequivalent to \"is_local\" in multi-process JAX.</p>\n\n<p>Note that fully replicated is not equal to fully addressable i.e.\na jax.Array which is fully replicated can span across multiple hosts and is\nnot fully addressable.</p>\n", "annotation": ": bool"}, "b3d.pose.core.Array.is_fully_replicated": {"fullname": "b3d.pose.core.Array.is_fully_replicated", "modulename": "b3d.pose.core", "qualname": "Array.is_fully_replicated", "kind": "variable", "doc": "<p>Is this Array fully replicated?</p>\n", "annotation": ": bool"}, "b3d.pose.core.Array.sharding": {"fullname": "b3d.pose.core.Array.sharding", "modulename": "b3d.pose.core", "qualname": "Array.sharding", "kind": "variable", "doc": "<p>The sharding for the array.</p>\n", "annotation": ": Any"}, "b3d.pose.core.Array.all": {"fullname": "b3d.pose.core.Array.all", "modulename": "b3d.pose.core", "qualname": "Array.all", "kind": "function", "doc": "<p>Test whether all array elements along a given axis evaluate to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.all()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical AND reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical AND over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `all` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for all <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>all : ndarray, bool\n    A new boolean or array is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.any": {"fullname": "b3d.pose.core.Array.any", "modulename": "b3d.pose.core", "qualname": "Array.any", "kind": "function", "doc": "<p>Test whether any array element along a given axis evaluates to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.any()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns single boolean if <code>axis</code> is <code>None</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical OR reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical OR over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `any` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for any <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>any : bool or ndarray\n    A new boolean or <code>ndarray</code> is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.argmax": {"fullname": "b3d.pose.core.Array.argmax", "modulename": "b3d.pose.core", "qualname": "Array.argmax", "kind": "function", "doc": "<p>Returns the indices of the maximum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmax()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.argmin": {"fullname": "b3d.pose.core.Array.argmin", "modulename": "b3d.pose.core", "qualname": "Array.argmin", "kind": "function", "doc": "<p>Returns the indices of the minimum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmin()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.argpartition": {"fullname": "b3d.pose.core.Array.argpartition", "modulename": "b3d.pose.core", "qualname": "Array.argpartition", "kind": "function", "doc": "<p>Perform an indirect partition along the given axis using the</p>\n\n<p>LAX-backend implementation of <code>numpy.argpartition()</code>.</p>\n\n<p>The JAX version requires the <code>kth</code> argument to be a static integer rather than\na general array. This is implemented via two calls to <code>jax.lax.top_k()</code>. If\nyou're only accessing the top or bottom k values of the output, it may be more\nefficient to call <code>jax.lax.top_k()</code> directly.</p>\n\n<p>The JAX version differs from the NumPy version in the treatment of NaN entries;\nNaNs which have the negative bit set are sorted to the beginning of the array.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>algorithm specified by the <code>kind</code> keyword. It returns an array of\nindices of the same shape as <code>a</code> that index data along the given\naxis in partitioned order.</p>\n\n<p><em>New in version 1.8.0.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\nkth : int or sequence of ints\n    Element index to partition by. The k-th element will be in its\n    final sorted position and all smaller elements will be moved\n    before it and all larger elements behind it. The order of all\n    elements in the partitions is undefined. If provided with a\n    sequence of k-th it will partition all of them into their sorted\n    position at once.</p>\n\n<pre><code>*Deprecated since version 1.22.0:*\nPassing booleans as index is deprecated.\n</code></pre>\n\n<p>axis : int or None, optional\n    Axis along which to sort. The default is -1 (the last axis). If\n    None, the flattened array is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that partition <code>a</code> along the specified axis.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a partitioned <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the partitioned <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">kth</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.argsort": {"fullname": "b3d.pose.core.Array.argsort", "modulename": "b3d.pose.core", "qualname": "Array.argsort", "kind": "function", "doc": "<p>Returns the indices that would sort an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.argsort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Perform an indirect sort along the given axis using the algorithm specified\nby the <code>kind</code> keyword. It returns an array of indices of the same shape as\n<code>a</code> that index data along the given axis in sorted order.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\naxis : int or None, optional\n    Axis along which to sort.  The default is -1 (the last axis). If None,\n    the flattened array is used.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that sort <code>a</code> along the specified <code>axis</code>.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a sorted <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the sorted <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.astype": {"fullname": "b3d.pose.core.Array.astype", "modulename": "b3d.pose.core", "qualname": "Array.astype", "kind": "function", "doc": "<p>Copy the array and cast to a specified dtype.</p>\n\n<p>This is implemented via <code>jax.lax.convert_element_type()</code>, which may\nhave slightly different behavior than <code>numpy.ndarray.astype()</code> in\nsome cases. In particular, the details of float-to-int and int-to-float\ncasts are implementation dependent.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">copy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Device</span> <span class=\"o\">|</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Sharding</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.choose": {"fullname": "b3d.pose.core.Array.choose", "modulename": "b3d.pose.core", "qualname": "Array.choose", "kind": "function", "doc": "<p>Construct an array from an index array and a list of arrays to choose from.</p>\n\n<p>LAX-backend implementation of <code>numpy.choose()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>First of all, if confused or uncertain, definitely look at the Examples -\nin its full generality, this function is less simple than it might\nseem from the following code description (below ndi =\n<code>numpy.lib.index_tricks</code>):</p>\n\n<p><code>np.choose(a,c) == np.array([c[a[I]][I] for I in ndi.ndindex(a.shape)])</code>.</p>\n\n<p>But this omits some subtleties.  Here is a fully general summary:</p>\n\n<p>Given an \"index\" array (<code>a</code>) of integers and a sequence of <code>n</code> arrays\n(<code>choices</code>), <code>a</code> and each choice array are first broadcast, as necessary,\nto arrays of a common shape; calling these <em>Ba</em> and <em>Bchoices[i], i =\n0,...,n-1</em> we have that, necessarily, <code>Ba.shape == Bchoices[i].shape</code>\nfor each <code>i</code>.  Then, a new array with shape <code>Ba.shape</code> is created as\nfollows:</p>\n\n<ul>\n<li><p>if <code>mode='raise'</code> (the default), then, first of all, each element of\n<code>a</code> (and thus <code>Ba</code>) must be in the range <code>[0, n-1]</code>; now, suppose\nthat <code>i</code> (in that range) is the value at the <code>(j0, j1, ..., jm)</code>\nposition in <code>Ba</code> - then the value at the same position in the new array\nis the value in <code>Bchoices[i]</code> at that same position;</p></li>\n<li><p>if <code>mode='wrap'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; modular arithmetic is used to map integers outside the range\n<code>[0, n-1]</code> back into that range; and then the new array is constructed\nas above;</p></li>\n<li><p>if <code>mode='clip'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; negative integers are mapped to 0; values greater than <code>n-1</code>\nare mapped to <code>n-1</code>; and then the new array is constructed as above.</p></li>\n</ul>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : int array\n    This array must contain integers in <code>[0, n-1]</code>, where <code>n</code> is the\n    number of choices, unless <code>mode=wrap</code> or <code>mode=clip</code>, in which\n    cases any integers are permissible.\nchoices : sequence of arrays\n    Choice arrays. <code>a</code> and all of the choices must be broadcastable to the\n    same shape.  If <code>choices</code> is itself an array (not recommended), then\n    its outermost dimension (i.e., the one corresponding to\n    <code>choices.shape[0]</code>) is taken as defining the \"sequence\".\nmode : {'raise' (default), 'wrap', 'clip'}, optional\n    Specifies how indices outside <code>[0, n-1]</code> will be treated:</p>\n\n<pre><code>  * 'raise' : an exception is raised\n  * 'wrap' : value becomes value mod ``n``\n  * 'clip' : values &lt; 0 are mapped to 0, values &gt; n-1 are mapped to n-1\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>merged_array : array\n    The merged result.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">choices</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;raise&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.clip": {"fullname": "b3d.pose.core.Array.clip", "modulename": "b3d.pose.core", "qualname": "Array.clip", "kind": "function", "doc": "<p>Return an array whose values are limited to a specified range.</p>\n\n<p>Refer to <code>jax.numpy.clip()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.conj": {"fullname": "b3d.pose.core.Array.conj", "modulename": "b3d.pose.core", "qualname": "Array.conj", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.conjugate": {"fullname": "b3d.pose.core.Array.conjugate", "modulename": "b3d.pose.core", "qualname": "Array.conjugate", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.compress": {"fullname": "b3d.pose.core.Array.compress", "modulename": "b3d.pose.core", "qualname": "Array.compress", "kind": "function", "doc": "<p>Return selected slices of this array along given axis.</p>\n\n<p>Refer to <code>jax.numpy.compress()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.copy": {"fullname": "b3d.pose.core.Array.copy", "modulename": "b3d.pose.core", "qualname": "Array.copy", "kind": "function", "doc": "<p>Return an array copy of the given object.</p>\n\n<p>LAX-backend implementation of <code>numpy.copy()</code>.</p>\n\n<p>This function will create arrays on JAX's default device. For control of the\ndevice placement of data, see <code>jax.device_put()</code>. More information is\navailable in the JAX FAQ at :ref:<code>faq-data-placement</code> (full FAQ at\nhttps://jax.readthedocs.io/en/latest/faq.html).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\norder : {'C', 'F', 'A', 'K'}, optional\n    Controls the memory layout of the copy. 'C' means C-order,\n    'F' means F-order, 'A' means 'F' if <code>a</code> is Fortran contiguous,\n    'C' otherwise. 'K' means match the layout of <code>a</code> as closely\n    as possible. (Note that this function and <code>ndarray.copy()</code> are very\n    similar, but have different default values for their order=\n    arguments.)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>arr : ndarray\n    Array interpretation of <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.cumprod": {"fullname": "b3d.pose.core.Array.cumprod", "modulename": "b3d.pose.core", "qualname": "Array.cumprod", "kind": "function", "doc": "<p>Return the cumulative product of elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumprod()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative product is computed.  By default\n    the input is flattened.\ndtype : dtype, optional\n    Type of the returned array, as well as of the accumulator in which\n    the elements are multiplied.  If <em>dtype</em> is not specified, it\n    defaults to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with\n    a precision less than that of the default platform integer.  In\n    that case, the default platform integer is used instead.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumprod : ndarray\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to out is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.cumsum": {"fullname": "b3d.pose.core.Array.cumsum", "modulename": "b3d.pose.core", "qualname": "Array.cumsum", "kind": "function", "doc": "<p>Return the cumulative sum of the elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumsum()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative sum is computed. The default\n    (None) is to compute the cumsum over the flattened array.\ndtype : dtype, optional\n    Type of the returned array and of the accumulator in which the\n    elements are summed.  If <code>dtype</code> is not specified, it defaults\n    to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with a\n    precision less than that of the default platform integer.  In\n    that case, the default platform integer is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumsum_along_axis : ndarray.\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to <code>out</code> is returned. The\n    result has the same size as <code>a</code>, and the same shape as <code>a</code> if\n    <code>axis</code> is not None or <code>a</code> is a 1-d array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.diagonal": {"fullname": "b3d.pose.core.Array.diagonal", "modulename": "b3d.pose.core", "qualname": "Array.diagonal", "kind": "function", "doc": "<p>Return specified diagonals.</p>\n\n<p>LAX-backend implementation of <code>numpy.diagonal()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, returns the diagonal of <code>a</code> with the given offset,\ni.e., the collection of elements of the form <code>a[i, i+offset]</code>.  If\n<code>a</code> has more than two dimensions, then the axes specified by <code>axis1</code>\nand <code>axis2</code> are used to determine the 2-D sub-array whose diagonal is\nreturned.  The shape of the resulting array can be determined by\nremoving <code>axis1</code> and <code>axis2</code> and appending an index to the right equal\nto the size of the resulting diagonals.</p>\n\n<p>In versions of NumPy prior to 1.7, this function always returned a new,\nindependent array containing a copy of the values in the diagonal.</p>\n\n<p>In NumPy 1.7 and 1.8, it continues to return a copy of the diagonal,\nbut depending on this fact is deprecated. Writing to the resulting\narray continues to work as it used to, but a FutureWarning is issued.</p>\n\n<p>Starting in NumPy 1.9 it returns a read-only view on the original array.\nAttempting to write to the resulting array will produce an error.</p>\n\n<p>In some future release, it will return a read/write view and writing to\nthe returned array will alter your original array.  The returned array\nwill have the same type as the input array.</p>\n\n<p>If you don't write to the array returned by this function, then you can\njust ignore all of the above.</p>\n\n<p>If you depend on the current behavior, then we suggest copying the\nreturned array explicitly, i.e., use <code>np.diagonal(a).copy()</code> instead\nof just <code>np.diagonal(a)</code>. This will work with both past and future\nversions of NumPy.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal.  Can be positive or\n    negative.  Defaults to main diagonal (0).\naxis1 : int, optional\n    Axis to be used as the first axis of the 2-D sub-arrays from which\n    the diagonals should be taken.  Defaults to first axis (0).\naxis2 : int, optional\n    Axis to be used as the second axis of the 2-D sub-arrays from\n    which the diagonals should be taken. Defaults to second axis (1).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>array_of_diagonals : ndarray\n    If <code>a</code> is 2-D, then a 1-D array containing the diagonal and of the\n    same type as <code>a</code> is returned unless <code>a</code> is a <code>matrix</code>, in which case\n    a 1-D array rather than a (2-D) <code>matrix</code> is returned in order to\n    maintain backward compatibility.</p>\n\n<pre><code>If ``a.ndim &gt; 2``, then the dimensions specified by `axis1` and `axis2`\nare removed, and a new axis inserted at the end corresponding to the\ndiagonal.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.dot": {"fullname": "b3d.pose.core.Array.dot", "modulename": "b3d.pose.core", "qualname": "Array.dot", "kind": "function", "doc": "<p>Compute the dot product of two arrays.</p>\n\n<p>JAX implementation of <code>numpy.dot()</code>.</p>\n\n<p>This differs from <code>jax.numpy.matmul()</code> in two respects:</p>\n\n<ul>\n<li>if either <code>a</code> or <code>b</code> is a scalar, the result of <code>dot</code> is equivalent to\n<code>jax.numpy.multiply()</code>, while the result of <code>matmul</code> is an error.</li>\n<li>if <code>a</code> and <code>b</code> have more than 2 dimensions, the batch indices are\nstacked rather than broadcast.</li>\n</ul>\n\n<p>Args:\n  a: first input array, of shape <code>(..., N)</code>.\n  b: second input array. Must have shape <code>(N,)</code> or <code>(..., N, M)</code>.\n    In the multi-dimensional case, leading dimensions must be broadcast-compatible\n    with the leading dimensions of <code>a</code>.\n  precision: either <code>None</code> (default), which means the default precision for\n    the backend, a <code>~jax.lax.Precision</code> enum value (<code>Precision.DEFAULT</code>,\n    <code>Precision.HIGH</code> or <code>Precision.HIGHEST</code>) or a tuple of two\n    such values indicating precision of <code>a</code> and <code>b</code>.\n  preferred_element_type: either <code>None</code> (default), which means the default\n    accumulation type for the input types, or a datatype, indicating to\n    accumulate results to and return a result with that datatype.</p>\n\n<p>Returns:\n  array containing the dot product of the inputs, with batch dimensions of\n  <code>a</code> and <code>b</code> stacked rather than broadcast.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy.matmul()</code>: broadcasted batched matmul.</li>\n<li><code>jax.lax.dot_general()</code>: general batched matrix multiplication.</li>\n</ul>\n\n<p>Examples:\n  For scalar inputs, <code>dot</code> computes the element-wise product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">Array([2, 4, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For vector or matrix inputs, <code>dot</code> computes the vector or matrix product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([20, 38, 26], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[ 51,  60,  29],</span>\n<span class=\"go\">       [ 96, 114,  62],</span>\n<span class=\"go\">       [ 61,  78,  95]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For higher-dimensional matrix products, batch dimensions are stacked, whereas\n  in <code>~jax.numpy.matmul()</code> they are broadcast. For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 3, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 1)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">precision</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preferred_element_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.flatten": {"fullname": "b3d.pose.core.Array.flatten", "modulename": "b3d.pose.core", "qualname": "Array.flatten", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.item": {"fullname": "b3d.pose.core.Array.item", "modulename": "b3d.pose.core", "qualname": "Array.item", "kind": "function", "doc": "<p>Copy an element of an array to a standard Python scalar and return it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.max": {"fullname": "b3d.pose.core.Array.max", "modulename": "b3d.pose.core", "qualname": "Array.max", "kind": "function", "doc": "<p>Return the maximum of an array or maximum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.max()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``max`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The minimum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the maximum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>max : ndarray or scalar\n    Maximum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>. If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.mean": {"fullname": "b3d.pose.core.Array.mean", "modulename": "b3d.pose.core", "qualname": "Array.mean", "kind": "function", "doc": "<p>Compute the arithmetic mean along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.mean()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the average of the array elements.  The average is taken over\nthe flattened array by default, otherwise over the specified axis.\n<code>float64</code> intermediate and return values are used for integer inputs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose mean is desired. If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the means are computed. The default is to\n    compute the mean of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the mean.  For integer inputs, the default\n    is <code>float64</code>; for floating point inputs, it is the same as the\n    input dtype.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `mean` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the mean. See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>m : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the mean values,\n    otherwise a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.min": {"fullname": "b3d.pose.core.Array.min", "modulename": "b3d.pose.core", "qualname": "Array.min", "kind": "function", "doc": "<p>Return the minimum of an array or minimum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.min()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``min`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The maximum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the minimum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>min : ndarray or scalar\n    Minimum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>.  If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.nonzero": {"fullname": "b3d.pose.core.Array.nonzero", "modulename": "b3d.pose.core", "qualname": "Array.nonzero", "kind": "function", "doc": "<p>Return indices of nonzero elements of an array.</p>\n\n<p>JAX implementation of <code>numpy.nonzero()</code>.</p>\n\n<p>Because the size of the output of <code>nonzero</code> is data-dependent, the function\nis not compatible with JIT and other transformations. The JAX version adds\nthe optional <code>size</code> argument which must be specified statically for\n<code>jnp.nonzero</code> to be used within JAX's transformations.</p>\n\n<p>Args:\n  a: N-dimensional array.\n  size: optional static integer specifying the number of nonzero entries to\n    return. If there are more nonzero elements than the specified <code>size</code>,\n    then indices will be truncated at the end. If there are fewer nonzero\n    elements than the specified size, then indices will be padded with\n    <code>fill_value</code>, which defaults to zero.\n  fill_value: optional padding value when <code>size</code> is specified. Defaults to 0.</p>\n\n<p>Returns:\n  Tuple of JAX Arrays of length <code>a.ndim</code>, containing the indices of each\n  nonzero value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy flatnonzero()</code></li>\n<li><code>jax.numpy.where()</code></li>\n</ul>\n\n<p>Examples:</p>\n\n<p>One-dimensional array returns a length-1 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>Two-dimensional array returns a length-2 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([0, 1, 1], dtype=int32), Array([1, 0, 2], dtype=int32))</span>\n</code></pre>\n</div>\n\n<p>In either case, the resulting tuple of indices can be used directly to extract\n  the nonzero values:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"go\">Array([5, 6, 7], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>The output of <code>nonzero</code> has a dynamic shape, because the number of returned\n  indices depends on the contents of the input array. As such, it is incompatible\n  with JIT and other JAX transformations:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">)(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +IGNORE_EXCEPTION_DETAIL</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">  </span><span class=\"c\">...</span>\n<span class=\"gr\">ConcretizationTypeError</span>: <span class=\"n\">Abstract tracer value encountered where concrete value is expected: traced array with shape int32[].</span>\n<span class=\"x\">The size argument of jnp.nonzero must be statically specified to use jnp.nonzero within JAX transformations.</span>\n</code></pre>\n</div>\n\n<p>This can be addressed by passing a static <code>size</code> parameter to specify the\n  desired output shape:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span> <span class=\"o\">=</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">,</span> <span class=\"n\">static_argnames</span><span class=\"o\">=</span><span class=\"s1\">&#39;size&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>If <code>size</code> does not match the true size, the result will be either truncated or padded:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># size &lt; 3: indices are truncated</span>\n<span class=\"go\">(Array([1, 3], dtype=int32),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># size &gt; 3: indices are padded with zeros.</span>\n<span class=\"go\">(Array([1, 3, 5, 0, 0], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>You can specify a custom fill value for the padding using the <code>fill_value</code> argument:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"go\">(Array([1, 3, 5, 6, 6], dtype=int32),)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.prod": {"fullname": "b3d.pose.core.Array.prod", "modulename": "b3d.pose.core", "qualname": "Array.prod", "kind": "function", "doc": "<p>Return the product of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.prod()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a product is performed.  The default,\n    axis=None, will calculate the product of all the elements in the\n    input array. If axis is negative it counts from the last to the\n    first axis.\ndtype : dtype, optional\n    The type of the returned array, as well as of the accumulator in\n    which the elements are multiplied.  The dtype of <code>a</code> is used by\n    default unless <code>a</code> has an integer dtype of less precision than the\n    default platform integer.  In that case, if <code>a</code> is signed then the\n    platform integer is used while if <code>a</code> is unsigned then an unsigned\n    integer of the same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left in the\n    result as dimensions with size one. With this option, the result\n    will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `prod` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The starting value for this product. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the product. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>product_along_axis : ndarray, see <code>dtype</code> parameter above.\n    An array shaped as <code>a</code> but with the specified axis removed.\n    Returns a reference to <code>out</code> if specified.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.ptp": {"fullname": "b3d.pose.core.Array.ptp", "modulename": "b3d.pose.core", "qualname": "Array.ptp", "kind": "function", "doc": "<p>Range of values (maximum - minimum) along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.ptp()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The name of the function comes from the acronym for 'peak to peak'.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p><code>ptp</code> preserves the data type of the array. This means the\nreturn value for an input of signed integers with n bits\n(e.g. <code>np.int8</code>, <code>np.int16</code>, etc) is also a signed integer\nwith n bits.  In that case, peak-to-peak values greater than\n<code>2**(n-1)-1</code> will be returned as negative values. An example\nwith a work-around is shown below.</p>\n\n</div>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input values.\naxis : None or int or tuple of ints, optional\n    Axis along which to find the peaks.  By default, flatten the\n    array.  <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `ptp` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ptp : ndarray or scalar\n    The range of a given array - <code>scalar</code> if array is one-dimensional\n    or a new array holding the result along the given axis</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.ravel": {"fullname": "b3d.pose.core.Array.ravel", "modulename": "b3d.pose.core", "qualname": "Array.ravel", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.repeat": {"fullname": "b3d.pose.core.Array.repeat", "modulename": "b3d.pose.core", "qualname": "Array.repeat", "kind": "function", "doc": "<p>Repeat each element of an array after themselves</p>\n\n<p>LAX-backend implementation of <code>numpy.repeat()</code>.</p>\n\n<p>JAX adds the optional <code>total_repeat_length</code> parameter which specifies the total\nnumber of repeat, and defaults to sum(repeats). It must be specified for repeat\nto be compilable. If <code>sum(repeats)</code> is larger than the specified\n<code>total_repeat_length</code> the remaining values will be discarded. In the case of\n<code>sum(repeats)</code> being smaller than the specified target length, the final value\nwill be repeated.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\nrepeats : int or array of ints\n    The number of repetitions for each element.  <code>repeats</code> is broadcasted\n    to fit the shape of the given axis.\naxis : int, optional\n    The axis along which to repeat values.  By default, use the\n    flattened input array, and return a flat output array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>repeated_array : ndarray\n    Output array which has the same shape as <code>a</code>, except along\n    the given axis.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">total_repeat_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.reshape": {"fullname": "b3d.pose.core.Array.reshape", "modulename": "b3d.pose.core", "qualname": "Array.reshape", "kind": "function", "doc": "<p>Returns an array containing the same data with a new shape.</p>\n\n<p>Refer to <code>jax.numpy.reshape()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.round": {"fullname": "b3d.pose.core.Array.round", "modulename": "b3d.pose.core", "qualname": "Array.round", "kind": "function", "doc": "<p>Round an array to the given number of decimals.</p>\n\n<p>LAX-backend implementation of <code>numpy.around()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p><code>around</code> is an alias of <code>~numpy.round</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">decimals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.searchsorted": {"fullname": "b3d.pose.core.Array.searchsorted", "modulename": "b3d.pose.core", "qualname": "Array.searchsorted", "kind": "function", "doc": "<p>Find indices where elements should be inserted to maintain order.</p>\n\n<p>LAX-backend implementation of <code>numpy.searchsorted()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Find the indices into a sorted array <code>a</code> such that, if the\ncorresponding elements in <code>v</code> were inserted before the indices, the\norder of <code>a</code> would be preserved.</p>\n\n<p>Assuming that <code>a</code> is sorted:</p>\n\n<p>======  ============================\n<code>side</code>  returned index <code>i</code> satisfies\n======  ============================\nleft    <code>a[i-1] &lt; v &lt;= a[i]</code>\nright   <code>a[i-1] &lt;= v &lt; a[i]</code>\n======  ============================</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : 1-D array_like\n    Input array. If <code>sorter</code> is None, then it must be sorted in\n    ascending order, otherwise <code>sorter</code> must be an array of indices\n    that sort it.\nv : array_like\n    Values to insert into <code>a</code>.\nside : {'left', 'right'}, optional\n    If 'left', the index of the first suitable location found is given.\n    If 'right', return the last such index.  If there is no suitable\n    index, return either 0 or N (where N is the length of <code>a</code>).\nmethod : str\n    One of 'scan' (default), 'scan_unrolled', 'sort' or 'compare_all'. Controls the method used by the\n    implementation: 'scan' tends to be more performant on CPU (particularly when <code>a</code> is\n    very large), 'scan_unrolled' is more performant on GPU at the expense of additional compile time,\n    'sort' is often more performant on accelerator backends like GPU and TPU\n    (particularly when <code>v</code> is very large), and 'compare_all' can be most performant\n    when <code>a</code> is very small.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : int or array of ints\n    Array of insertion points with the same shape as <code>v</code>,\n    or an integer if <code>v</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sorter</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;scan&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.sort": {"fullname": "b3d.pose.core.Array.sort", "modulename": "b3d.pose.core", "qualname": "Array.sort", "kind": "function", "doc": "<p>Return a sorted copy of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.sort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to be sorted.\naxis : int or None, optional\n    Axis along which to sort. If None, the array is flattened before\n    sorting. The default is -1, which sorts along the last axis.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sorted_array : ndarray\n    Array of the same type and shape as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.squeeze": {"fullname": "b3d.pose.core.Array.squeeze", "modulename": "b3d.pose.core", "qualname": "Array.squeeze", "kind": "function", "doc": "<p>Remove axes of length one from <code>a</code>.</p>\n\n<p>LAX-backend implementation of <code>numpy.squeeze()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>squeezed : ndarray\n    The input array, but with all or a subset of the\n    dimensions of length 1 removed. This is always <code>a</code> itself\n    or a view into <code>a</code>. Note that if all axes are squeezed,\n    the result is a 0d array and not a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.std": {"fullname": "b3d.pose.core.Array.std", "modulename": "b3d.pose.core", "qualname": "Array.std", "kind": "function", "doc": "<p>Compute the standard deviation along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.std()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the standard deviation, a measure of the spread of a distribution,\nof the array elements. The standard deviation is computed for the\nflattened array by default, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Calculate the standard deviation of these values.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the standard deviation is computed. The\n    default is to compute the standard deviation of the flattened array.\ndtype : dtype, optional\n    Type to use in computing the standard deviation. For arrays of\n    integer type the default is float64, for arrays of float types it is\n    the same as the array type.\nddof : int, optional\n    Means Delta Degrees of Freedom.  The divisor used in calculations\n    is <code>N - ddof</code>, where <code>N</code> represents the number of elements.\n    By default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `std` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the standard deviation.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>standard_deviation : ndarray, see dtype parameter above.\n    If <code>out</code> is None, return a new array containing the standard deviation,\n    otherwise return a reference to the output array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.sum": {"fullname": "b3d.pose.core.Array.sum", "modulename": "b3d.pose.core", "qualname": "Array.sum", "kind": "function", "doc": "<p>Sum of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.sum()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Elements to sum.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a sum is performed.  The default,\n    axis=None, will sum all of the elements of the input array.  If\n    axis is negative it counts from the last to the first axis.\ndtype : dtype, optional\n    The type of the returned array and of the accumulator in which the\n    elements are summed.  The dtype of <code>a</code> is used by default unless <code>a</code>\n    has an integer dtype of less precision than the default platform\n    integer.  In that case, if <code>a</code> is signed then the platform integer\n    is used while if <code>a</code> is unsigned then an unsigned integer of the\n    same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `sum` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    Starting value for the sum. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the sum. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_axis : ndarray\n    An array with the same shape as <code>a</code>, with the specified\n    axis removed.   If <code>a</code> is a 0-d array, or if <code>axis</code> is None, a scalar\n    is returned.  If an output array is specified, a reference to\n    <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.swapaxes": {"fullname": "b3d.pose.core.Array.swapaxes", "modulename": "b3d.pose.core", "qualname": "Array.swapaxes", "kind": "function", "doc": "<p>Interchange two axes of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.swapaxes()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis1 : int\n    First axis.\naxis2 : int\n    Second axis.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>a_swapped : ndarray\n    For NumPy &gt;= 1.10.0, if <code>a</code> is an ndarray, then a view of <code>a</code> is\n    returned; otherwise a new array is created. For earlier NumPy\n    versions a view of <code>a</code> is returned only if the order of the\n    axes is changed, otherwise the input array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.take": {"fullname": "b3d.pose.core.Array.take", "modulename": "b3d.pose.core", "qualname": "Array.take", "kind": "function", "doc": "<p>Take elements from an array along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.take()</code>.</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>When axis is not None, this function does the same thing as \"fancy\"\nindexing (indexing arrays using arrays); however, it can be easier to use\nif you need elements along a given axis. A call such as\n<code>np.take(arr, indices, axis=3)</code> is equivalent to\n<code>arr[:,:,:,indices,...]</code>.</p>\n\n<p>Explained without fancy indexing, this is equivalent to the following use\nof <code>ndindex</code>, which sets each of <code>ii</code>, <code>jj</code>, and <code>kk</code> to a tuple of\nindices::</p>\n\n<pre><code>Ni, Nk = a.shape[:axis], a.shape[axis+1:]\nNj = indices.shape\nfor ii in ndindex(Ni):\n    for jj in ndindex(Nj):\n        for kk in ndindex(Nk):\n            out[ii + jj + kk] = a[ii + (indices[jj],) + kk]\n</code></pre>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like (Ni..., M, Nk...)\n    The source array.\nindices : array_like (Nj...)\n    The indices of the values to extract.\naxis : int, optional\n    The axis over which to select values. By default, the flattened\n    input array is used.\nmode : string, default=\"fill\"\n    Out-of-bounds indexing mode. The default mode=\"fill\" returns invalid values\n    (e.g. NaN) for out-of bounds indices (see also <code>fill_value</code> below).\n    For more discussion of mode options, see <code>jax.numpy.ndarray.at</code>.\nfill_value : optional\n    The fill value to return for out-of-bounds slices when mode is 'fill'. Ignored\n    otherwise. Defaults to NaN for inexact types, the largest negative value for\n    signed types, the largest positive value for unsigned types, and True for booleans.\nunique_indices : bool, default=False\n    If True, the implementation will assume that the indices are unique,\n    which can result in more efficient execution on some backends.\nindices_are_sorted : bool, default=False\n    If True, the implementation will assume that the indices are sorted in\n    ascending order, which can lead to more efficient execution on some backends.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray (Ni..., Nj..., Nk...)\n    The returned array has the same type as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unique_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indices_are_sorted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.trace": {"fullname": "b3d.pose.core.Array.trace", "modulename": "b3d.pose.core", "qualname": "Array.trace", "kind": "function", "doc": "<p>Return the sum along diagonals of the array.</p>\n\n<p>LAX-backend implementation of <code>numpy.trace()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, the sum along its diagonal with the given offset\nis returned, i.e., the sum of elements <code>a[i,i+offset]</code> for all i.</p>\n\n<p>If <code>a</code> has more than two dimensions, then the axes specified by axis1 and\naxis2 are used to determine the 2-D sub-arrays whose traces are returned.\nThe shape of the resulting array is the same as that of <code>a</code> with <code>axis1</code>\nand <code>axis2</code> removed.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array, from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal. Can be both positive\n    and negative. Defaults to 0.\naxis1, axis2 : int, optional\n    Axes to be used as the first and second axis of the 2-D sub-arrays\n    from which the diagonals should be taken. Defaults are the first two\n    axes of <code>a</code>.\ndtype : dtype, optional\n    Determines the data-type of the returned array and of the accumulator\n    where the elements are summed. If dtype has the value None and <code>a</code> is\n    of integer type of precision less than the default integer\n    precision, then the default integer precision is used. Otherwise,\n    the precision is the same as that of <code>a</code>.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_diagonals : ndarray\n    If <code>a</code> is 2-D, the sum along the diagonal is returned.  If <code>a</code> has\n    larger dimensions, then an array of sums along diagonals is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.transpose": {"fullname": "b3d.pose.core.Array.transpose", "modulename": "b3d.pose.core", "qualname": "Array.transpose", "kind": "function", "doc": "<p>Returns a view of the array with axes transposed.</p>\n\n<p>Refer to <code>jax.numpy.transpose()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.var": {"fullname": "b3d.pose.core.Array.var", "modulename": "b3d.pose.core", "qualname": "Array.var", "kind": "function", "doc": "<p>Compute the variance along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.var()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the variance of the array elements, a measure of the spread of a\ndistribution.  The variance is computed for the flattened array by\ndefault, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose variance is desired.  If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the variance is computed.  The default is to\n    compute the variance of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the variance.  For arrays of integer type\n    the default is <code>float64</code>; for arrays of float types it is the same as\n    the array type.\nddof : int, optional\n    \"Delta Degrees of Freedom\": the divisor used in the calculation is\n    <code>N - ddof</code>, where <code>N</code> represents the number of elements. By\n    default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `var` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the variance. See <code>~numpy.ufunc.reduce</code> for\n    details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>variance : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the variance;\n    otherwise, a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.view": {"fullname": "b3d.pose.core.Array.view", "modulename": "b3d.pose.core", "qualname": "Array.view", "kind": "function", "doc": "<p>Return a bitwise copy of the array, viewed as a new dtype.</p>\n\n<p>This is fuller-featured wrapper around <code>jax.lax.bitcast_convert_type()</code>.</p>\n\n<p>If the source and target dtype have the same bitwidth, the result has the same\nshape as the input array. If the bitwidth of the target dtype is different\nfrom the source, the size of the last axis of the result is adjusted\naccordingly.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 6)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 2)</span>\n</code></pre>\n</div>\n\n<p>Conversions involving booleans are not well-defined in all situations. With\nregards to the shape of result as explained above, booleans are treated as\nhaving a bitwidth of 8. However, when converting to a boolean array, the input\nshould only contain 0 or 1 bytes. Otherwise, results may be unpredictable or\nmay change depending on how the result is used.</p>\n\n<p>This conversion is guaranteed and safe:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ True, False,  True], dtype=bool)</span>\n</code></pre>\n</div>\n\n<p>However, there are no guarantees about the results of any expression involving\na view such as this: <code>jnp.array([1, 2, 3], dtype=jnp.int8).view(jnp.bool_)</code>.\nIn particular, the results may change between JAX releases and depending on\nthe platform. To safely convert such an array to a boolean array, compare it\nwith <code>0</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span>\n<span class=\"go\">Array([ True,  True, False], dtype=bool)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Array.flat": {"fullname": "b3d.pose.core.Array.flat", "modulename": "b3d.pose.core", "qualname": "Array.flat", "kind": "variable", "doc": "<p>Not implemented: Use <code>~jax.Array.flatten()</code> instead.</p>\n"}, "b3d.pose.core.Array.T": {"fullname": "b3d.pose.core.Array.T", "modulename": "b3d.pose.core", "qualname": "Array.T", "kind": "variable", "doc": "<p>Return a transposed version of an N-dimensional array.</p>\n\n<p>JAX implementation of <code>jax.numpy.transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  a: input array\n  axes: optionally specify the permutation using a length-<code>a.ndim</code> sequence of integers\n    <code>i</code> satisfying <code>0 &lt;= i &lt; a.ndim</code>. Defaults to <code>range(a.ndim)[::-1]</code>, i.e\n    reverses the order of all axes.</p>\n\n<p>Returns:\n  transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.transpose()</code>: equivalent function via an <code>~jax.Array</code> method.</li>\n<li><code>jax.Array.T</code>: equivalent function via an <code>~jax.Array</code>  property.</li>\n<li><code>jax.numpy.matrix_transpose()</code>: transpose the last two axes of an array. This is\nsuitable for working with batched 2D matrices.</li>\n<li><code>jax.numpy.swapaxes()</code>: swap any two axes in an array.</li>\n<li><code>jax.numpy.moveaxis()</code>: move an axis to another postion in the array.</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.transpose()</code>, <code>jax.numpy.transpose()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  For a 1D array, the transpose is the identity:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For a 2D array, the transpose is a matrix transpose:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For an N-dimensional array, the transpose reverses the order of the axes:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(5, 4, 3)</span>\n</code></pre>\n</div>\n\n<p>The <code>axes</code> argument can be specified to change this default behavior:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>Since swapping the last two axes is a common operation, it can be done\n  via its own API, <code>jax.numpy.matrix_transpose()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>For convenience, transposes may also be performed using the <code>jax.Array.transpose()</code>\n  method or the <code>jax.Array.T</code> property:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.pose.core.Array.mT": {"fullname": "b3d.pose.core.Array.mT", "modulename": "b3d.pose.core", "qualname": "Array.mT", "kind": "variable", "doc": "<p>Transpose the last two dimensions of an array.</p>\n\n<p>JAX implementation of <code>jax.numpy.matrix_transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  x: input array, Must have <code>x.ndim &gt;= 2</code></p>\n\n<p>Returns:\n  matrix-transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.mT</code>: same operation accessed via an <code>~jax.Array()</code> property.</li>\n<li><code>jax.numpy.transpose()</code>: general multi-axis transpose</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.matrix_transpose()</code>, <code>jax.numpy.matrix_transpose()</code> will return a\n  copy rather than a view of the input array. However, under JIT, the compiler will\n  optimize-away such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  Here is a 2x2x2 matrix representing a batched 2x2 matrix:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, you can perform the same transpose via the <code>~jax.Array.mT</code>\n  property of <code>jax.Array</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mT</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.pose.core.Array.real": {"fullname": "b3d.pose.core.Array.real", "modulename": "b3d.pose.core", "qualname": "Array.real", "kind": "variable", "doc": "<p>Return the real part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.real()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The real component of the complex argument. If <code>val</code> is real, the type\n    of <code>val</code> is used for the output.  If <code>val</code> has complex elements, the\n    returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.pose.core.Array.imag": {"fullname": "b3d.pose.core.Array.imag", "modulename": "b3d.pose.core", "qualname": "Array.imag", "kind": "variable", "doc": "<p>Return the imaginary part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.imag()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The imaginary component of the complex argument. If <code>val</code> is real,\n    the type of <code>val</code> is used for the output.  If <code>val</code> has complex\n    elements, the returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.pose.core.Array.nbytes": {"fullname": "b3d.pose.core.Array.nbytes", "modulename": "b3d.pose.core", "qualname": "Array.nbytes", "kind": "variable", "doc": "<p>Total bytes consumed by the elements of the array.</p>\n", "annotation": ": int"}, "b3d.pose.core.Array.itemsize": {"fullname": "b3d.pose.core.Array.itemsize", "modulename": "b3d.pose.core", "qualname": "Array.itemsize", "kind": "variable", "doc": "<p>Length of one array element in bytes.</p>\n", "annotation": ": int"}, "b3d.pose.core.Array.at": {"fullname": "b3d.pose.core.Array.at", "modulename": "b3d.pose.core", "qualname": "Array.at", "kind": "variable", "doc": "<p>Helper property for index update functionality.</p>\n\n<p>The <code>at</code> property provides a functionally pure equivalent of in-place\narray modifications.</p>\n\n<p>In particular:</p>\n\n<p>==============================  ================================\nAlternate syntax                Equivalent In-place expression\n==============================  ================================\n<code>x = x.at[idx].set(y)</code>        <code>x[idx] = y</code>\n<code>x = x.at[idx].add(y)</code>        <code>x[idx] += y</code>\n<code>x = x.at[idx].multiply(y)</code>   <code>x[idx] *= y</code>\n<code>x = x.at[idx].divide(y)</code>     <code>x[idx] /= y</code>\n<code>x = x.at[idx].power(y)</code>      <code>x[idx] **= y</code>\n<code>x = x.at[idx].min(y)</code>        <code>x[idx] = minimum(x[idx], y)</code>\n<code>x = x.at[idx].max(y)</code>        <code>x[idx] = maximum(x[idx], y)</code>\n<code>x = x.at[idx].apply(ufunc)</code>  <code>ufunc.at(x, idx)</code>\n<code>x = x.at[idx].get()</code>         <code>x = x[idx]</code>\n==============================  ================================</p>\n\n<p>None of the <code>x.at</code> expressions modify the original <code>x</code>; instead they return\na modified copy of <code>x</code>. However, inside a <code>~jax.jit()</code> compiled function,\nexpressions like :code:<code>x = x.at[idx].set(y)</code> are guaranteed to be applied in-place.</p>\n\n<p>Unlike NumPy in-place operations such as :code:<code>x[idx] += y</code>, if multiple\nindices refer to the same location, all updates will be applied (NumPy would\nonly apply the last update, rather than applying all updates.) The order\nin which conflicting updates are applied is implementation-defined and may be\nnondeterministic (e.g., due to concurrency on some hardware platforms).</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<h2 id=\"arguments\">Arguments</h2>\n\n<p>mode : str\n    Specify out-of-bound indexing mode. Options are:</p>\n\n<pre><code>- ``\"promise_in_bounds\"``: (default) The user promises that indices are in bounds.\n  No additional checking will be performed. In practice, this means that\n  out-of-bounds indices in ``get()`` will be clipped, and out-of-bounds indices\n  in ``set()``, ``add()``, etc. will be dropped.\n- ``\"clip\"``: clamp out of bounds indices into valid range.\n- ``\"drop\"``: ignore out-of-bound indices.\n- ``\"fill\"``: alias for ``\"drop\"``.  For `get()`, the optional ``fill_value``\n  argument specifies the value that will be returned.\n\n  See `jax.lax.GatherScatterMode` for more details.\n</code></pre>\n\n<p>indices_are_sorted : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are sorted in ascending order, which can lead to more efficient execution\n    on some backends.\nunique_indices : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are unique, which can result in more efficient execution on some backends.\nfill_value : Any\n    Only applies to the <code>get()</code> method: the fill value to return for out-of-bounds\n    slices when <code>mode</code> is <code>'fill'</code>. Ignored otherwise. Defaults to <code>NaN</code> for\n    inexact types, the largest negative value for signed types, the largest positive\n    value for unsigned types, and <code>True</code> for booleans.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1., 12.,  3.,  4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices are ignored</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;clip&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1.,  2.,  3., 14.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"go\">Array(2., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># out-of-bounds indices clipped</span>\n<span class=\"go\">Array(4., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices filled with NaN</span>\n<span class=\"go\">Array(nan, dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># custom fill value</span>\n<span class=\"go\">Array(-1., dtype=float32)</span>\n</code></pre>\n</div>\n"}, "b3d.pose.core.Float": {"fullname": "b3d.pose.core.Float", "modulename": "b3d.pose.core", "qualname": "Float", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.pose.core.Int": {"fullname": "b3d.pose.core.Int", "modulename": "b3d.pose.core", "qualname": "Int", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.pose.core.Quaternion": {"fullname": "b3d.pose.core.Quaternion", "modulename": "b3d.pose.core", "qualname": "Quaternion", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.pose.core.multiply_quats": {"fullname": "b3d.pose.core.multiply_quats", "modulename": "b3d.pose.core", "qualname": "multiply_quats", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">q1</span>, </span><span class=\"param\"><span class=\"n\">q2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.multiply_quat_and_vec": {"fullname": "b3d.pose.core.multiply_quat_and_vec", "modulename": "b3d.pose.core", "qualname": "multiply_quat_and_vec", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">q</span>, </span><span class=\"param\"><span class=\"n\">vs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.choose_good_quat": {"fullname": "b3d.pose.core.choose_good_quat", "modulename": "b3d.pose.core", "qualname": "choose_good_quat", "kind": "function", "doc": "<p>If the real part of the quaternion is negative, return the antipodal quaternion,\nwhich represents the same rotation. If the real part is zero, there is still ambiguity,\nso we'll iteratively resolve that as well.</p>\n\n<p>Recall that SO(3) is isomorphic to  S^3/x~-x and\nalso to D^3/~ where x~-x for x in S^2 = \\partial D^3.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">q</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.sample_uniform_pose": {"fullname": "b3d.pose.core.sample_uniform_pose", "modulename": "b3d.pose.core", "qualname": "sample_uniform_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.logpdf_uniform_pose": {"fullname": "b3d.pose.core.logpdf_uniform_pose", "modulename": "b3d.pose.core", "qualname": "logpdf_uniform_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.sample_gaussian_vmf_pose": {"fullname": "b3d.pose.core.sample_gaussian_vmf_pose", "modulename": "b3d.pose.core", "qualname": "sample_gaussian_vmf_pose", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"fullname": "b3d.pose.core.logpdf_gaussian_vmf_pose", "modulename": "b3d.pose.core", "qualname": "logpdf_gaussian_vmf_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.camera_from_position_and_target": {"fullname": "b3d.pose.core.camera_from_position_and_target", "modulename": "b3d.pose.core", "qualname": "camera_from_position_and_target", "kind": "function", "doc": "<p>Create a camera pose at <code>position</code> with the camera-z-axis pointint at <code>target</code>.\nRecall that in world coordinates we assume z-axis is up.</p>\n\n<p>Args:\n    <code>position</code>: 3D position vector of the camera\n    <code>target</code>: 3D position vector of the point to look at\n    <code>up</code>: 3D vector pointing up.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">position</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">up</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose": {"fullname": "b3d.pose.core.Pose", "modulename": "b3d.pose.core", "qualname": "Pose", "kind": "class", "doc": "<p>Pose class with positions and quaternions representing rotation.</p>\n"}, "b3d.pose.core.Pose.__init__": {"fullname": "b3d.pose.core.Pose.__init__", "modulename": "b3d.pose.core", "qualname": "Pose.__init__", "kind": "function", "doc": "<p>3D rigid transformation</p>\n\n<p>position: 3D translation vector\nquaternion: 4D quaternion in xyzw</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">quaternion</span></span>)</span>"}, "b3d.pose.core.Pose.identity_quaternion": {"fullname": "b3d.pose.core.Pose.identity_quaternion", "modulename": "b3d.pose.core", "qualname": "Pose.identity_quaternion", "kind": "variable", "doc": "<p></p>\n", "default_value": "Array([0., 0., 0., 1.], dtype=float32)"}, "b3d.pose.core.Pose.unit_quaternion": {"fullname": "b3d.pose.core.Pose.unit_quaternion", "modulename": "b3d.pose.core", "qualname": "Pose.unit_quaternion", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.pos": {"fullname": "b3d.pose.core.Pose.pos", "modulename": "b3d.pose.core", "qualname": "Pose.pos", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.position": {"fullname": "b3d.pose.core.Pose.position", "modulename": "b3d.pose.core", "qualname": "Pose.position", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.xyzw": {"fullname": "b3d.pose.core.Pose.xyzw", "modulename": "b3d.pose.core", "qualname": "Pose.xyzw", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.quat": {"fullname": "b3d.pose.core.Pose.quat", "modulename": "b3d.pose.core", "qualname": "Pose.quat", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.quaternion": {"fullname": "b3d.pose.core.Pose.quaternion", "modulename": "b3d.pose.core", "qualname": "Pose.quaternion", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.wxyz": {"fullname": "b3d.pose.core.Pose.wxyz", "modulename": "b3d.pose.core", "qualname": "Pose.wxyz", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.rot": {"fullname": "b3d.pose.core.Pose.rot", "modulename": "b3d.pose.core", "qualname": "Pose.rot", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.normalize": {"fullname": "b3d.pose.core.Pose.normalize", "modulename": "b3d.pose.core", "qualname": "Pose.normalize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"fullname": "b3d.pose.core.Pose.quat_in_upper_hemisphere", "modulename": "b3d.pose.core", "qualname": "Pose.quat_in_upper_hemisphere", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.canonical": {"fullname": "b3d.pose.core.Pose.canonical", "modulename": "b3d.pose.core", "qualname": "Pose.canonical", "kind": "function", "doc": "<p>Chooses a canonical representative for the quaternion of the pose, i.e.\nchooses from {q, -q} s.t. q[3] &gt;= 0. Note that if q[3]==0 there is still ambiguity.</p>\n\n<p>Recall that SO(3) is isomorphic to  S^3/x~-x and\nalso to D^3/~ where x~-x for x in S^2 = \\partial D^3.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.flatten": {"fullname": "b3d.pose.core.Pose.flatten", "modulename": "b3d.pose.core", "qualname": "Pose.flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.tree_flatten": {"fullname": "b3d.pose.core.Pose.tree_flatten", "modulename": "b3d.pose.core", "qualname": "Pose.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.tree_unflatten": {"fullname": "b3d.pose.core.Pose.tree_unflatten", "modulename": "b3d.pose.core", "qualname": "Pose.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.copy": {"fullname": "b3d.pose.core.Pose.copy", "modulename": "b3d.pose.core", "qualname": "Pose.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.flat": {"fullname": "b3d.pose.core.Pose.flat", "modulename": "b3d.pose.core", "qualname": "Pose.flat", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.shape": {"fullname": "b3d.pose.core.Pose.shape", "modulename": "b3d.pose.core", "qualname": "Pose.shape", "kind": "variable", "doc": "<p></p>\n"}, "b3d.pose.core.Pose.reshape": {"fullname": "b3d.pose.core.Pose.reshape", "modulename": "b3d.pose.core", "qualname": "Pose.reshape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.slice": {"fullname": "b3d.pose.core.Pose.slice", "modulename": "b3d.pose.core", "qualname": "Pose.slice", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">i</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.as_matrix": {"fullname": "b3d.pose.core.Pose.as_matrix", "modulename": "b3d.pose.core", "qualname": "Pose.as_matrix", "kind": "function", "doc": "<p>Return a 4x4 pose matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.identity": {"fullname": "b3d.pose.core.Pose.identity", "modulename": "b3d.pose.core", "qualname": "Pose.identity", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.eye": {"fullname": "b3d.pose.core.Pose.eye", "modulename": "b3d.pose.core", "qualname": "Pose.eye", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.id": {"fullname": "b3d.pose.core.Pose.id", "modulename": "b3d.pose.core", "qualname": "Pose.id", "kind": "function", "doc": "<p>Return the identity transformation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.apply": {"fullname": "b3d.pose.core.Pose.apply", "modulename": "b3d.pose.core", "qualname": "Pose.apply", "kind": "function", "doc": "<p>Apply pose to vectors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vec</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.compose": {"fullname": "b3d.pose.core.Pose.compose", "modulename": "b3d.pose.core", "qualname": "Pose.compose", "kind": "function", "doc": "<p>Compose with other pose.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span></span><span class=\"return-annotation\">) -> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.scale": {"fullname": "b3d.pose.core.Pose.scale", "modulename": "b3d.pose.core", "qualname": "Pose.scale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">) -> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>:</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.concatenate_poses": {"fullname": "b3d.pose.core.Pose.concatenate_poses", "modulename": "b3d.pose.core", "qualname": "Pose.concatenate_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.concat": {"fullname": "b3d.pose.core.Pose.concat", "modulename": "b3d.pose.core", "qualname": "Pose.concat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.stack_poses": {"fullname": "b3d.pose.core.Pose.stack_poses", "modulename": "b3d.pose.core", "qualname": "Pose.stack_poses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pose_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.split": {"fullname": "b3d.pose.core.Pose.split", "modulename": "b3d.pose.core", "qualname": "Pose.split", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">n</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.inv": {"fullname": "b3d.pose.core.Pose.inv", "modulename": "b3d.pose.core", "qualname": "Pose.inv", "kind": "function", "doc": "<p>Inverse of pose.</p>\n\n<p>Note that for rotation matrix R and\ntranslation vector x we have</p>\n\n<pre><code>    [[ R x ]  [[ R' -R'x ]  = [[ I  0 ]\n     [ 0 1 ]]  [ 0    1  ]]      0  1 ]]\n</code></pre>\n\n<p>where R' is the transpose of R.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.inverse": {"fullname": "b3d.pose.core.Pose.inverse", "modulename": "b3d.pose.core", "qualname": "Pose.inverse", "kind": "function", "doc": "<p>Inverse of pose.</p>\n\n<p>Note that for rotation matrix R and\ntranslation vector x we have</p>\n\n<pre><code>    [[ R x ]  [[ R' -R'x ]  = [[ I  0 ]\n     [ 0 1 ]]  [ 0    1  ]]      0  1 ]]\n</code></pre>\n\n<p>where R' is the transpose of R.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_matrix": {"fullname": "b3d.pose.core.Pose.from_matrix", "modulename": "b3d.pose.core", "qualname": "Pose.from_matrix", "kind": "function", "doc": "<p>Create an Pose from a 4x4 matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">matrix</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_xyzw": {"fullname": "b3d.pose.core.Pose.from_xyzw", "modulename": "b3d.pose.core", "qualname": "Pose.from_xyzw", "kind": "function", "doc": "<p>Create a pose from a quaternion. With zero translation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_quat": {"fullname": "b3d.pose.core.Pose.from_quat", "modulename": "b3d.pose.core", "qualname": "Pose.from_quat", "kind": "function", "doc": "<p>Create a pose from a quaternion. With zero translation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_pos": {"fullname": "b3d.pose.core.Pose.from_pos", "modulename": "b3d.pose.core", "qualname": "Pose.from_pos", "kind": "function", "doc": "<p>Create a pose from a vector. With the identity rotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position_vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_translation": {"fullname": "b3d.pose.core.Pose.from_translation", "modulename": "b3d.pose.core", "qualname": "Pose.from_translation", "kind": "function", "doc": "<p>Create a pose from a vector. With the identity rotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">position_vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_vec": {"fullname": "b3d.pose.core.Pose.from_vec", "modulename": "b3d.pose.core", "qualname": "Pose.from_vec", "kind": "function", "doc": "<p>Creates a Pose from a 7-vector [p_x, p_y, p_z, q_x, q_y, q_z, q_w]\nwhere p is the position and q is the quaternion for the rotation.</p>\n\n<p>Args:\n    posxyzw: Jax array with shape (7,)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">posxyzw</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_pos_matrix": {"fullname": "b3d.pose.core.Pose.from_pos_matrix", "modulename": "b3d.pose.core", "qualname": "Pose.from_pos_matrix", "kind": "function", "doc": "<p>Create an Pose from a position and a 3x3 matrix.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">matrix</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.from_position_and_target": {"fullname": "b3d.pose.core.Pose.from_position_and_target", "modulename": "b3d.pose.core", "qualname": "Pose.from_position_and_target", "kind": "function", "doc": "<p>Create a camera pose at <code>position</code> with the camera-z-axis pointint at <code>target</code>.\nRecall that in world coordinates we assume z-axis is up.</p>\n\n<p>Args:\n    <code>position</code>: 3D position vector of the camera\n    <code>target</code>: 3D position vector of the point to look at\n    <code>up</code>: 3D vector pointing up.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">position</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">up</span><span class=\"o\">=</span><span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float32</span><span class=\"p\">)</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.sample_uniform_pose": {"fullname": "b3d.pose.core.Pose.sample_uniform_pose", "modulename": "b3d.pose.core", "qualname": "Pose.sample_uniform_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"fullname": "b3d.pose.core.Pose.sample_uniform_pose_vmap", "modulename": "b3d.pose.core", "qualname": "Pose.sample_uniform_pose_vmap", "kind": "function", "doc": "<p>Vectorized version of sample_uniform_pose. Takes similar arguments as sample_uniform_pose but with additional array axes over which sample_uniform_pose is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">low</span>, </span><span class=\"param\"><span class=\"n\">high</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"fullname": "b3d.pose.core.Pose.sample_gaussian_vmf_pose", "modulename": "b3d.pose.core", "qualname": "Pose.sample_gaussian_vmf_pose", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"fullname": "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit", "modulename": "b3d.pose.core", "qualname": "Pose.sample_gaussian_vmf_pose_jit", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"fullname": "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap", "modulename": "b3d.pose.core", "qualname": "Pose.sample_gaussian_vmf_pose_vmap", "kind": "function", "doc": "<p>Samples poses from the product of a diagonal normal distribution (for position) and\na generalized von Mises-Fisher distribution (for quaternion).</p>\n\n<p>Note:\nOne can view the von Mises\u2013Fisher distribution over the n-sphere\nas the restriction of the normal distribution on R^{n+1}\nto the n-sphere. From this viewpoint the concentration is\napproximateley the inverse of the variance.</p>\n\n<p>See:</p>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution\">https://en.wikipedia.org/wiki/Von_Mises%E2%80%93Fisher_distribution#Relation_to_normal_distribution</a></p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">mean_pose</span>, </span><span class=\"param\"><span class=\"n\">std</span>, </span><span class=\"param\"><span class=\"n\">concentration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils": {"fullname": "b3d.pose.pose_utils", "modulename": "b3d.pose.pose_utils", "kind": "module", "doc": "<p></p>\n"}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"fullname": "b3d.pose.pose_utils.uniform_samples_from_disc", "modulename": "b3d.pose.pose_utils", "qualname": "uniform_samples_from_disc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">N</span>, </span><span class=\"param\"><span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"fullname": "b3d.pose.pose_utils.unit_disc_to_sphere", "modulename": "b3d.pose.pose_utils", "qualname": "unit_disc_to_sphere", "kind": "function", "doc": "<p>Maps uniform samples <code>x</code> from the unit n-disc to the n-sphere to\nuniform samples in the 3-sphere centered around <code>(0,...,0,1)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.volume_of_3_ball": {"fullname": "b3d.pose.pose_utils.volume_of_3_ball", "modulename": "b3d.pose.pose_utils", "qualname": "volume_of_3_ball", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"fullname": "b3d.pose.pose_utils.volume_of_cap_around_north_pole", "modulename": "b3d.pose.pose_utils", "qualname": "volume_of_cap_around_north_pole", "kind": "function", "doc": "<p>Returns the volume of $S^3 \\cap ({ \\sqrt{x^2 + y^2 + z^2}=1 }     imes \\R )$</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"fullname": "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity", "modulename": "b3d.pose.pose_utils", "qualname": "uniform_samples_from_SE3_around_identity", "kind": "function", "doc": "<p>Returns N samples from SE(3) around the identity, where positions\nare uniformly sampled from a unit-disc of radius rx, and quaternions are uniformly\nsampled from an embedded disc or radius rq in the 3-sphere centered around (0,0,0,1).</p>\n\n<p>Example:</p>\n\n<pre><code>from b3d.pose_utils import uniform_samples_from_SE3_around_identity\nimport numpy as np\nimport jax\nimport viser\n\n\nserver = viser.ViserServer()\nkey = jax.random.PRNGKey(0)\n\nps  = uniform_samples_from_SE3_around_identity(\n            key, N=20, rx=0.2, rq=0.1)\n\nfor i in range(ps.pos.shape[0]):\n    p = ps[i]\n    server.add_frame(\n        f\"p[{i}]\",\n        position=np.array(p.pos),\n        wxyz=np.array(p.wxyz),\n        axes_length=0.2,\n        axes_radius=0.01)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">N</span>, </span><span class=\"param\"><span class=\"n\">rx</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">rq</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.UniformPoseInBall": {"fullname": "b3d.pose.pose_utils.UniformPoseInBall", "modulename": "b3d.pose.pose_utils", "qualname": "UniformPoseInBall", "kind": "class", "doc": "<p></p>\n", "bases": "genjax._src.generative_functions.distributions.distribution.ExactDensity"}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"fullname": "b3d.pose.pose_utils.UniformPoseInBall.__init__", "modulename": "b3d.pose.pose_utils", "qualname": "UniformPoseInBall.__init__", "kind": "function", "doc": "<p>Creates a new instance of the class.</p>\n\n<p>Args:\n  <em>args: Arguments to __init__.\n  *</em>kwargs: Keyword arguments to __init__.</p>\n\n<p>Returns:\n  A new instance of the class.</p>\n\n<p>Raises:\n  TypeError: If <code>pytree_dataclass</code> wasn't called on this class, indicating\n    that it's abstract (or that the user forgot @pytree_dataclass).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"fullname": "b3d.pose.pose_utils.UniformPoseInBall.sample", "modulename": "b3d.pose.pose_utils", "qualname": "UniformPoseInBall.sample", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">p0</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>, </span><span class=\"param\"><span class=\"n\">rx</span>, </span><span class=\"param\"><span class=\"n\">rq</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"fullname": "b3d.pose.pose_utils.UniformPoseInBall.logpdf", "modulename": "b3d.pose.pose_utils", "qualname": "UniformPoseInBall.logpdf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">p</span>, </span><span class=\"param\"><span class=\"n\">p0</span><span class=\"p\">:</span> <span class=\"n\">b3d</span><span class=\"o\">.</span><span class=\"n\">pose</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Pose</span>, </span><span class=\"param\"><span class=\"n\">rx</span>, </span><span class=\"param\"><span class=\"n\">rq</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"fullname": "b3d.pose.pose_utils.uniform_pose_in_ball", "modulename": "b3d.pose.pose_utils", "qualname": "uniform_pose_in_ball", "kind": "variable", "doc": "<p></p>\n", "default_value": "UniformPoseInBall()"}, "b3d.renderer": {"fullname": "b3d.renderer", "modulename": "b3d.renderer", "kind": "module", "doc": "<p></p>\n"}, "b3d.renderer.Renderer": {"fullname": "b3d.renderer.Renderer", "modulename": "b3d.renderer", "qualname": "Renderer", "kind": "class", "doc": "<p></p>\n"}, "b3d.renderer.Renderer.__init__": {"fullname": "b3d.renderer.Renderer.__init__", "modulename": "b3d.renderer", "qualname": "Renderer.__init__", "kind": "function", "doc": "<p>Triangle mesh renderer.</p>\n\n<p>Parameters:\n    width: int\n        Image width.\n    height: int\n        Image height.\n    fx: float\n        Focal length x.\n    fy: float\n        Focal length y.\n    cx: float\n        Principal point x.\n    cy: float\n        Principal point y.\n    near: float\n        Near plane.\n    far: float\n        Far plane.\n    num_layers: int\n        Number of layers in the depth buffer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span>, </span><span class=\"param\"><span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">2048</span></span>)</span>"}, "b3d.renderer.Renderer.renderer_env": {"fullname": "b3d.renderer.Renderer.renderer_env", "modulename": "b3d.renderer", "qualname": "Renderer.renderer_env", "kind": "variable", "doc": "<p></p>\n"}, "b3d.renderer.Renderer.num_layers": {"fullname": "b3d.renderer.Renderer.num_layers", "modulename": "b3d.renderer", "qualname": "Renderer.num_layers", "kind": "variable", "doc": "<p></p>\n"}, "b3d.renderer.Renderer.from_intrinsics_object": {"fullname": "b3d.renderer.Renderer.from_intrinsics_object", "modulename": "b3d.renderer", "qualname": "Renderer.from_intrinsics_object", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">intrinsics</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.get_intrinsics_object": {"fullname": "b3d.renderer.Renderer.get_intrinsics_object", "modulename": "b3d.renderer", "qualname": "Renderer.get_intrinsics_object", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.set_intrinsics": {"fullname": "b3d.renderer.Renderer.set_intrinsics", "modulename": "b3d.renderer", "qualname": "Renderer.set_intrinsics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.interpolate_many": {"fullname": "b3d.renderer.Renderer.interpolate_many", "modulename": "b3d.renderer", "qualname": "Renderer.interpolate_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">uvs</span>, </span><span class=\"param\"><span class=\"n\">triangle_ids</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.interpolate": {"fullname": "b3d.renderer.Renderer.interpolate", "modulename": "b3d.renderer", "qualname": "Renderer.interpolate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attributes</span>, </span><span class=\"param\"><span class=\"n\">uvs</span>, </span><span class=\"param\"><span class=\"n\">triangle_ids</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.rasterize_many": {"fullname": "b3d.renderer.Renderer.rasterize_many", "modulename": "b3d.renderer", "qualname": "Renderer.rasterize_many", "kind": "function", "doc": "<p>Rasterize many scenes in parallel. For scene number S and pixel at row i and column j,\nuvs[S, i, j] contains the u and v barycentric coordinates of the intersection point with\ntriangle index at triangle_ids[S, i, j] - 1 which is on object index object_ids[S, i, j] - 1.\nAnd the z coordinate of the intersection point is z[S, i, j].\nIf the pixel's ray did not intersect any triangle, the values in corresponding pixel is 0.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_scenes, num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\nOutputs:\n    uvs: float array, shape (num_scenes, height, width, 2)\n        UV coordinates of the intersection point on the triangle. Zeros if the pixel ray doesn't collide a triangle.\n    object_ids: int array, shape (num_scenes, height, width)\n        Index + 1 of the object that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    triangle_ids: int array, shape (num_scenes, height, width)\n        Index + 1 of the triangle face that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    zs: float array, shape (num_scenes, height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.rasterize": {"fullname": "b3d.renderer.Renderer.rasterize", "modulename": "b3d.renderer", "qualname": "Renderer.rasterize", "kind": "function", "doc": "<p>Rasterize a singe scene.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\nOutputs:\n    uvs: float array, shape (height, width, 2)\n        UV coordinates of the intersection point on the triangle. Zeros if the pixel ray doesn't collide a triangle.\n    object_ids: int array, shape (height, width)\n        Index + 1 of the object that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    triangle_ids: int array, shape (height, width)\n        Index + 1 of the triangle face that this pixel ray intersections. Zero if the pixel ray doesn't collide a triangle.\n    zs: float array, shape (height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.render_attribute_many": {"fullname": "b3d.renderer.Renderer.render_attribute_many", "modulename": "b3d.renderer", "qualname": "Renderer.render_attribute_many", "kind": "function", "doc": "<p>Render many scenes to an image by rasterizing and then interpolating attributes.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_scenes, num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\n    attributes: float array, shape (num_vertices, num_attributes)\n        Attributes corresponding to the vertices</p>\n\n<p>Outputs:\n    image: float array, shape (num_scenes, height, width, num_attributes)\n        At each pixel the value is the barycentric interpolation of the attributes corresponding to the\n        3 vertices of the triangle with which the pixel's ray intersected. If the pixel's ray does not intersect\n        any triangle the value at that pixel will be 0s.\n    zs: float array, shape (num_scenes, height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">poses</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.Renderer.render_attribute": {"fullname": "b3d.renderer.Renderer.render_attribute", "modulename": "b3d.renderer", "qualname": "Renderer.render_attribute", "kind": "function", "doc": "<p>Render a single scenes to an image by rasterizing and then interpolating attributes.</p>\n\n<p>Parameters:\n    poses: float array, shape (num_objects, 4, 4)\n        Object pose matrix.\n    vertices: float array, shape (num_vertices, 3)\n        Vertex position matrix.\n    faces: int array, shape (num_triangles, 3)\n        Faces Triangle matrix. The integers correspond to rows in the vertices matrix.\n    ranges: int array, shape (num_objects, 2)\n        Ranges matrix with the 2 elements specify start indices and counts into faces.\n    attributes: float array, shape (num_vertices, num_attributes)\n        Attributes corresponding to the vertices</p>\n\n<p>Outputs:\n    image: float array, shape (height, width, num_attributes)\n        At each pixel the value is the barycentric interpolation of the attributes corresponding to the\n        3 vertices of the triangle with which the pixel's ray intersected. If the pixel's ray does not intersect\n        any triangle the value at that pixel will be 0s.\n    zs: float array, shape (height, width)\n        Depth of the intersection point. Zero if the pixel ray doesn't collide a triangle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">ranges</span>, </span><span class=\"param\"><span class=\"n\">attributes</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal": {"fullname": "b3d.renderer.RendererOriginal", "modulename": "b3d.renderer", "qualname": "RendererOriginal", "kind": "class", "doc": "<p></p>\n"}, "b3d.renderer.RendererOriginal.__init__": {"fullname": "b3d.renderer.RendererOriginal.__init__", "modulename": "b3d.renderer", "qualname": "RendererOriginal.__init__", "kind": "function", "doc": "<p>Triangle mesh renderer.</p>\n\n<p>Parameters:\n    width: int\n        Image width.\n    height: int\n        Image height.\n    fx: float\n        Focal length x.\n    fy: float\n        Focal length y.\n    cx: float\n        Principal point x.\n    cy: float\n        Principal point y.\n    near: float\n        Near plane.\n    far: float\n        Far plane.\n    num_layers: int\n        Number of layers in the depth buffer.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span><span class=\"o\">=</span><span class=\"mf\">75.0</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span><span class=\"o\">=</span><span class=\"mf\">75.0</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"mf\">50.0</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"mf\">50.0</span>,</span><span class=\"param\">\t<span class=\"n\">near</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">far</span><span class=\"o\">=</span><span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">scaling</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span>)</span>"}, "b3d.renderer.RendererOriginal.renderer_env": {"fullname": "b3d.renderer.RendererOriginal.renderer_env", "modulename": "b3d.renderer", "qualname": "RendererOriginal.renderer_env", "kind": "variable", "doc": "<p></p>\n"}, "b3d.renderer.RendererOriginal.set_intrinsics": {"fullname": "b3d.renderer.RendererOriginal.set_intrinsics", "modulename": "b3d.renderer", "qualname": "RendererOriginal.set_intrinsics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span>, </span><span class=\"param\"><span class=\"n\">near</span>, </span><span class=\"param\"><span class=\"n\">far</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.rasterize_many": {"fullname": "b3d.renderer.RendererOriginal.rasterize_many", "modulename": "b3d.renderer", "qualname": "RendererOriginal.rasterize_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.rasterize": {"fullname": "b3d.renderer.RendererOriginal.rasterize", "modulename": "b3d.renderer", "qualname": "RendererOriginal.rasterize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"fullname": "b3d.renderer.RendererOriginal.rasterize_mesh", "modulename": "b3d.renderer", "qualname": "RendererOriginal.rasterize_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.rasterize_original": {"fullname": "b3d.renderer.RendererOriginal.rasterize_original", "modulename": "b3d.renderer", "qualname": "RendererOriginal.rasterize_original", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.interpolate_many": {"fullname": "b3d.renderer.RendererOriginal.interpolate_many", "modulename": "b3d.renderer", "qualname": "RendererOriginal.interpolate_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attr</span>, </span><span class=\"param\"><span class=\"n\">rast</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.interpolate": {"fullname": "b3d.renderer.RendererOriginal.interpolate", "modulename": "b3d.renderer", "qualname": "RendererOriginal.interpolate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">attr</span>, </span><span class=\"param\"><span class=\"n\">rast</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.render_many": {"fullname": "b3d.renderer.RendererOriginal.render_many", "modulename": "b3d.renderer", "qualname": "RendererOriginal.render_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.render": {"fullname": "b3d.renderer.RendererOriginal.render", "modulename": "b3d.renderer", "qualname": "RendererOriginal.render", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"fullname": "b3d.renderer.RendererOriginal.render_rgbd_many", "modulename": "b3d.renderer", "qualname": "RendererOriginal.render_rgbd_many", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.render_rgbd": {"fullname": "b3d.renderer.RendererOriginal.render_rgbd", "modulename": "b3d.renderer", "qualname": "RendererOriginal.render_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pos</span>, </span><span class=\"param\"><span class=\"n\">tri</span>, </span><span class=\"param\"><span class=\"n\">attr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"fullname": "b3d.renderer.RendererOriginal.render_rgbd_from_mesh", "modulename": "b3d.renderer", "qualname": "RendererOriginal.render_rgbd_from_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"fullname": "b3d.renderer.RendererOriginal.rr_log_rgbd", "modulename": "b3d.renderer", "qualname": "RendererOriginal.rr_log_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span>, </span><span class=\"param\"><span class=\"n\">rgbd</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.types": {"fullname": "b3d.types", "modulename": "b3d.types", "kind": "module", "doc": "<p></p>\n"}, "b3d.types.Shape": {"fullname": "b3d.types.Shape", "modulename": "b3d.types", "qualname": "Shape", "kind": "variable", "doc": "<p></p>\n", "default_value": "int | tuple[int, ...]"}, "b3d.types.Array": {"fullname": "b3d.types.Array", "modulename": "b3d.types", "qualname": "Array", "kind": "class", "doc": "<p>Array base class for JAX</p>\n\n<p><code>jax.Array</code> is the public interface for instance checks and type annotation\nof JAX arrays and tracers. Its main applications are in instance checks and\ntype annotations; for example::</p>\n\n<p>x = jnp.arange(5)\n  isinstance(x, jax.Array)  # returns True both inside and outside traced functions.</p>\n\n<p>def f(x: Array) -> Array:  # type annotations are valid for traced and non-traced types.\n    return x</p>\n\n<p><code>jax.Array</code> should not be used directly for creation of arrays; instead you\nshould use array creation routines offered in <code>jax.numpy</code>, such as\n<code>jax.numpy.array()</code>, <code>jax.numpy.zeros()</code>, <code>jax.numpy.ones()</code>,\n<code>jax.numpy.full()</code>, <code>jax.numpy.arange()</code>, etc.</p>\n", "bases": "abc.ABC"}, "b3d.types.Array.dtype": {"fullname": "b3d.types.Array.dtype", "modulename": "b3d.types", "qualname": "Array.dtype", "kind": "variable", "doc": "<p>The data type (<code>numpy.dtype</code>) of the array.</p>\n", "annotation": ": numpy.dtype"}, "b3d.types.Array.ndim": {"fullname": "b3d.types.Array.ndim", "modulename": "b3d.types", "qualname": "Array.ndim", "kind": "variable", "doc": "<p>The number of dimensions in the array.</p>\n", "annotation": ": int"}, "b3d.types.Array.size": {"fullname": "b3d.types.Array.size", "modulename": "b3d.types", "qualname": "Array.size", "kind": "variable", "doc": "<p>The total number of elements in the array.</p>\n", "annotation": ": int"}, "b3d.types.Array.shape": {"fullname": "b3d.types.Array.shape", "modulename": "b3d.types", "qualname": "Array.shape", "kind": "variable", "doc": "<p>The shape of the array.</p>\n", "annotation": ": tuple[int, ...]"}, "b3d.types.Array.addressable_data": {"fullname": "b3d.types.Array.addressable_data", "modulename": "b3d.types", "qualname": "Array.addressable_data", "kind": "function", "doc": "<p>Return an array of the addressable data at a particular index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.addressable_shards": {"fullname": "b3d.types.Array.addressable_shards", "modulename": "b3d.types", "qualname": "Array.addressable_shards", "kind": "variable", "doc": "<p>List of addressable shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.types.Array.global_shards": {"fullname": "b3d.types.Array.global_shards", "modulename": "b3d.types", "qualname": "Array.global_shards", "kind": "variable", "doc": "<p>List of global shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.types.Array.is_fully_addressable": {"fullname": "b3d.types.Array.is_fully_addressable", "modulename": "b3d.types", "qualname": "Array.is_fully_addressable", "kind": "variable", "doc": "<p>Is this Array fully addressable?</p>\n\n<p>A jax.Array is fully addressable if the current process can address all of\nthe devices named in the <code>Sharding</code>. <code>is_fully_addressable</code> is\nequivalent to \"is_local\" in multi-process JAX.</p>\n\n<p>Note that fully replicated is not equal to fully addressable i.e.\na jax.Array which is fully replicated can span across multiple hosts and is\nnot fully addressable.</p>\n", "annotation": ": bool"}, "b3d.types.Array.is_fully_replicated": {"fullname": "b3d.types.Array.is_fully_replicated", "modulename": "b3d.types", "qualname": "Array.is_fully_replicated", "kind": "variable", "doc": "<p>Is this Array fully replicated?</p>\n", "annotation": ": bool"}, "b3d.types.Array.sharding": {"fullname": "b3d.types.Array.sharding", "modulename": "b3d.types", "qualname": "Array.sharding", "kind": "variable", "doc": "<p>The sharding for the array.</p>\n", "annotation": ": Any"}, "b3d.types.Array.all": {"fullname": "b3d.types.Array.all", "modulename": "b3d.types", "qualname": "Array.all", "kind": "function", "doc": "<p>Test whether all array elements along a given axis evaluate to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.all()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical AND reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical AND over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `all` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for all <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>all : ndarray, bool\n    A new boolean or array is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.any": {"fullname": "b3d.types.Array.any", "modulename": "b3d.types", "qualname": "Array.any", "kind": "function", "doc": "<p>Test whether any array element along a given axis evaluates to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.any()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns single boolean if <code>axis</code> is <code>None</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical OR reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical OR over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `any` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for any <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>any : bool or ndarray\n    A new boolean or <code>ndarray</code> is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.argmax": {"fullname": "b3d.types.Array.argmax", "modulename": "b3d.types", "qualname": "Array.argmax", "kind": "function", "doc": "<p>Returns the indices of the maximum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmax()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.argmin": {"fullname": "b3d.types.Array.argmin", "modulename": "b3d.types", "qualname": "Array.argmin", "kind": "function", "doc": "<p>Returns the indices of the minimum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmin()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.argpartition": {"fullname": "b3d.types.Array.argpartition", "modulename": "b3d.types", "qualname": "Array.argpartition", "kind": "function", "doc": "<p>Perform an indirect partition along the given axis using the</p>\n\n<p>LAX-backend implementation of <code>numpy.argpartition()</code>.</p>\n\n<p>The JAX version requires the <code>kth</code> argument to be a static integer rather than\na general array. This is implemented via two calls to <code>jax.lax.top_k()</code>. If\nyou're only accessing the top or bottom k values of the output, it may be more\nefficient to call <code>jax.lax.top_k()</code> directly.</p>\n\n<p>The JAX version differs from the NumPy version in the treatment of NaN entries;\nNaNs which have the negative bit set are sorted to the beginning of the array.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>algorithm specified by the <code>kind</code> keyword. It returns an array of\nindices of the same shape as <code>a</code> that index data along the given\naxis in partitioned order.</p>\n\n<p><em>New in version 1.8.0.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\nkth : int or sequence of ints\n    Element index to partition by. The k-th element will be in its\n    final sorted position and all smaller elements will be moved\n    before it and all larger elements behind it. The order of all\n    elements in the partitions is undefined. If provided with a\n    sequence of k-th it will partition all of them into their sorted\n    position at once.</p>\n\n<pre><code>*Deprecated since version 1.22.0:*\nPassing booleans as index is deprecated.\n</code></pre>\n\n<p>axis : int or None, optional\n    Axis along which to sort. The default is -1 (the last axis). If\n    None, the flattened array is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that partition <code>a</code> along the specified axis.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a partitioned <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the partitioned <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">kth</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.argsort": {"fullname": "b3d.types.Array.argsort", "modulename": "b3d.types", "qualname": "Array.argsort", "kind": "function", "doc": "<p>Returns the indices that would sort an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.argsort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Perform an indirect sort along the given axis using the algorithm specified\nby the <code>kind</code> keyword. It returns an array of indices of the same shape as\n<code>a</code> that index data along the given axis in sorted order.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\naxis : int or None, optional\n    Axis along which to sort.  The default is -1 (the last axis). If None,\n    the flattened array is used.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that sort <code>a</code> along the specified <code>axis</code>.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a sorted <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the sorted <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.astype": {"fullname": "b3d.types.Array.astype", "modulename": "b3d.types", "qualname": "Array.astype", "kind": "function", "doc": "<p>Copy the array and cast to a specified dtype.</p>\n\n<p>This is implemented via <code>jax.lax.convert_element_type()</code>, which may\nhave slightly different behavior than <code>numpy.ndarray.astype()</code> in\nsome cases. In particular, the details of float-to-int and int-to-float\ncasts are implementation dependent.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">copy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Device</span> <span class=\"o\">|</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Sharding</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.choose": {"fullname": "b3d.types.Array.choose", "modulename": "b3d.types", "qualname": "Array.choose", "kind": "function", "doc": "<p>Construct an array from an index array and a list of arrays to choose from.</p>\n\n<p>LAX-backend implementation of <code>numpy.choose()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>First of all, if confused or uncertain, definitely look at the Examples -\nin its full generality, this function is less simple than it might\nseem from the following code description (below ndi =\n<code>numpy.lib.index_tricks</code>):</p>\n\n<p><code>np.choose(a,c) == np.array([c[a[I]][I] for I in ndi.ndindex(a.shape)])</code>.</p>\n\n<p>But this omits some subtleties.  Here is a fully general summary:</p>\n\n<p>Given an \"index\" array (<code>a</code>) of integers and a sequence of <code>n</code> arrays\n(<code>choices</code>), <code>a</code> and each choice array are first broadcast, as necessary,\nto arrays of a common shape; calling these <em>Ba</em> and <em>Bchoices[i], i =\n0,...,n-1</em> we have that, necessarily, <code>Ba.shape == Bchoices[i].shape</code>\nfor each <code>i</code>.  Then, a new array with shape <code>Ba.shape</code> is created as\nfollows:</p>\n\n<ul>\n<li><p>if <code>mode='raise'</code> (the default), then, first of all, each element of\n<code>a</code> (and thus <code>Ba</code>) must be in the range <code>[0, n-1]</code>; now, suppose\nthat <code>i</code> (in that range) is the value at the <code>(j0, j1, ..., jm)</code>\nposition in <code>Ba</code> - then the value at the same position in the new array\nis the value in <code>Bchoices[i]</code> at that same position;</p></li>\n<li><p>if <code>mode='wrap'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; modular arithmetic is used to map integers outside the range\n<code>[0, n-1]</code> back into that range; and then the new array is constructed\nas above;</p></li>\n<li><p>if <code>mode='clip'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; negative integers are mapped to 0; values greater than <code>n-1</code>\nare mapped to <code>n-1</code>; and then the new array is constructed as above.</p></li>\n</ul>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : int array\n    This array must contain integers in <code>[0, n-1]</code>, where <code>n</code> is the\n    number of choices, unless <code>mode=wrap</code> or <code>mode=clip</code>, in which\n    cases any integers are permissible.\nchoices : sequence of arrays\n    Choice arrays. <code>a</code> and all of the choices must be broadcastable to the\n    same shape.  If <code>choices</code> is itself an array (not recommended), then\n    its outermost dimension (i.e., the one corresponding to\n    <code>choices.shape[0]</code>) is taken as defining the \"sequence\".\nmode : {'raise' (default), 'wrap', 'clip'}, optional\n    Specifies how indices outside <code>[0, n-1]</code> will be treated:</p>\n\n<pre><code>  * 'raise' : an exception is raised\n  * 'wrap' : value becomes value mod ``n``\n  * 'clip' : values &lt; 0 are mapped to 0, values &gt; n-1 are mapped to n-1\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>merged_array : array\n    The merged result.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">choices</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;raise&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.clip": {"fullname": "b3d.types.Array.clip", "modulename": "b3d.types", "qualname": "Array.clip", "kind": "function", "doc": "<p>Return an array whose values are limited to a specified range.</p>\n\n<p>Refer to <code>jax.numpy.clip()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.conj": {"fullname": "b3d.types.Array.conj", "modulename": "b3d.types", "qualname": "Array.conj", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.conjugate": {"fullname": "b3d.types.Array.conjugate", "modulename": "b3d.types", "qualname": "Array.conjugate", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.compress": {"fullname": "b3d.types.Array.compress", "modulename": "b3d.types", "qualname": "Array.compress", "kind": "function", "doc": "<p>Return selected slices of this array along given axis.</p>\n\n<p>Refer to <code>jax.numpy.compress()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.copy": {"fullname": "b3d.types.Array.copy", "modulename": "b3d.types", "qualname": "Array.copy", "kind": "function", "doc": "<p>Return an array copy of the given object.</p>\n\n<p>LAX-backend implementation of <code>numpy.copy()</code>.</p>\n\n<p>This function will create arrays on JAX's default device. For control of the\ndevice placement of data, see <code>jax.device_put()</code>. More information is\navailable in the JAX FAQ at :ref:<code>faq-data-placement</code> (full FAQ at\nhttps://jax.readthedocs.io/en/latest/faq.html).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\norder : {'C', 'F', 'A', 'K'}, optional\n    Controls the memory layout of the copy. 'C' means C-order,\n    'F' means F-order, 'A' means 'F' if <code>a</code> is Fortran contiguous,\n    'C' otherwise. 'K' means match the layout of <code>a</code> as closely\n    as possible. (Note that this function and <code>ndarray.copy()</code> are very\n    similar, but have different default values for their order=\n    arguments.)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>arr : ndarray\n    Array interpretation of <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.cumprod": {"fullname": "b3d.types.Array.cumprod", "modulename": "b3d.types", "qualname": "Array.cumprod", "kind": "function", "doc": "<p>Return the cumulative product of elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumprod()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative product is computed.  By default\n    the input is flattened.\ndtype : dtype, optional\n    Type of the returned array, as well as of the accumulator in which\n    the elements are multiplied.  If <em>dtype</em> is not specified, it\n    defaults to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with\n    a precision less than that of the default platform integer.  In\n    that case, the default platform integer is used instead.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumprod : ndarray\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to out is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.cumsum": {"fullname": "b3d.types.Array.cumsum", "modulename": "b3d.types", "qualname": "Array.cumsum", "kind": "function", "doc": "<p>Return the cumulative sum of the elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumsum()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative sum is computed. The default\n    (None) is to compute the cumsum over the flattened array.\ndtype : dtype, optional\n    Type of the returned array and of the accumulator in which the\n    elements are summed.  If <code>dtype</code> is not specified, it defaults\n    to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with a\n    precision less than that of the default platform integer.  In\n    that case, the default platform integer is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumsum_along_axis : ndarray.\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to <code>out</code> is returned. The\n    result has the same size as <code>a</code>, and the same shape as <code>a</code> if\n    <code>axis</code> is not None or <code>a</code> is a 1-d array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.diagonal": {"fullname": "b3d.types.Array.diagonal", "modulename": "b3d.types", "qualname": "Array.diagonal", "kind": "function", "doc": "<p>Return specified diagonals.</p>\n\n<p>LAX-backend implementation of <code>numpy.diagonal()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, returns the diagonal of <code>a</code> with the given offset,\ni.e., the collection of elements of the form <code>a[i, i+offset]</code>.  If\n<code>a</code> has more than two dimensions, then the axes specified by <code>axis1</code>\nand <code>axis2</code> are used to determine the 2-D sub-array whose diagonal is\nreturned.  The shape of the resulting array can be determined by\nremoving <code>axis1</code> and <code>axis2</code> and appending an index to the right equal\nto the size of the resulting diagonals.</p>\n\n<p>In versions of NumPy prior to 1.7, this function always returned a new,\nindependent array containing a copy of the values in the diagonal.</p>\n\n<p>In NumPy 1.7 and 1.8, it continues to return a copy of the diagonal,\nbut depending on this fact is deprecated. Writing to the resulting\narray continues to work as it used to, but a FutureWarning is issued.</p>\n\n<p>Starting in NumPy 1.9 it returns a read-only view on the original array.\nAttempting to write to the resulting array will produce an error.</p>\n\n<p>In some future release, it will return a read/write view and writing to\nthe returned array will alter your original array.  The returned array\nwill have the same type as the input array.</p>\n\n<p>If you don't write to the array returned by this function, then you can\njust ignore all of the above.</p>\n\n<p>If you depend on the current behavior, then we suggest copying the\nreturned array explicitly, i.e., use <code>np.diagonal(a).copy()</code> instead\nof just <code>np.diagonal(a)</code>. This will work with both past and future\nversions of NumPy.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal.  Can be positive or\n    negative.  Defaults to main diagonal (0).\naxis1 : int, optional\n    Axis to be used as the first axis of the 2-D sub-arrays from which\n    the diagonals should be taken.  Defaults to first axis (0).\naxis2 : int, optional\n    Axis to be used as the second axis of the 2-D sub-arrays from\n    which the diagonals should be taken. Defaults to second axis (1).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>array_of_diagonals : ndarray\n    If <code>a</code> is 2-D, then a 1-D array containing the diagonal and of the\n    same type as <code>a</code> is returned unless <code>a</code> is a <code>matrix</code>, in which case\n    a 1-D array rather than a (2-D) <code>matrix</code> is returned in order to\n    maintain backward compatibility.</p>\n\n<pre><code>If ``a.ndim &gt; 2``, then the dimensions specified by `axis1` and `axis2`\nare removed, and a new axis inserted at the end corresponding to the\ndiagonal.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.dot": {"fullname": "b3d.types.Array.dot", "modulename": "b3d.types", "qualname": "Array.dot", "kind": "function", "doc": "<p>Compute the dot product of two arrays.</p>\n\n<p>JAX implementation of <code>numpy.dot()</code>.</p>\n\n<p>This differs from <code>jax.numpy.matmul()</code> in two respects:</p>\n\n<ul>\n<li>if either <code>a</code> or <code>b</code> is a scalar, the result of <code>dot</code> is equivalent to\n<code>jax.numpy.multiply()</code>, while the result of <code>matmul</code> is an error.</li>\n<li>if <code>a</code> and <code>b</code> have more than 2 dimensions, the batch indices are\nstacked rather than broadcast.</li>\n</ul>\n\n<p>Args:\n  a: first input array, of shape <code>(..., N)</code>.\n  b: second input array. Must have shape <code>(N,)</code> or <code>(..., N, M)</code>.\n    In the multi-dimensional case, leading dimensions must be broadcast-compatible\n    with the leading dimensions of <code>a</code>.\n  precision: either <code>None</code> (default), which means the default precision for\n    the backend, a <code>~jax.lax.Precision</code> enum value (<code>Precision.DEFAULT</code>,\n    <code>Precision.HIGH</code> or <code>Precision.HIGHEST</code>) or a tuple of two\n    such values indicating precision of <code>a</code> and <code>b</code>.\n  preferred_element_type: either <code>None</code> (default), which means the default\n    accumulation type for the input types, or a datatype, indicating to\n    accumulate results to and return a result with that datatype.</p>\n\n<p>Returns:\n  array containing the dot product of the inputs, with batch dimensions of\n  <code>a</code> and <code>b</code> stacked rather than broadcast.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy.matmul()</code>: broadcasted batched matmul.</li>\n<li><code>jax.lax.dot_general()</code>: general batched matrix multiplication.</li>\n</ul>\n\n<p>Examples:\n  For scalar inputs, <code>dot</code> computes the element-wise product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">Array([2, 4, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For vector or matrix inputs, <code>dot</code> computes the vector or matrix product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([20, 38, 26], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[ 51,  60,  29],</span>\n<span class=\"go\">       [ 96, 114,  62],</span>\n<span class=\"go\">       [ 61,  78,  95]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For higher-dimensional matrix products, batch dimensions are stacked, whereas\n  in <code>~jax.numpy.matmul()</code> they are broadcast. For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 3, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 1)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">precision</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preferred_element_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.flatten": {"fullname": "b3d.types.Array.flatten", "modulename": "b3d.types", "qualname": "Array.flatten", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.item": {"fullname": "b3d.types.Array.item", "modulename": "b3d.types", "qualname": "Array.item", "kind": "function", "doc": "<p>Copy an element of an array to a standard Python scalar and return it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.max": {"fullname": "b3d.types.Array.max", "modulename": "b3d.types", "qualname": "Array.max", "kind": "function", "doc": "<p>Return the maximum of an array or maximum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.max()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``max`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The minimum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the maximum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>max : ndarray or scalar\n    Maximum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>. If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.mean": {"fullname": "b3d.types.Array.mean", "modulename": "b3d.types", "qualname": "Array.mean", "kind": "function", "doc": "<p>Compute the arithmetic mean along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.mean()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the average of the array elements.  The average is taken over\nthe flattened array by default, otherwise over the specified axis.\n<code>float64</code> intermediate and return values are used for integer inputs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose mean is desired. If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the means are computed. The default is to\n    compute the mean of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the mean.  For integer inputs, the default\n    is <code>float64</code>; for floating point inputs, it is the same as the\n    input dtype.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `mean` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the mean. See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>m : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the mean values,\n    otherwise a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.min": {"fullname": "b3d.types.Array.min", "modulename": "b3d.types", "qualname": "Array.min", "kind": "function", "doc": "<p>Return the minimum of an array or minimum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.min()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``min`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The maximum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the minimum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>min : ndarray or scalar\n    Minimum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>.  If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.nonzero": {"fullname": "b3d.types.Array.nonzero", "modulename": "b3d.types", "qualname": "Array.nonzero", "kind": "function", "doc": "<p>Return indices of nonzero elements of an array.</p>\n\n<p>JAX implementation of <code>numpy.nonzero()</code>.</p>\n\n<p>Because the size of the output of <code>nonzero</code> is data-dependent, the function\nis not compatible with JIT and other transformations. The JAX version adds\nthe optional <code>size</code> argument which must be specified statically for\n<code>jnp.nonzero</code> to be used within JAX's transformations.</p>\n\n<p>Args:\n  a: N-dimensional array.\n  size: optional static integer specifying the number of nonzero entries to\n    return. If there are more nonzero elements than the specified <code>size</code>,\n    then indices will be truncated at the end. If there are fewer nonzero\n    elements than the specified size, then indices will be padded with\n    <code>fill_value</code>, which defaults to zero.\n  fill_value: optional padding value when <code>size</code> is specified. Defaults to 0.</p>\n\n<p>Returns:\n  Tuple of JAX Arrays of length <code>a.ndim</code>, containing the indices of each\n  nonzero value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy flatnonzero()</code></li>\n<li><code>jax.numpy.where()</code></li>\n</ul>\n\n<p>Examples:</p>\n\n<p>One-dimensional array returns a length-1 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>Two-dimensional array returns a length-2 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([0, 1, 1], dtype=int32), Array([1, 0, 2], dtype=int32))</span>\n</code></pre>\n</div>\n\n<p>In either case, the resulting tuple of indices can be used directly to extract\n  the nonzero values:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"go\">Array([5, 6, 7], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>The output of <code>nonzero</code> has a dynamic shape, because the number of returned\n  indices depends on the contents of the input array. As such, it is incompatible\n  with JIT and other JAX transformations:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">)(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +IGNORE_EXCEPTION_DETAIL</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">  </span><span class=\"c\">...</span>\n<span class=\"gr\">ConcretizationTypeError</span>: <span class=\"n\">Abstract tracer value encountered where concrete value is expected: traced array with shape int32[].</span>\n<span class=\"x\">The size argument of jnp.nonzero must be statically specified to use jnp.nonzero within JAX transformations.</span>\n</code></pre>\n</div>\n\n<p>This can be addressed by passing a static <code>size</code> parameter to specify the\n  desired output shape:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span> <span class=\"o\">=</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">,</span> <span class=\"n\">static_argnames</span><span class=\"o\">=</span><span class=\"s1\">&#39;size&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>If <code>size</code> does not match the true size, the result will be either truncated or padded:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># size &lt; 3: indices are truncated</span>\n<span class=\"go\">(Array([1, 3], dtype=int32),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># size &gt; 3: indices are padded with zeros.</span>\n<span class=\"go\">(Array([1, 3, 5, 0, 0], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>You can specify a custom fill value for the padding using the <code>fill_value</code> argument:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"go\">(Array([1, 3, 5, 6, 6], dtype=int32),)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.prod": {"fullname": "b3d.types.Array.prod", "modulename": "b3d.types", "qualname": "Array.prod", "kind": "function", "doc": "<p>Return the product of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.prod()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a product is performed.  The default,\n    axis=None, will calculate the product of all the elements in the\n    input array. If axis is negative it counts from the last to the\n    first axis.\ndtype : dtype, optional\n    The type of the returned array, as well as of the accumulator in\n    which the elements are multiplied.  The dtype of <code>a</code> is used by\n    default unless <code>a</code> has an integer dtype of less precision than the\n    default platform integer.  In that case, if <code>a</code> is signed then the\n    platform integer is used while if <code>a</code> is unsigned then an unsigned\n    integer of the same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left in the\n    result as dimensions with size one. With this option, the result\n    will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `prod` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The starting value for this product. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the product. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>product_along_axis : ndarray, see <code>dtype</code> parameter above.\n    An array shaped as <code>a</code> but with the specified axis removed.\n    Returns a reference to <code>out</code> if specified.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.ptp": {"fullname": "b3d.types.Array.ptp", "modulename": "b3d.types", "qualname": "Array.ptp", "kind": "function", "doc": "<p>Range of values (maximum - minimum) along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.ptp()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The name of the function comes from the acronym for 'peak to peak'.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p><code>ptp</code> preserves the data type of the array. This means the\nreturn value for an input of signed integers with n bits\n(e.g. <code>np.int8</code>, <code>np.int16</code>, etc) is also a signed integer\nwith n bits.  In that case, peak-to-peak values greater than\n<code>2**(n-1)-1</code> will be returned as negative values. An example\nwith a work-around is shown below.</p>\n\n</div>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input values.\naxis : None or int or tuple of ints, optional\n    Axis along which to find the peaks.  By default, flatten the\n    array.  <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `ptp` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ptp : ndarray or scalar\n    The range of a given array - <code>scalar</code> if array is one-dimensional\n    or a new array holding the result along the given axis</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.ravel": {"fullname": "b3d.types.Array.ravel", "modulename": "b3d.types", "qualname": "Array.ravel", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.repeat": {"fullname": "b3d.types.Array.repeat", "modulename": "b3d.types", "qualname": "Array.repeat", "kind": "function", "doc": "<p>Repeat each element of an array after themselves</p>\n\n<p>LAX-backend implementation of <code>numpy.repeat()</code>.</p>\n\n<p>JAX adds the optional <code>total_repeat_length</code> parameter which specifies the total\nnumber of repeat, and defaults to sum(repeats). It must be specified for repeat\nto be compilable. If <code>sum(repeats)</code> is larger than the specified\n<code>total_repeat_length</code> the remaining values will be discarded. In the case of\n<code>sum(repeats)</code> being smaller than the specified target length, the final value\nwill be repeated.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\nrepeats : int or array of ints\n    The number of repetitions for each element.  <code>repeats</code> is broadcasted\n    to fit the shape of the given axis.\naxis : int, optional\n    The axis along which to repeat values.  By default, use the\n    flattened input array, and return a flat output array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>repeated_array : ndarray\n    Output array which has the same shape as <code>a</code>, except along\n    the given axis.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">total_repeat_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.reshape": {"fullname": "b3d.types.Array.reshape", "modulename": "b3d.types", "qualname": "Array.reshape", "kind": "function", "doc": "<p>Returns an array containing the same data with a new shape.</p>\n\n<p>Refer to <code>jax.numpy.reshape()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.round": {"fullname": "b3d.types.Array.round", "modulename": "b3d.types", "qualname": "Array.round", "kind": "function", "doc": "<p>Round an array to the given number of decimals.</p>\n\n<p>LAX-backend implementation of <code>numpy.around()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p><code>around</code> is an alias of <code>~numpy.round</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">decimals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.searchsorted": {"fullname": "b3d.types.Array.searchsorted", "modulename": "b3d.types", "qualname": "Array.searchsorted", "kind": "function", "doc": "<p>Find indices where elements should be inserted to maintain order.</p>\n\n<p>LAX-backend implementation of <code>numpy.searchsorted()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Find the indices into a sorted array <code>a</code> such that, if the\ncorresponding elements in <code>v</code> were inserted before the indices, the\norder of <code>a</code> would be preserved.</p>\n\n<p>Assuming that <code>a</code> is sorted:</p>\n\n<p>======  ============================\n<code>side</code>  returned index <code>i</code> satisfies\n======  ============================\nleft    <code>a[i-1] &lt; v &lt;= a[i]</code>\nright   <code>a[i-1] &lt;= v &lt; a[i]</code>\n======  ============================</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : 1-D array_like\n    Input array. If <code>sorter</code> is None, then it must be sorted in\n    ascending order, otherwise <code>sorter</code> must be an array of indices\n    that sort it.\nv : array_like\n    Values to insert into <code>a</code>.\nside : {'left', 'right'}, optional\n    If 'left', the index of the first suitable location found is given.\n    If 'right', return the last such index.  If there is no suitable\n    index, return either 0 or N (where N is the length of <code>a</code>).\nmethod : str\n    One of 'scan' (default), 'scan_unrolled', 'sort' or 'compare_all'. Controls the method used by the\n    implementation: 'scan' tends to be more performant on CPU (particularly when <code>a</code> is\n    very large), 'scan_unrolled' is more performant on GPU at the expense of additional compile time,\n    'sort' is often more performant on accelerator backends like GPU and TPU\n    (particularly when <code>v</code> is very large), and 'compare_all' can be most performant\n    when <code>a</code> is very small.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : int or array of ints\n    Array of insertion points with the same shape as <code>v</code>,\n    or an integer if <code>v</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sorter</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;scan&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.sort": {"fullname": "b3d.types.Array.sort", "modulename": "b3d.types", "qualname": "Array.sort", "kind": "function", "doc": "<p>Return a sorted copy of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.sort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to be sorted.\naxis : int or None, optional\n    Axis along which to sort. If None, the array is flattened before\n    sorting. The default is -1, which sorts along the last axis.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sorted_array : ndarray\n    Array of the same type and shape as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.squeeze": {"fullname": "b3d.types.Array.squeeze", "modulename": "b3d.types", "qualname": "Array.squeeze", "kind": "function", "doc": "<p>Remove axes of length one from <code>a</code>.</p>\n\n<p>LAX-backend implementation of <code>numpy.squeeze()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>squeezed : ndarray\n    The input array, but with all or a subset of the\n    dimensions of length 1 removed. This is always <code>a</code> itself\n    or a view into <code>a</code>. Note that if all axes are squeezed,\n    the result is a 0d array and not a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.std": {"fullname": "b3d.types.Array.std", "modulename": "b3d.types", "qualname": "Array.std", "kind": "function", "doc": "<p>Compute the standard deviation along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.std()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the standard deviation, a measure of the spread of a distribution,\nof the array elements. The standard deviation is computed for the\nflattened array by default, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Calculate the standard deviation of these values.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the standard deviation is computed. The\n    default is to compute the standard deviation of the flattened array.\ndtype : dtype, optional\n    Type to use in computing the standard deviation. For arrays of\n    integer type the default is float64, for arrays of float types it is\n    the same as the array type.\nddof : int, optional\n    Means Delta Degrees of Freedom.  The divisor used in calculations\n    is <code>N - ddof</code>, where <code>N</code> represents the number of elements.\n    By default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `std` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the standard deviation.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>standard_deviation : ndarray, see dtype parameter above.\n    If <code>out</code> is None, return a new array containing the standard deviation,\n    otherwise return a reference to the output array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.sum": {"fullname": "b3d.types.Array.sum", "modulename": "b3d.types", "qualname": "Array.sum", "kind": "function", "doc": "<p>Sum of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.sum()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Elements to sum.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a sum is performed.  The default,\n    axis=None, will sum all of the elements of the input array.  If\n    axis is negative it counts from the last to the first axis.\ndtype : dtype, optional\n    The type of the returned array and of the accumulator in which the\n    elements are summed.  The dtype of <code>a</code> is used by default unless <code>a</code>\n    has an integer dtype of less precision than the default platform\n    integer.  In that case, if <code>a</code> is signed then the platform integer\n    is used while if <code>a</code> is unsigned then an unsigned integer of the\n    same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `sum` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    Starting value for the sum. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the sum. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_axis : ndarray\n    An array with the same shape as <code>a</code>, with the specified\n    axis removed.   If <code>a</code> is a 0-d array, or if <code>axis</code> is None, a scalar\n    is returned.  If an output array is specified, a reference to\n    <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.swapaxes": {"fullname": "b3d.types.Array.swapaxes", "modulename": "b3d.types", "qualname": "Array.swapaxes", "kind": "function", "doc": "<p>Interchange two axes of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.swapaxes()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis1 : int\n    First axis.\naxis2 : int\n    Second axis.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>a_swapped : ndarray\n    For NumPy &gt;= 1.10.0, if <code>a</code> is an ndarray, then a view of <code>a</code> is\n    returned; otherwise a new array is created. For earlier NumPy\n    versions a view of <code>a</code> is returned only if the order of the\n    axes is changed, otherwise the input array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.take": {"fullname": "b3d.types.Array.take", "modulename": "b3d.types", "qualname": "Array.take", "kind": "function", "doc": "<p>Take elements from an array along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.take()</code>.</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>When axis is not None, this function does the same thing as \"fancy\"\nindexing (indexing arrays using arrays); however, it can be easier to use\nif you need elements along a given axis. A call such as\n<code>np.take(arr, indices, axis=3)</code> is equivalent to\n<code>arr[:,:,:,indices,...]</code>.</p>\n\n<p>Explained without fancy indexing, this is equivalent to the following use\nof <code>ndindex</code>, which sets each of <code>ii</code>, <code>jj</code>, and <code>kk</code> to a tuple of\nindices::</p>\n\n<pre><code>Ni, Nk = a.shape[:axis], a.shape[axis+1:]\nNj = indices.shape\nfor ii in ndindex(Ni):\n    for jj in ndindex(Nj):\n        for kk in ndindex(Nk):\n            out[ii + jj + kk] = a[ii + (indices[jj],) + kk]\n</code></pre>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like (Ni..., M, Nk...)\n    The source array.\nindices : array_like (Nj...)\n    The indices of the values to extract.\naxis : int, optional\n    The axis over which to select values. By default, the flattened\n    input array is used.\nmode : string, default=\"fill\"\n    Out-of-bounds indexing mode. The default mode=\"fill\" returns invalid values\n    (e.g. NaN) for out-of bounds indices (see also <code>fill_value</code> below).\n    For more discussion of mode options, see <code>jax.numpy.ndarray.at</code>.\nfill_value : optional\n    The fill value to return for out-of-bounds slices when mode is 'fill'. Ignored\n    otherwise. Defaults to NaN for inexact types, the largest negative value for\n    signed types, the largest positive value for unsigned types, and True for booleans.\nunique_indices : bool, default=False\n    If True, the implementation will assume that the indices are unique,\n    which can result in more efficient execution on some backends.\nindices_are_sorted : bool, default=False\n    If True, the implementation will assume that the indices are sorted in\n    ascending order, which can lead to more efficient execution on some backends.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray (Ni..., Nj..., Nk...)\n    The returned array has the same type as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unique_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indices_are_sorted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.trace": {"fullname": "b3d.types.Array.trace", "modulename": "b3d.types", "qualname": "Array.trace", "kind": "function", "doc": "<p>Return the sum along diagonals of the array.</p>\n\n<p>LAX-backend implementation of <code>numpy.trace()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, the sum along its diagonal with the given offset\nis returned, i.e., the sum of elements <code>a[i,i+offset]</code> for all i.</p>\n\n<p>If <code>a</code> has more than two dimensions, then the axes specified by axis1 and\naxis2 are used to determine the 2-D sub-arrays whose traces are returned.\nThe shape of the resulting array is the same as that of <code>a</code> with <code>axis1</code>\nand <code>axis2</code> removed.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array, from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal. Can be both positive\n    and negative. Defaults to 0.\naxis1, axis2 : int, optional\n    Axes to be used as the first and second axis of the 2-D sub-arrays\n    from which the diagonals should be taken. Defaults are the first two\n    axes of <code>a</code>.\ndtype : dtype, optional\n    Determines the data-type of the returned array and of the accumulator\n    where the elements are summed. If dtype has the value None and <code>a</code> is\n    of integer type of precision less than the default integer\n    precision, then the default integer precision is used. Otherwise,\n    the precision is the same as that of <code>a</code>.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_diagonals : ndarray\n    If <code>a</code> is 2-D, the sum along the diagonal is returned.  If <code>a</code> has\n    larger dimensions, then an array of sums along diagonals is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.transpose": {"fullname": "b3d.types.Array.transpose", "modulename": "b3d.types", "qualname": "Array.transpose", "kind": "function", "doc": "<p>Returns a view of the array with axes transposed.</p>\n\n<p>Refer to <code>jax.numpy.transpose()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.var": {"fullname": "b3d.types.Array.var", "modulename": "b3d.types", "qualname": "Array.var", "kind": "function", "doc": "<p>Compute the variance along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.var()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the variance of the array elements, a measure of the spread of a\ndistribution.  The variance is computed for the flattened array by\ndefault, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose variance is desired.  If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the variance is computed.  The default is to\n    compute the variance of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the variance.  For arrays of integer type\n    the default is <code>float64</code>; for arrays of float types it is the same as\n    the array type.\nddof : int, optional\n    \"Delta Degrees of Freedom\": the divisor used in the calculation is\n    <code>N - ddof</code>, where <code>N</code> represents the number of elements. By\n    default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `var` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the variance. See <code>~numpy.ufunc.reduce</code> for\n    details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>variance : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the variance;\n    otherwise, a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.view": {"fullname": "b3d.types.Array.view", "modulename": "b3d.types", "qualname": "Array.view", "kind": "function", "doc": "<p>Return a bitwise copy of the array, viewed as a new dtype.</p>\n\n<p>This is fuller-featured wrapper around <code>jax.lax.bitcast_convert_type()</code>.</p>\n\n<p>If the source and target dtype have the same bitwidth, the result has the same\nshape as the input array. If the bitwidth of the target dtype is different\nfrom the source, the size of the last axis of the result is adjusted\naccordingly.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 6)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 2)</span>\n</code></pre>\n</div>\n\n<p>Conversions involving booleans are not well-defined in all situations. With\nregards to the shape of result as explained above, booleans are treated as\nhaving a bitwidth of 8. However, when converting to a boolean array, the input\nshould only contain 0 or 1 bytes. Otherwise, results may be unpredictable or\nmay change depending on how the result is used.</p>\n\n<p>This conversion is guaranteed and safe:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ True, False,  True], dtype=bool)</span>\n</code></pre>\n</div>\n\n<p>However, there are no guarantees about the results of any expression involving\na view such as this: <code>jnp.array([1, 2, 3], dtype=jnp.int8).view(jnp.bool_)</code>.\nIn particular, the results may change between JAX releases and depending on\nthe platform. To safely convert such an array to a boolean array, compare it\nwith <code>0</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span>\n<span class=\"go\">Array([ True,  True, False], dtype=bool)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.types.Array.flat": {"fullname": "b3d.types.Array.flat", "modulename": "b3d.types", "qualname": "Array.flat", "kind": "variable", "doc": "<p>Not implemented: Use <code>~jax.Array.flatten()</code> instead.</p>\n"}, "b3d.types.Array.T": {"fullname": "b3d.types.Array.T", "modulename": "b3d.types", "qualname": "Array.T", "kind": "variable", "doc": "<p>Return a transposed version of an N-dimensional array.</p>\n\n<p>JAX implementation of <code>jax.numpy.transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  a: input array\n  axes: optionally specify the permutation using a length-<code>a.ndim</code> sequence of integers\n    <code>i</code> satisfying <code>0 &lt;= i &lt; a.ndim</code>. Defaults to <code>range(a.ndim)[::-1]</code>, i.e\n    reverses the order of all axes.</p>\n\n<p>Returns:\n  transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.transpose()</code>: equivalent function via an <code>~jax.Array</code> method.</li>\n<li><code>jax.Array.T</code>: equivalent function via an <code>~jax.Array</code>  property.</li>\n<li><code>jax.numpy.matrix_transpose()</code>: transpose the last two axes of an array. This is\nsuitable for working with batched 2D matrices.</li>\n<li><code>jax.numpy.swapaxes()</code>: swap any two axes in an array.</li>\n<li><code>jax.numpy.moveaxis()</code>: move an axis to another postion in the array.</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.transpose()</code>, <code>jax.numpy.transpose()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  For a 1D array, the transpose is the identity:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For a 2D array, the transpose is a matrix transpose:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For an N-dimensional array, the transpose reverses the order of the axes:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(5, 4, 3)</span>\n</code></pre>\n</div>\n\n<p>The <code>axes</code> argument can be specified to change this default behavior:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>Since swapping the last two axes is a common operation, it can be done\n  via its own API, <code>jax.numpy.matrix_transpose()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>For convenience, transposes may also be performed using the <code>jax.Array.transpose()</code>\n  method or the <code>jax.Array.T</code> property:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.types.Array.mT": {"fullname": "b3d.types.Array.mT", "modulename": "b3d.types", "qualname": "Array.mT", "kind": "variable", "doc": "<p>Transpose the last two dimensions of an array.</p>\n\n<p>JAX implementation of <code>jax.numpy.matrix_transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  x: input array, Must have <code>x.ndim &gt;= 2</code></p>\n\n<p>Returns:\n  matrix-transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.mT</code>: same operation accessed via an <code>~jax.Array()</code> property.</li>\n<li><code>jax.numpy.transpose()</code>: general multi-axis transpose</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.matrix_transpose()</code>, <code>jax.numpy.matrix_transpose()</code> will return a\n  copy rather than a view of the input array. However, under JIT, the compiler will\n  optimize-away such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  Here is a 2x2x2 matrix representing a batched 2x2 matrix:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, you can perform the same transpose via the <code>~jax.Array.mT</code>\n  property of <code>jax.Array</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mT</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.types.Array.real": {"fullname": "b3d.types.Array.real", "modulename": "b3d.types", "qualname": "Array.real", "kind": "variable", "doc": "<p>Return the real part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.real()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The real component of the complex argument. If <code>val</code> is real, the type\n    of <code>val</code> is used for the output.  If <code>val</code> has complex elements, the\n    returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.types.Array.imag": {"fullname": "b3d.types.Array.imag", "modulename": "b3d.types", "qualname": "Array.imag", "kind": "variable", "doc": "<p>Return the imaginary part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.imag()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The imaginary component of the complex argument. If <code>val</code> is real,\n    the type of <code>val</code> is used for the output.  If <code>val</code> has complex\n    elements, the returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.types.Array.nbytes": {"fullname": "b3d.types.Array.nbytes", "modulename": "b3d.types", "qualname": "Array.nbytes", "kind": "variable", "doc": "<p>Total bytes consumed by the elements of the array.</p>\n", "annotation": ": int"}, "b3d.types.Array.itemsize": {"fullname": "b3d.types.Array.itemsize", "modulename": "b3d.types", "qualname": "Array.itemsize", "kind": "variable", "doc": "<p>Length of one array element in bytes.</p>\n", "annotation": ": int"}, "b3d.types.Array.at": {"fullname": "b3d.types.Array.at", "modulename": "b3d.types", "qualname": "Array.at", "kind": "variable", "doc": "<p>Helper property for index update functionality.</p>\n\n<p>The <code>at</code> property provides a functionally pure equivalent of in-place\narray modifications.</p>\n\n<p>In particular:</p>\n\n<p>==============================  ================================\nAlternate syntax                Equivalent In-place expression\n==============================  ================================\n<code>x = x.at[idx].set(y)</code>        <code>x[idx] = y</code>\n<code>x = x.at[idx].add(y)</code>        <code>x[idx] += y</code>\n<code>x = x.at[idx].multiply(y)</code>   <code>x[idx] *= y</code>\n<code>x = x.at[idx].divide(y)</code>     <code>x[idx] /= y</code>\n<code>x = x.at[idx].power(y)</code>      <code>x[idx] **= y</code>\n<code>x = x.at[idx].min(y)</code>        <code>x[idx] = minimum(x[idx], y)</code>\n<code>x = x.at[idx].max(y)</code>        <code>x[idx] = maximum(x[idx], y)</code>\n<code>x = x.at[idx].apply(ufunc)</code>  <code>ufunc.at(x, idx)</code>\n<code>x = x.at[idx].get()</code>         <code>x = x[idx]</code>\n==============================  ================================</p>\n\n<p>None of the <code>x.at</code> expressions modify the original <code>x</code>; instead they return\na modified copy of <code>x</code>. However, inside a <code>~jax.jit()</code> compiled function,\nexpressions like :code:<code>x = x.at[idx].set(y)</code> are guaranteed to be applied in-place.</p>\n\n<p>Unlike NumPy in-place operations such as :code:<code>x[idx] += y</code>, if multiple\nindices refer to the same location, all updates will be applied (NumPy would\nonly apply the last update, rather than applying all updates.) The order\nin which conflicting updates are applied is implementation-defined and may be\nnondeterministic (e.g., due to concurrency on some hardware platforms).</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<h2 id=\"arguments\">Arguments</h2>\n\n<p>mode : str\n    Specify out-of-bound indexing mode. Options are:</p>\n\n<pre><code>- ``\"promise_in_bounds\"``: (default) The user promises that indices are in bounds.\n  No additional checking will be performed. In practice, this means that\n  out-of-bounds indices in ``get()`` will be clipped, and out-of-bounds indices\n  in ``set()``, ``add()``, etc. will be dropped.\n- ``\"clip\"``: clamp out of bounds indices into valid range.\n- ``\"drop\"``: ignore out-of-bound indices.\n- ``\"fill\"``: alias for ``\"drop\"``.  For `get()`, the optional ``fill_value``\n  argument specifies the value that will be returned.\n\n  See `jax.lax.GatherScatterMode` for more details.\n</code></pre>\n\n<p>indices_are_sorted : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are sorted in ascending order, which can lead to more efficient execution\n    on some backends.\nunique_indices : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are unique, which can result in more efficient execution on some backends.\nfill_value : Any\n    Only applies to the <code>get()</code> method: the fill value to return for out-of-bounds\n    slices when <code>mode</code> is <code>'fill'</code>. Ignored otherwise. Defaults to <code>NaN</code> for\n    inexact types, the largest negative value for signed types, the largest positive\n    value for unsigned types, and <code>True</code> for booleans.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1., 12.,  3.,  4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices are ignored</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;clip&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1.,  2.,  3., 14.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"go\">Array(2., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># out-of-bounds indices clipped</span>\n<span class=\"go\">Array(4., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices filled with NaN</span>\n<span class=\"go\">Array(nan, dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># custom fill value</span>\n<span class=\"go\">Array(-1., dtype=float32)</span>\n</code></pre>\n</div>\n"}, "b3d.types.Bool": {"fullname": "b3d.types.Bool", "modulename": "b3d.types", "qualname": "Bool", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.types.Float": {"fullname": "b3d.types.Float", "modulename": "b3d.types", "qualname": "Float", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.types.Int": {"fullname": "b3d.types.Int", "modulename": "b3d.types", "qualname": "Int", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.types.Quaternion": {"fullname": "b3d.types.Quaternion", "modulename": "b3d.types", "qualname": "Quaternion", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.types.Indexer": {"fullname": "b3d.types.Indexer", "modulename": "b3d.types", "qualname": "Indexer", "kind": "variable", "doc": "<p></p>\n", "default_value": "int | slice | jax.Array"}, "b3d.types.Matrix": {"fullname": "b3d.types.Matrix", "modulename": "b3d.types", "qualname": "Matrix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;jax.Array&#x27;&gt;"}, "b3d.types.Vector": {"fullname": "b3d.types.Vector", "modulename": "b3d.types", "qualname": "Vector", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;jax.Array&#x27;&gt;"}, "b3d.types.Direction": {"fullname": "b3d.types.Direction", "modulename": "b3d.types", "qualname": "Direction", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;class &#x27;jax.Array&#x27;&gt;"}, "b3d.types.GaussianParticle": {"fullname": "b3d.types.GaussianParticle", "modulename": "b3d.types", "qualname": "GaussianParticle", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Any"}, "b3d.types.Key": {"fullname": "b3d.types.Key", "modulename": "b3d.types", "qualname": "Key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": TypeAlias", "default_value": "jax.Array"}, "b3d.types.Pytree": {"fullname": "b3d.types.Pytree", "modulename": "b3d.types", "qualname": "Pytree", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Any"}, "b3d.types.GenerativeFunction": {"fullname": "b3d.types.GenerativeFunction", "modulename": "b3d.types", "qualname": "GenerativeFunction", "kind": "class", "doc": "<p><code>GenerativeFunction</code> is the type of _generative functions_, the main computational object in Gen.</p>\n\n<p>Generative functions are a type of probabilistic program. In terms of their mathematical specification, they come equipped with a few ingredients:</p>\n\n<ul>\n<li>(<strong>Distribution over samples</strong>) $P(\\cdot_t, \\cdot_r; a)$ - a probability distribution over samples $t$ and untraced randomness $r$, indexed by arguments $a$. This ingredient is involved in all the interfaces and specifies the distribution over samples which the generative function represents.</li>\n<li>(<strong>Family of K/L proposals</strong>) $(K(\\cdot_t, \\cdot_{K_r}; u, t), L(\\cdot_t, \\cdot_{L_r}; u, t)) = \\mathcal{F}(u, t)$ - a family of pairs of probabilistic programs (referred to as K and L), indexed by [<code>UpdateProblem</code>][genjax.core.UpdateProblem] $u$ and an existing sample $t$. This ingredient supports the [<code>update</code>][genjax.core.GenerativeFunction.update] and [<code>importance</code>][genjax.core.GenerativeFunction.importance] interface, and is used to specify an SMCP3 move which the generative function must provide in response to an update request. K and L must satisfy additional properties, described further in [<code>update</code>][genjax.core.GenerativeFunction.update].</li>\n<li>(<strong>Return value function</strong>) $f(t, r, a)$ - a deterministic return value function, which maps samples and untraced randomness to return values.</li>\n</ul>\n\n<p>Generative functions also support a family of [<code>Target</code>][genjax.inference.Target] distributions - a [<code>Target</code>][genjax.inference.Target] distribution is a (possibly unnormalized) distribution, typically induced by inference problems.</p>\n\n<ul>\n<li>$\\delta_\\emptyset$ - the empty target, whose only possible value is the empty sample, with density 1.</li>\n<li>(<strong>Family of targets induced by $P$</strong>) $T_P(a, c)$ - a family of targets indexed by arguments $a$ and [<code>Constraint</code>][genjax.core.Constraint] $c$, created by pairing the distribution over samples $P$ with arguments and constraint.</li>\n</ul>\n\n<p>Generative functions expose computations using these ingredients through the _generative function interface_ (the methods which are documented below).</p>\n\n<p>Examples:\n    The interface methods can be used to implement inference algorithms directly - here's a simple example using bootstrap importance sampling directly:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    import jax\n    from jax.scipy.special import logsumexp\n    from jax.random import PRNGKey\n    import jax.tree_util as jtu\n    from genjax import ChoiceMapBuilder as C\n    from genjax import gen, uniform, flip, categorical</p>\n\n<pre><code>@gen\ndef model():\n    p = uniform(0.0, 1.0) @ \"p\"\n    f1 = flip(p) @ \"f1\"\n    f2 = flip(p) @ \"f2\"\n\n\n# Bootstrap importance sampling.\ndef importance_sampling(key, constraint):\n    key, sub_key = jax.random.split(key)\n    sub_keys = jax.random.split(sub_key, 5)\n    tr, log_weights = jax.vmap(model.importance, in_axes=(0, None, None))(\n        sub_keys, constraint, ()\n    )\n    logits = log_weights - logsumexp(log_weights)\n    idx = categorical(logits)(key)\n    return jtu.tree_map(lambda v: v[idx], tr.get_sample())\n\n\nsub_keys = jax.random.split(PRNGKey(0), 50)\nsamples = jax.jit(jax.vmap(importance_sampling, in_axes=(0, None)))(\n    sub_keys, C.kw(f1=True, f2=True)\n)\nprint(samples.render_html())\n```\n</code></pre>\n", "bases": "genjax._src.core.pytree.Pytree"}, "b3d.types.GenerativeFunction.handle_kwargs": {"fullname": "b3d.types.GenerativeFunction.handle_kwargs", "modulename": "b3d.types", "qualname": "GenerativeFunction.handle_kwargs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.get_trace_shape": {"fullname": "b3d.types.GenerativeFunction.get_trace_shape", "modulename": "b3d.types", "qualname": "GenerativeFunction.get_trace_shape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.get_empty_trace": {"fullname": "b3d.types.GenerativeFunction.get_empty_trace", "modulename": "b3d.types", "qualname": "GenerativeFunction.get_empty_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.gfi_boundary": {"fullname": "b3d.types.GenerativeFunction.gfi_boundary", "modulename": "b3d.types", "qualname": "GenerativeFunction.gfi_boundary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">_C</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">_C</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.simulate": {"fullname": "b3d.types.GenerativeFunction.simulate", "modulename": "b3d.types", "qualname": "GenerativeFunction.simulate", "kind": "function", "doc": "<p>Execute the generative function, sampling from its distribution over samples, and return a [<code>Trace</code>][genjax.core.Trace].</p>\n\n<h2 id=\"more-on-traces\">More on traces</h2>\n\n<p>The [<code>Trace</code>][genjax.core.Trace] returned by <code>simulate</code> implements its own interface.</p>\n\n<p>It is responsible for storing the arguments of the invocation ([<code>genjax.Trace.get_args</code>][]), the return value of the generative function ([<code>genjax.Trace.get_retval</code>][]), the identity of the generative function which produced the trace ([<code>genjax.Trace.get_gen_fn</code>][]), the sample of traced random choices produced during the invocation ([<code>genjax.Trace.get_sample</code>][]) and _the score_ of the sample ([<code>genjax.Trace.get_score</code>][]).</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    import genjax\n    from jax import vmap, jit\n    from jax.random import PRNGKey\n    from jax.random import split</p>\n\n<pre><code>@genjax.gen\ndef model():\n    x = genjax.normal(0.0, 1.0) @ \"x\"\n    return x\n\n\nkey = PRNGKey(0)\ntr = model.simulate(key, ())\nprint(tr.render_html())\n</code></pre>\n\n<p><pre><code>\nAnother example, using the same model, composed into [`genjax.repeat`](combinators.md#genjax.repeat) - which creates a new generative function, which has the same interface:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n@genjax.gen\ndef model():\n    x = genjax.normal(0.0, 1.0) @ \"x\"\n    return x\n\n\nkey = PRNGKey(0)\ntr = model.repeat(n=10).simulate(key, ())\nprint(tr.render_html())</p>\n\n</code></pre>\n<pre><code>(**Fun, flirty, fast ... parallel?**) Feel free to use `jax.jit` and `jax.vmap`!\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nkey = PRNGKey(0)\nsub_keys = split(key, 10)\nsim = model.repeat(n=10).simulate\ntr = jit(vmap(sim, in_axes=(0, None)))(sub_keys, ())\nprint(tr.render_html())\n```\n\n<p></code></pre></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.update": {"fullname": "b3d.types.GenerativeFunction.update", "modulename": "b3d.types", "qualname": "GenerativeFunction.update", "kind": "function", "doc": "<p>Update a trace in response to an [<code>UpdateProblem</code>][genjax.core.UpdateProblem], returning a new [<code>Trace</code>][genjax.core.Trace], an incremental [<code>Weight</code>][genjax.core.Weight] for the new target, a [<code>Retdiff</code>][genjax.core.Retdiff] return value tagged with change information, and a backward [<code>UpdateProblem</code>][genjax.core.UpdateProblem] which requests the reverse move (to go back to the original trace).</p>\n\n<p>The specification of this interface is parametric over the kind of <code>UpdateProblem</code> -- responding to an <code>UpdateProblem</code> instance requires that the generative function provides an implementation of a sequential Monte Carlo move in the <a href=\"https://proceedings.mlr.press/v206/lew23a.html\">SMCP3</a> framework. Users of inference algorithms are not expected to understand the ingredients, but inference algorithm developers are.</p>\n\n<p>Examples:\n    Updating a trace in response to a request for a [<code>Target</code>][genjax.inference.Target] change induced by a change to the arguments:\n    ```python exec=\"yes\" source=\"material-block\" session=\"core\"\n    from genjax import gen\n    from genjax import normal\n    from genjax import EmptyProblem\n    from genjax import Diff\n    from genjax import ChoiceMapBuilder as C\n    from genjax import UpdateProblemBuilder as U</p>\n\n<pre><code>@gen\ndef model(var):\n    v1 = normal(0.0, 1.0) @ \"v1\"\n    v2 = normal(v1, var) @ \"v2\"\n    return v2\n\n\n# Generating an initial trace properly weighted according\n# to the target induced by the constraint.\nconstraint = C.kw(v2=1.0)\ninitial_tr, w = model.importance(key, constraint, (1.0,))\n\n# Updating the trace to a new target.\nnew_tr, inc_w, retdiff, bwd_prob = model.update(\n    key,\n    initial_tr,\n    U.g(\n        Diff.unknown_change((3.0,)),\n        EmptyProblem(),\n    ),\n)\n</code></pre>\n\n<p><pre><code>\nNow, let's inspect the trace:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n# Inspect the trace, the sampled values should not have changed!\nsample = new_tr.get_sample()\nprint(sample[\"v1\"], sample[\"v2\"])</p>\n\n</code></pre>\n<pre><code>And the return value diff:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n# The return value also should not have changed!\nprint(retdiff.render_html())\n\n</code></pre>\n    <pre><code>\nAs expected, neither have changed -- but the weight is non-zero:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nprint(w)\n</code></pre>\n\n<h2 id=\"mathematical-ingredients-behind-update\">Mathematical ingredients behind update</h2>\n\nThe `update` interface exposes [SMCP3 moves](https://proceedings.mlr.press/v206/lew23a.html). Here, we omit the measure theoretic description, and refer interested readers to [the paper](https://proceedings.mlr.press/v206/lew23a.html). Informally, the ingredients of such a move are:\n\n<ul>\n<li>The previous target $T$.</li>\n<li>The new target $T'$.</li>\n<li>A pair of kernel probabilistic programs, called $K$ and $L$:\n<ul>\n\n<p><li>The K kernel is a kernel probabilistic program which accepts a previous sample $x_{t-1}$ from $T$ as an argument, may sample auxiliary randomness $u_K$, and returns a new sample $x_t$ approximately distributed according to $T'$, along with transformed randomness $u_L$.</li>\n<li>The L kernel is a kernel probabilistic program which accepts the new sample $x_t$, and provides a density evaluator for the auxiliary randomness $u_L$ which K returns, and an inverter $x_t \\mapsto x_{t-1}$ which is _almost everywhere_ the identity function.</li>\n</ul></li>\n</ul></p>\n\n<p>The specification of these ingredients are encapsulated in the type signature of the <code>update</code> interface.</p>\n\n<h2 id=\"understanding-the-update-interface\">Understanding the <code>update</code> interface</h2>\n\n<p>The <code>update</code> interface uses the mathematical ingredients described above to perform probability-aware mutations and incremental [<code>Weight</code>][genjax.core.Weight] computations on [<code>Trace</code>][genjax.core.Trace] instances, which allows Gen to provide automation to support inference agorithms like importance sampling, SMC, MCMC and many more.</p>\n\n<p>An <code>UpdateProblem</code> denotes a function $tr \\mapsto (T, T')$ from traces to a pair of targets (the previous [<code>Target</code>][genjax.inference.Target] $T$, and the final [<code>Target</code>][genjax.inference.Target] $T'$).</p>\n\n<p>Several common types of moves can be requested via the <code>GenericProblem</code> type:</p>\n\n<p>```python exec=\"yes\" source=\"material-block\" session=\"core\"\nfrom genjax import GenericProblem</p>\n\n<p>g = GenericProblem(\n    Diff.unknown_change((1.0,)),  # \"Argdiffs\"\n    EmptyProblem(),  # Subproblem\n)</p>\n\n<pre><code>\nCreating problem instances is also possible using the `UpdateProblemBuilder`:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nfrom genjax import UpdateProblemBuilder as U\n\ng = U.g(\n    Diff.unknown_change((3.0,)),  # \"Argdiffs\"\n    EmptyProblem(),  # Subproblem\n)\nprint(g.render_html())\n</code></pre>\n\n<p><code>GenericProblem</code> contains information about changes to the arguments of the generative function ([<code>Argdiffs</code>][genjax.core.Argdiffs]) and a subproblem which specifies an additional move to be performed. The subproblem can be a bonafide [<code>UpdateProblem</code>][genjax.core.UpdateProblem] itself, or a [<code>Constraint</code>][genjax.core.Constraint] (like [<code>ChoiceMap</code>][genjax.core.ChoiceMap]).</p>\n\n<p><code>python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nnew_tr, inc_w, retdiff, bwd_prob = model.update(\n    key,\n    initial_tr,\n    U.g(Diff.unknown_change((3.0,)), C.kw(v1=3.0)),\n)\nprint((new_tr.get_sample()[\"v1\"], w))\n</code></p>\n\n<p><strong>Additional notes on [<code>Argdiffs</code>][genjax.core.Argdiffs]</strong></p>\n\n<p>Argument changes induce changes to the distribution over samples, internal K and L proposals, and (by virtue of changes to $P$) target distributions. The [<code>Argdiffs</code>][genjax.core.Argdiffs] type denotes the type of values attached with a _change type_, a piece of data which indicates how the value has changed from the arguments which created the trace. Generative functions can utilize change type information to inform efficient [<code>update</code>][genjax.core.GenerativeFunction.update] implementations.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">trace</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span>,</span><span class=\"param\">\t<span class=\"n\">update_problem</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">UpdateProblem</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span><span class=\"p\">,</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Annotated</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Is</span><span class=\"p\">[</span><span class=\"n\">Diff</span><span class=\"o\">.</span><span class=\"n\">static_check_tree_diff</span><span class=\"p\">]],</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">UpdateProblem</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.assess": {"fullname": "b3d.types.GenerativeFunction.assess", "modulename": "b3d.types", "qualname": "GenerativeFunction.assess", "kind": "function", "doc": "<p>Return [the score][genjax.core.Trace.get_score] and [the return value][genjax.core.Trace.get_retval] when the generative function is invoked with the provided arguments, and constrained to take the provided sample as the sampled value.</p>\n\n<p>It is an error if the provided sample value is off the support of the distribution over the <code>Sample</code> type, or otherwise induces a partial constraint on the execution of the generative function (which would require the generative function to provide an <code>update</code> implementation which responds to the <code>UpdateProblem</code> induced by the [<code>importance</code>][genjax.core.GenerativeFunction.importance] interface).</p>\n\n<p>Examples:\n    This method is similar to density evaluation interfaces for distributions.\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    from genjax import normal\n    from genjax import ChoiceMapBuilder as C</p>\n\n<pre><code>sample = C.v(1.0)\nscore, retval = normal.assess(sample, (1.0, 1.0))\nprint((score, retval))\n</code></pre>\n\n<p><pre><code>\nBut it also works with generative functions that sample from spaces with more structure:\n\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nfrom genjax import gen\nfrom genjax import normal\nfrom genjax import ChoiceMapBuilder as C\n\n\n@gen\ndef model():\n    v1 = normal(0.0, 1.0) @ \"v1\"\n    v2 = normal(v1, 1.0) @ \"v2\"\n\n\nsample = C.kw(v1=1.0, v2=0.0)\nscore, retval = model.assess(sample, ())\nprint((score, retval))\n</code></pre></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sample</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Sample</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.importance": {"fullname": "b3d.types.GenerativeFunction.importance", "modulename": "b3d.types", "qualname": "GenerativeFunction.importance", "kind": "function", "doc": "<p>Returns a properly weighted pair, a [<code>Trace</code>][genjax.core.Trace] and a [<code>Weight</code>][genjax.core.Weight], properly weighted for the target induced by the generative function for the provided constraint and arguments.</p>\n\n<p>Examples:\n    (<strong>Full constraints</strong>) A simple example using the <code>importance</code> interface on distributions:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\n    from genjax import normal\n    from genjax import ChoiceMapBuilder as C\n    from jax.random import PRNGKey</p>\n\n<pre><code>key = PRNGKey(0)\n\ntr, w = normal.importance(key, C.v(1.0), (0.0, 1.0))\nprint(tr.get_sample().render_html())\n</code></pre>\n\n<p><pre><code>\n(**Internal proposal for partial constraints**) Specifying a _partial_ constraint on a [`StaticGenerativeFunction`][genjax.StaticGenerativeFunction]:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"core\"\nfrom genjax import flip, uniform, gen\nfrom genjax import ChoiceMapBuilder as C\n\n\n@gen\ndef model():\n    p = uniform(0.0, 1.0) @ \"p\"\n    f1 = flip(p) @ \"f1\"\n    f2 = flip(p) @ \"f2\"\n\n\ntr, w = model.importance(key, C.kw(f1=True, f2=True), ())\nprint(tr.get_sample().render_html())\n</code></pre></p>\n\n<p>Under the hood, creates an [<code>UpdateProblem</code>][genjax.core.UpdateProblem] which requests that the generative function respond with a move from the _empty_ trace (the only possible value for _empty_ target $\\delta_\\emptyset$) to the target induced by the generative function for constraint $C$ with arguments $a$.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">constraint</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Constraint</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Trace</span><span class=\"p\">,</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.propose": {"fullname": "b3d.types.GenerativeFunction.propose", "modulename": "b3d.types", "qualname": "GenerativeFunction.propose", "kind": "function", "doc": "<p>Samples a [<code>Sample</code>][genjax.core.Sample] and any untraced randomness $r$ from the generative function's distribution over samples ($P$), and returns the [<code>Score</code>][genjax.core.Score] of that sample under the distribution, and the [<code>Retval</code>][genjax.core.Retval] of the generative function's return value function $f(r, t, a)$ for the sample and untraced randomness.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&#39;</span><span class=\"p\">],</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">UInt32</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;2&#39;</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Sample</span><span class=\"p\">,</span> <span class=\"n\">jaxtyping</span><span class=\"o\">.</span><span class=\"n\">Float</span><span class=\"p\">[</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"p\">],</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.treescope_color": {"fullname": "b3d.types.GenerativeFunction.treescope_color", "modulename": "b3d.types", "qualname": "GenerativeFunction.treescope_color", "kind": "function", "doc": "<p>Computes a CSS color to display for this object in treescope.</p>\n\n<p>This function can be overridden to change the color for a particular object\nin treescope, without having to register a new handler.</p>\n\n<p>Returns:\n  A CSS color string to use as a background/highlight color for this object.\n  Alternatively, a tuple of (border, fill) CSS colors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.vmap": {"fullname": "b3d.types.GenerativeFunction.vmap", "modulename": "b3d.types", "qualname": "GenerativeFunction.vmap", "kind": "function", "doc": "<p>Returns a [<code>GenerativeFunction</code>][genjax.GenerativeFunction] that performs a vectorized map over the argument specified by <code>in_axes</code>. Traced values are nested under an index, and the retval is vectorized.</p>\n\n<p>Args:\n    in_axes: Selector specifying which input arguments (or index into them) should be vectorized. Defaults to 0, i.e., the first argument. See <a href=\"https://jax.readthedocs.io/en/latest/pytrees.html#applying-optional-parameters-to-pytrees\">this link</a> for more detail.</p>\n\n<p>Returns:\n    A new [<code>GenerativeFunction</code>][genjax.GenerativeFunction] that accepts an argument of one-higher dimension at the position specified by <code>in_axes</code>.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"gen-fn\"\n    import jax\n    import jax.numpy as jnp\n    import genjax</p>\n\n<pre><code>@genjax.gen\ndef model(x):\n    v = genjax.normal(x, 1.0) @ \"v\"\n    return genjax.normal(v, 0.01) @ \"q\"\n\n\nvmapped = model.vmap(in_axes=0)\n\nkey = jax.random.PRNGKey(314159)\narr = jnp.ones(100)\n\n# `vmapped` accepts an array if numbers instead of the original\n# single number that `model` accepted.\ntr = jax.jit(vmapped.simulate)(key, (arr,))\n\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">in_axes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">|</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.repeat": {"fullname": "b3d.types.GenerativeFunction.repeat", "modulename": "b3d.types", "qualname": "GenerativeFunction.repeat", "kind": "function", "doc": "<p>Returns a [<code>genjax.GenerativeFunction</code>][] that samples from <code>self</code> <code>n</code> times, returning a vector of <code>n</code> results.</p>\n\n<p>The values traced by each call <code>gen_fn</code> will be nested under an integer index that matches the loop iteration index that generated it.</p>\n\n<p>This combinator is useful for creating multiple samples from <code>self</code> in a batched manner.</p>\n\n<p>Args:\n    n: The number of times to sample from the generative function.</p>\n\n<p>Returns:\n    A new [<code>genjax.GenerativeFunction</code>][] that samples from the original function <code>n</code> times.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"repeat\"\n    import genjax, jax</p>\n\n<pre><code>@genjax.gen\ndef normal_draw(mean):\n    return genjax.normal(mean, 1.0) @ \"x\"\n\n\nnormal_draws = normal_draw.repeat(n=10)\n\nkey = jax.random.PRNGKey(314159)\n\n# Generate 10 draws from a normal distribution with mean 2.0\ntr = jax.jit(normal_draws.simulate)(key, (2.0,))\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.scan": {"fullname": "b3d.types.GenerativeFunction.scan", "modulename": "b3d.types", "qualname": "GenerativeFunction.scan", "kind": "function", "doc": "<p>When called on a [<code>genjax.GenerativeFunction</code>][] of type <code>(c, a) -&gt; (c, b)</code>, returns a new [<code>genjax.GenerativeFunction</code>][] of type <code>(c, [a]) -&gt; (c, [b])</code> where</p>\n\n<ul>\n<li><code>c</code> is a loop-carried value, which must hold a fixed shape and dtype across all iterations</li>\n<li><code>a</code> may be a primitive, an array type or a pytree (container) type with array leaves</li>\n<li><code>b</code> may be a primitive, an array type or a pytree (container) type with array leaves.</li>\n</ul>\n\n<p>The values traced by each call to the original generative function will be nested under an integer index that matches the loop iteration index that generated it.</p>\n\n<p>For any array type specifier <code>t</code>, <code>[t]</code> represents the type with an additional leading axis, and if <code>t</code> is a pytree (container) type with array leaves then <code>[t]</code> represents the type with the same pytree structure and corresponding leaves each with an additional leading axis.</p>\n\n<p>When the type of <code>xs</code> in the snippet below (denoted <code>[a]</code> above) is an array type or None, and the type of <code>ys</code> in the snippet below (denoted <code>[b]</code> above) is an array type, the semantics of the returned [<code>genjax.GenerativeFunction</code>][] are given roughly by this Python implementation:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">scan</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">xs</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">xs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">length</span>\n    <span class=\"n\">carry</span> <span class=\"o\">=</span> <span class=\"n\">init</span>\n    <span class=\"n\">ys</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">xs</span><span class=\"p\">:</span>\n        <span class=\"n\">carry</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">ys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">carry</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">stack</span><span class=\"p\">(</span><span class=\"n\">ys</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Unlike that Python version, both <code>xs</code> and <code>ys</code> may be arbitrary pytree values, and so multiple arrays can be scanned over at once and produce multiple output arrays. <code>None</code> is actually a special case of this, as it represents an empty pytree.</p>\n\n<p>The loop-carried value <code>c</code> must hold a fixed shape and dtype across all iterations (and not just be consistent up to NumPy rank/shape broadcasting and dtype promotion rules, for example). In other words, the type <code>c</code> in the type signature above represents an array with a fixed shape and dtype (or a nested tuple/list/dict container data structure with a fixed structure and arrays with fixed shape and dtype at the leaves).</p>\n\n<p>Args:\n    n: optional integer specifying the number of loop iterations, which (if supplied) must agree with the sizes of leading axes of the arrays in the returned function's second argument. If supplied then the returned generative function can take <code>None</code> as its second argument.</p>\n\n<pre><code>reverse: optional boolean specifying whether to run the scan iteration forward (the default) or in reverse, equivalent to reversing the leading axes of the arrays in both `xs` and in `ys`.\n\nunroll: optional positive int or bool specifying, in the underlying operation of the scan primitive, how many scan iterations to unroll within a single iteration of a loop. If an integer is provided, it determines how many unrolled loop iterations to run within a single rolled iteration of the loop. If a boolean is provided, it will determine if the loop is competely unrolled (i.e. `unroll=True`) or left completely unrolled (i.e. `unroll=False`).\n</code></pre>\n\n<p>Returns:\n    A new [<code>genjax.GenerativeFunction</code>][] that takes a loop-carried value and a new input, and returns a new loop-carried value along with either <code>None</code> or an output to be collected into the second return value.</p>\n\n<p>Examples:\n    Scan for 1000 iterations with no array input:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\n    import jax\n    import genjax</p>\n\n<pre><code>@genjax.gen\ndef random_walk_step(prev, _):\n    x = genjax.normal(prev, 1.0) @ \"x\"\n    return x, None\n\n\nrandom_walk = random_walk_step.scan(n=1000)\n\ninit = 0.5\nkey = jax.random.PRNGKey(314159)\n\ntr = jax.jit(random_walk.simulate)(key, (init, None))\nprint(tr.render_html())\n</code></pre>\n\n<p><pre><code>\nScan across an input array:\n```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\nimport jax.numpy as jnp\n\n\n@genjax.gen\ndef add_and_square_step(sum, x):\n    new_sum = sum + x\n    return new_sum, sum * sum\n\n\n# notice no `n` parameter supplied:\nadd_and_square_all = add_and_square_step.scan()\ninit = 0.0\nxs = jnp.ones(10)\n\ntr = jax.jit(add_and_square_all.simulate)(key, (init, xs))\n\n# The retval has the final carry and an array of all `sum*sum` returned.\nprint(tr.render_html())\n</code></pre></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reverse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">unroll</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.accumulate": {"fullname": "b3d.types.GenerativeFunction.accumulate", "modulename": "b3d.types", "qualname": "GenerativeFunction.accumulate", "kind": "function", "doc": "<p>When called on a [<code>genjax.GenerativeFunction</code>][] of type <code>(c, a) -&gt; c</code>, returns a new [<code>genjax.GenerativeFunction</code>][] of type <code>(c, [a]) -&gt; [c]</code> where</p>\n\n<ul>\n<li><code>c</code> is a loop-carried value, which must hold a fixed shape and dtype across all iterations</li>\n<li><code>[c]</code> is an array of all loop-carried values seen during iteration (including the first)</li>\n<li><code>a</code> may be a primitive, an array type or a pytree (container) type with array leaves</li>\n</ul>\n\n<p>All traced values are nested under an index.</p>\n\n<p>For any array type specifier <code>t</code>, <code>[t]</code> represents the type with an additional leading axis, and if <code>t</code> is a pytree (container) type with array leaves then <code>[t]</code> represents the type with the same pytree structure and corresponding leaves each with an additional leading axis.</p>\n\n<p>The semantics of the returned [<code>genjax.GenerativeFunction</code>][] are given roughly by this Python implementation (note the similarity to <a href=\"https://docs.python.org/3/library/itertools.html#itertools.accumulate\"><code>itertools.accumulate</code></a>):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">accumulate</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">):</span>\n    <span class=\"n\">carry</span> <span class=\"o\">=</span> <span class=\"n\">init</span>\n    <span class=\"n\">carries</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">init</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">xs</span><span class=\"p\">:</span>\n        <span class=\"n\">carry</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"n\">carries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">carries</span>\n</code></pre>\n</div>\n\n<p>Unlike that Python version, both <code>xs</code> and <code>carries</code> may be arbitrary pytree values, and so multiple arrays can be scanned over at once and produce multiple output arrays.</p>\n\n<p>The loop-carried value <code>c</code> must hold a fixed shape and dtype across all iterations (and not just be consistent up to NumPy rank/shape broadcasting and dtype promotion rules, for example). In other words, the type <code>c</code> in the type signature above represents an array with a fixed shape and dtype (or a nested tuple/list/dict container data structure with a fixed structure and arrays with fixed shape and dtype at the leaves).</p>\n\n<p>Args:\n    reverse: optional boolean specifying whether to run the accumulation forward (the default) or in reverse, equivalent to reversing the leading axes of the arrays in both <code>xs</code> and in <code>carries</code>.</p>\n\n<pre><code>unroll: optional positive int or bool specifying, in the underlying operation of the scan primitive, how many iterations to unroll within a single iteration of a loop. If an integer is provided, it determines how many unrolled loop iterations to run within a single rolled iteration of the loop. If a boolean is provided, it will determine if the loop is competely unrolled (i.e. `unroll=True`) or left completely unrolled (i.e. `unroll=False`).\n</code></pre>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\n    import jax\n    import genjax\n    import jax.numpy as jnp</p>\n\n<pre><code>@genjax.accumulate()\n@genjax.gen\ndef add(sum, x):\n    new_sum = sum + x\n    return new_sum\n\n\ninit = 0.0\nkey = jax.random.PRNGKey(314159)\nxs = jnp.ones(10)\n\ntr = jax.jit(add.simulate)(key, (init, xs))\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">reverse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">unroll</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.reduce": {"fullname": "b3d.types.GenerativeFunction.reduce", "modulename": "b3d.types", "qualname": "GenerativeFunction.reduce", "kind": "function", "doc": "<p>When called on a [<code>genjax.GenerativeFunction</code>][] of type <code>(c, a) -&gt; c</code>, returns a new [<code>genjax.GenerativeFunction</code>][] of type <code>(c, [a]) -&gt; c</code> where</p>\n\n<ul>\n<li><code>c</code> is a loop-carried value, which must hold a fixed shape and dtype across all iterations</li>\n<li><code>a</code> may be a primitive, an array type or a pytree (container) type with array leaves</li>\n</ul>\n\n<p>All traced values are nested under an index.</p>\n\n<p>For any array type specifier <code>t</code>, <code>[t]</code> represents the type with an additional leading axis, and if <code>t</code> is a pytree (container) type with array leaves then <code>[t]</code> represents the type with the same pytree structure and corresponding leaves each with an additional leading axis.</p>\n\n<p>The semantics of the returned [<code>genjax.GenerativeFunction</code>][] are given roughly by this Python implementation (note the similarity to <a href=\"https://docs.python.org/3/library/itertools.html#functools.reduce\"><code>functools.reduce</code></a>):</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">reduce</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"p\">,</span> <span class=\"n\">xs</span><span class=\"p\">):</span>\n    <span class=\"n\">carry</span> <span class=\"o\">=</span> <span class=\"n\">init</span>\n    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">xs</span><span class=\"p\">:</span>\n        <span class=\"n\">carry</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">carry</span>\n</code></pre>\n</div>\n\n<p>Unlike that Python version, both <code>xs</code> and <code>carry</code> may be arbitrary pytree values, and so multiple arrays can be scanned over at once and produce multiple output arrays.</p>\n\n<p>The loop-carried value <code>c</code> must hold a fixed shape and dtype across all iterations (and not just be consistent up to NumPy rank/shape broadcasting and dtype promotion rules, for example). In other words, the type <code>c</code> in the type signature above represents an array with a fixed shape and dtype (or a nested tuple/list/dict container data structure with a fixed structure and arrays with fixed shape and dtype at the leaves).</p>\n\n<p>Args:\n    reverse: optional boolean specifying whether to run the accumulation forward (the default) or in reverse, equivalent to reversing the leading axis of the array <code>xs</code>.</p>\n\n<pre><code>unroll: optional positive int or bool specifying, in the underlying operation of the scan primitive, how many iterations to unroll within a single iteration of a loop. If an integer is provided, it determines how many unrolled loop iterations to run within a single rolled iteration of the loop. If a boolean is provided, it will determine if the loop is competely unrolled (i.e. `unroll=True`) or left completely unrolled (i.e. `unroll=False`).\n</code></pre>\n\n<p>Examples:\n    sum an array of numbers:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\n    import jax\n    import genjax\n    import jax.numpy as jnp</p>\n\n<pre><code>@genjax.reduce()\n@genjax.gen\ndef add(sum, x):\n    new_sum = sum + x\n    return new_sum\n\n\ninit = 0.0\nkey = jax.random.PRNGKey(314159)\nxs = jnp.ones(10)\n\ntr = jax.jit(add.simulate)(key, (init, xs))\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">reverse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">unroll</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.iterate": {"fullname": "b3d.types.GenerativeFunction.iterate", "modulename": "b3d.types", "qualname": "GenerativeFunction.iterate", "kind": "function", "doc": "<p>When called on a [<code>genjax.GenerativeFunction</code>][] of type <code>a -&gt; a</code>, returns a new [<code>genjax.GenerativeFunction</code>][] of type <code>a -&gt; [a]</code> where</p>\n\n<ul>\n<li><code>a</code> is a loop-carried value, which must hold a fixed shape and dtype across all iterations</li>\n<li><code>[a]</code> is an array of all <code>a</code>, <code>f(a)</code>, <code>f(f(a))</code> etc. values seen during iteration.</li>\n</ul>\n\n<p>All traced values are nested under an index.</p>\n\n<p>The semantics of the returned [<code>genjax.GenerativeFunction</code>][] are given roughly by this Python implementation:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">iterate</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"p\">):</span>\n    <span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"n\">init</span>\n    <span class=\"n\">seen</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">init</span><span class=\"p\">]</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"nb\">input</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">)</span>\n        <span class=\"n\">seen</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">seen</span>\n</code></pre>\n</div>\n\n<p><code>init</code> may be an arbitrary pytree value, and so multiple arrays can be iterated over at once and produce multiple output arrays.</p>\n\n<p>The iterated value <code>a</code> must hold a fixed shape and dtype across all iterations (and not just be consistent up to NumPy rank/shape broadcasting and dtype promotion rules, for example). In other words, the type <code>a</code> in the type signature above represents an array with a fixed shape and dtype (or a nested tuple/list/dict container data structure with a fixed structure and arrays with fixed shape and dtype at the leaves).</p>\n\n<p>Args:\n    n: the number of iterations to run.</p>\n\n<pre><code>unroll: optional positive int or bool specifying, in the underlying operation of the scan primitive, how many iterations to unroll within a single iteration of a loop. If an integer is provided, it determines how many unrolled loop iterations to run within a single rolled iteration of the loop. If a boolean is provided, it will determine if the loop is competely unrolled (i.e. `unroll=True`) or left completely unrolled (i.e. `unroll=False`).\n</code></pre>\n\n<p>Examples:\n    iterative addition, returning all intermediate sums:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\n    import jax\n    import genjax</p>\n\n<pre><code>@genjax.iterate(n=100)\n@genjax.gen\ndef inc(x):\n    return x + 1\n\n\ninit = 0.0\nkey = jax.random.PRNGKey(314159)\n\ntr = jax.jit(inc.simulate)(key, (init,))\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">unroll</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.iterate_final": {"fullname": "b3d.types.GenerativeFunction.iterate_final", "modulename": "b3d.types", "qualname": "GenerativeFunction.iterate_final", "kind": "function", "doc": "<p>Returns a decorator that wraps a [<code>genjax.GenerativeFunction</code>][] of type <code>a -&gt; a</code> and returns a new [<code>genjax.GenerativeFunction</code>][] of type <code>a -&gt; a</code> where</p>\n\n<ul>\n<li><code>a</code> is a loop-carried value, which must hold a fixed shape and dtype across all iterations</li>\n<li>the original function is invoked <code>n</code> times with each input coming from the previous invocation's output, so that the new function returns $f^n(a)$</li>\n</ul>\n\n<p>All traced values are nested under an index.</p>\n\n<p>The semantics of the returned [<code>genjax.GenerativeFunction</code>][] are given roughly by this Python implementation:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">iterate_final</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"p\">):</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">init</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">ret</span>\n</code></pre>\n</div>\n\n<p><code>init</code> may be an arbitrary pytree value, and so multiple arrays can be iterated over at once and produce multiple output arrays.</p>\n\n<p>The iterated value <code>a</code> must hold a fixed shape and dtype across all iterations (and not just be consistent up to NumPy rank/shape broadcasting and dtype promotion rules, for example). In other words, the type <code>a</code> in the type signature above represents an array with a fixed shape and dtype (or a nested tuple/list/dict container data structure with a fixed structure and arrays with fixed shape and dtype at the leaves).</p>\n\n<pre><code>Args:\n    n: the number of iterations to run.\n\nunroll: optional positive int or bool specifying, in the underlying operation of the scan primitive, how many iterations to unroll within a single iteration of a loop. If an integer is provided, it determines how many unrolled loop iterations to run within a single rolled iteration of the loop. If a boolean is provided, it will determine if the loop is competely unrolled (i.e. `unroll=True`) or left completely unrolled (i.e. `unroll=False`).\n</code></pre>\n\n<p>Examples:\n    iterative addition:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"scan\"\n    import jax\n    import genjax</p>\n\n<pre><code>@genjax.iterate_final(n=100)\n@genjax.gen\ndef inc(x):\n    return x + 1\n\n\ninit = 0.0\nkey = jax.random.PRNGKey(314159)\n\ntr = jax.jit(inc.simulate)(key, (init,))\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">unroll</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.mask": {"fullname": "b3d.types.GenerativeFunction.mask", "modulename": "b3d.types", "qualname": "GenerativeFunction.mask", "kind": "function", "doc": "<p>Enables dynamic masking of generative functions. Returns a new [<code>genjax.GenerativeFunction</code>][] like <code>self</code>, but which accepts an additional boolean first argument.</p>\n\n<p>If <code>True</code>, the invocation of <code>self</code> is masked, and its contribution to the score is ignored. If <code>False</code>, it has the same semantics as if one was invoking <code>self</code> without masking.</p>\n\n<p>The return value type is a <code>Mask</code>, with a flag value equal to the supplied boolean.</p>\n\n<p>Returns:\n    The masked version of the original [<code>genjax.GenerativeFunction</code>][].</p>\n\n<p>Examples:\n    Masking a normal draw:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"mask\"\n    import genjax, jax</p>\n\n<pre><code>@genjax.gen\ndef normal_draw(mean):\n    return genjax.normal(mean, 1.0) @ \"x\"\n\n\nmasked_normal_draw = normal_draw.mask()\n\nkey = jax.random.PRNGKey(314159)\ntr = jax.jit(masked_normal_draw.simulate)(\n    key,\n    (\n        False,\n        2.0,\n    ),\n)\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.or_else": {"fullname": "b3d.types.GenerativeFunction.or_else", "modulename": "b3d.types", "qualname": "GenerativeFunction.or_else", "kind": "function", "doc": "<p>Returns a [<code>GenerativeFunction</code>][genjax.GenerativeFunction] that accepts</p>\n\n<ul>\n<li>a boolean argument</li>\n<li>an argument tuple for <code>self</code></li>\n<li>an argument tuple for the supplied <code>gen_fn</code></li>\n</ul>\n\n<p>and acts like <code>self</code> when the boolean is <code>True</code> or like <code>gen_fn</code> otherwise.</p>\n\n<p>Args:\n    gen_fn: called when the boolean argument is <code>False</code>.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"gen-fn\"\n    import jax\n    import jax.numpy as jnp\n    import genjax</p>\n\n<pre><code>@genjax.gen\ndef if_model(x):\n    return genjax.normal(x, 1.0) @ \"if_value\"\n\n\n@genjax.gen\ndef else_model(x):\n    return genjax.normal(x, 5.0) @ \"else_value\"\n\n\n@genjax.gen\ndef model(toss: bool):\n    # Note that the returned model takes a new boolean predicate in\n    # addition to argument tuples for each branch.\n    return if_model.or_else(else_model)(toss, (1.0,), (10.0,)) @ \"tossed\"\n\n\nkey = jax.random.PRNGKey(314159)\n\ntr = jax.jit(model.simulate)(key, (True,))\n\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">gen_fn</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.switch": {"fullname": "b3d.types.GenerativeFunction.switch", "modulename": "b3d.types", "qualname": "GenerativeFunction.switch", "kind": "function", "doc": "<p>Given <code>n</code> [<code>genjax.GenerativeFunction</code>][] inputs, returns a new [<code>genjax.GenerativeFunction</code>][] that accepts <code>n+2</code> arguments:</p>\n\n<ul>\n<li>an index in the range $[0, n+1)$</li>\n<li>a tuple of arguments for <code>self</code> and each of the input generative functions (<code>n+1</code> total tuples)</li>\n</ul>\n\n<p>and executes the generative function at the supplied index with its provided arguments.</p>\n\n<p>If <code>index</code> is out of bounds, <code>index</code> is clamped to within bounds.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"switch\"\n    import jax, genjax</p>\n\n<pre><code>@genjax.gen\ndef branch_1():\n    x = genjax.normal(0.0, 1.0) @ \"x1\"\n\n\n@genjax.gen\ndef branch_2():\n    x = genjax.bernoulli(0.3) @ \"x2\"\n\n\nswitch = branch_1.switch(branch_2)\n\nkey = jax.random.PRNGKey(314159)\njitted = jax.jit(switch.simulate)\n\n# Select `branch_2` by providing 1:\ntr = jitted(key, (1, (), ()))\n\nprint(tr.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">branches</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.mix": {"fullname": "b3d.types.GenerativeFunction.mix", "modulename": "b3d.types", "qualname": "GenerativeFunction.mix", "kind": "function", "doc": "<p>Takes any number of [<code>genjax.GenerativeFunction</code>][]s and returns a new [<code>genjax.GenerativeFunction</code>][] that represents a mixture model.</p>\n\n<p>The returned generative function takes the following arguments:</p>\n\n<ul>\n<li><code>mixture_logits</code>: Logits for the categorical distribution used to select a component.</li>\n<li><code>*args</code>: Argument tuples for <code>self</code> and each of the input generative functions</li>\n</ul>\n\n<p>and samples from <code>self</code> or one of the input generative functions based on a draw from a categorical distribution defined by the provided mixture logits.</p>\n\n<p>Args:\n    *fns: Variable number of [<code>genjax.GenerativeFunction</code>][]s to be mixed with <code>self</code>.</p>\n\n<p>Returns:\n    A new [<code>genjax.GenerativeFunction</code>][] representing the mixture model.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"mix\"\n    import jax\n    import genjax</p>\n\n<pre><code># Define component generative functions\n@genjax.gen\ndef component1(x):\n    return genjax.normal(x, 1.0) @ \"y\"\n\n\n@genjax.gen\ndef component2(x):\n    return genjax.normal(x, 2.0) @ \"y\"\n\n\n# Create mixture model\nmixture = component1.mix(component2)\n\n# Use the mixture model\nkey = jax.random.PRNGKey(0)\nlogits = jax.numpy.array([0.3, 0.7])  # Favors component2\ntrace = mixture.simulate(key, (logits, (0.0,), (7.0,)))\nprint(trace.render_html())\n    ```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">fns</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.dimap": {"fullname": "b3d.types.GenerativeFunction.dimap", "modulename": "b3d.types", "qualname": "GenerativeFunction.dimap", "kind": "function", "doc": "<p>Returns a new [<code>genjax.GenerativeFunction</code>][] and applies pre- and post-processing functions to its arguments and return value.</p>\n\n<p>!!! info\n    Prefer [<code>genjax.GenerativeFunction.map</code>][] if you only need to transform the return value, or [<code>genjax.GenerativeFunction.contramap</code>][] if you only need to transform the arguments.</p>\n\n<p>Args:\n    pre: A callable that preprocesses the arguments before passing them to the wrapped function. Note that <code>pre</code> must return a _tuple_ of arguments, not a bare argument. Default is the identity function.\n    post: A callable that postprocesses the return value of the wrapped function. Default is the identity function.\n    info: An optional string providing additional information about the <code>dimap</code> operation.</p>\n\n<p>Returns:\n    A new [<code>genjax.GenerativeFunction</code>][] with <code>pre</code> and <code>post</code> applied.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"dimap\"\n    import jax, genjax</p>\n\n<pre><code># Define pre- and post-processing functions\ndef pre_process(x, y):\n    return (x + 1, y * 2)\n\n\ndef post_process(args, retval):\n    return retval**2\n\n\n@genjax.gen\ndef model(x, y):\n    return genjax.normal(x, y) @ \"z\"\n\n\ndimap_model = model.dimap(\n    pre=pre_process, post=post_process, info=\"Square of normal\"\n)\n\n# Use the dimap model\nkey = jax.random.PRNGKey(0)\ntrace = dimap_model.simulate(key, (2.0, 3.0))\n\nprint(trace.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">pre</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">ArgTuple</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">post</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">ArgTuple</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.map": {"fullname": "b3d.types.GenerativeFunction.map", "modulename": "b3d.types", "qualname": "GenerativeFunction.map", "kind": "function", "doc": "<p>Specialized version of [<code>genjax.dimap</code>][] where only the post-processing function is applied.</p>\n\n<p>Args:\n    f: A callable that postprocesses the return value of the wrapped function.\n    info: An optional string providing additional information about the <code>map</code> operation.</p>\n\n<p>Returns:\n    A [<code>genjax.GenerativeFunction</code>][] that acts like <code>self</code> with a post-processing function to its return value.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"map\"\n    import jax, genjax</p>\n\n<pre><code># Define a post-processing function\ndef square(x):\n    return x**2\n\n\n@genjax.gen\ndef model(x):\n    return genjax.normal(x, 1.0) @ \"z\"\n\n\nmap_model = model.map(square, info=\"Square of normal\")\n\n# Use the map model\nkey = jax.random.PRNGKey(0)\ntrace = map_model.simulate(key, (2.0,))\n\nprint(trace.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.contramap": {"fullname": "b3d.types.GenerativeFunction.contramap", "modulename": "b3d.types", "qualname": "GenerativeFunction.contramap", "kind": "function", "doc": "<p>Specialized version of [<code>genjax.GenerativeFunction.dimap</code>][] where only the pre-processing function is applied.</p>\n\n<p>Args:\n    f: A callable that preprocesses the arguments of the wrapped function. Note that <code>f</code> must return a _tuple_ of arguments, not a bare argument.\n    info: An optional string providing additional information about the <code>contramap</code> operation.</p>\n\n<p>Returns:\n    A [<code>genjax.GenerativeFunction</code>][] that acts like <code>self</code> with a pre-processing function to its arguments.</p>\n\n<p>Examples:\n    ```python exec=\"yes\" html=\"true\" source=\"material-block\" session=\"contramap\"\n    import jax, genjax</p>\n\n<pre><code># Define a pre-processing function.\n# Note that this function must return a tuple of arguments!\ndef add_one(x):\n    return (x + 1,)\n\n\n@genjax.gen\ndef model(x):\n    return genjax.normal(x, 1.0) @ \"z\"\n\n\ncontramap_model = model.contramap(add_one, info=\"Add one to input\")\n\n# Use the contramap model\nkey = jax.random.PRNGKey(0)\ntrace = contramap_model.simulate(key, (2.0,))\n\nprint(trace.render_html())\n```\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">ArgTuple</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.marginal": {"fullname": "b3d.types.GenerativeFunction.marginal", "modulename": "b3d.types", "qualname": "GenerativeFunction.marginal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">GenerativeFunction</span>:</span></span>", "funcdef": "def"}, "b3d.types.GenerativeFunction.target": {"fullname": "b3d.types.GenerativeFunction.target", "modulename": "b3d.types", "qualname": "GenerativeFunction.target", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">/</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">constraint</span><span class=\"p\">:</span> <span class=\"n\">genjax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">generative</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Constraint</span>,</span><span class=\"param\">\t<span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.types.NamedArgs": {"fullname": "b3d.types.NamedArgs", "modulename": "b3d.types", "qualname": "NamedArgs", "kind": "class", "doc": "<p></p>\n"}, "b3d.types.NamedArgs.__init__": {"fullname": "b3d.types.NamedArgs.__init__", "modulename": "b3d.types", "qualname": "NamedArgs.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "b3d.types.NamedArgs.tree_flatten": {"fullname": "b3d.types.NamedArgs.tree_flatten", "modulename": "b3d.types", "qualname": "NamedArgs.tree_flatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.types.NamedArgs.tree_unflatten": {"fullname": "b3d.types.NamedArgs.tree_unflatten", "modulename": "b3d.types", "qualname": "NamedArgs.tree_unflatten", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">aux_data</span>, </span><span class=\"param\"><span class=\"n\">children</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils": {"fullname": "b3d.utils", "modulename": "b3d.utils", "kind": "module", "doc": "<p></p>\n"}, "b3d.utils.get_root_path": {"fullname": "b3d.utils.get_root_path", "modulename": "b3d.utils", "qualname": "get_root_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, "b3d.utils.get_assets": {"fullname": "b3d.utils.get_assets", "modulename": "b3d.utils", "qualname": "get_assets", "kind": "function", "doc": "<p>The absolute path of the assets directory on current machine</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, "b3d.utils.get_assets_path": {"fullname": "b3d.utils.get_assets_path", "modulename": "b3d.utils", "qualname": "get_assets_path", "kind": "function", "doc": "<p>The absolute path of the assets directory on current machine</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, "b3d.utils.make_assets_path": {"fullname": "b3d.utils.make_assets_path", "modulename": "b3d.utils", "qualname": "make_assets_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">subpath</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.get_shared": {"fullname": "b3d.utils.get_shared", "modulename": "b3d.utils", "qualname": "get_shared", "kind": "function", "doc": "<p>The absolute path of the assets directory on current machine</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span>:</span></span>", "funcdef": "def"}, "b3d.utils.get_gcloud_bucket_ref": {"fullname": "b3d.utils.get_gcloud_bucket_ref", "modulename": "b3d.utils", "qualname": "get_gcloud_bucket_ref", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "b3d.utils.keysplit": {"fullname": "b3d.utils.keysplit", "modulename": "b3d.utils", "qualname": "keysplit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">ns</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.split_key": {"fullname": "b3d.utils.split_key", "modulename": "b3d.utils", "qualname": "split_key", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.resize_image_nearest": {"fullname": "b3d.utils.resize_image_nearest", "modulename": "b3d.utils", "qualname": "resize_image_nearest", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.resize_image_nearest_vmap": {"fullname": "b3d.utils.resize_image_nearest_vmap", "modulename": "b3d.utils", "qualname": "resize_image_nearest_vmap", "kind": "function", "doc": "<p>Vectorized version of resize_image_nearest. Takes similar arguments as resize_image_nearest but with additional array axes over which resize_image_nearest is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.resize_image_linear": {"fullname": "b3d.utils.resize_image_linear", "modulename": "b3d.utils", "qualname": "resize_image_linear", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.resize_image_linear_vmap": {"fullname": "b3d.utils.resize_image_linear_vmap", "modulename": "b3d.utils", "qualname": "resize_image_linear_vmap", "kind": "function", "doc": "<p>Vectorized version of resize_image_linear. Takes similar arguments as resize_image_linear but with additional array axes over which resize_image_linear is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">width</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.clip_rgb": {"fullname": "b3d.utils.clip_rgb", "modulename": "b3d.utils", "qualname": "clip_rgb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.downsize_images": {"fullname": "b3d.utils.downsize_images", "modulename": "b3d.utils", "qualname": "downsize_images", "kind": "function", "doc": "<p>Downsize an array of images by a given factor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ims</span>, </span><span class=\"param\"><span class=\"n\">k</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.xyz_from_depth": {"fullname": "b3d.utils.xyz_from_depth", "modulename": "b3d.utils", "qualname": "xyz_from_depth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">rerun</span><span class=\"o\">.</span><span class=\"n\">archetypes</span><span class=\"o\">.</span><span class=\"n\">depth_image</span><span class=\"o\">.</span><span class=\"n\">DepthImage</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.xyz_from_depth_vectorized": {"fullname": "b3d.utils.xyz_from_depth_vectorized", "modulename": "b3d.utils", "qualname": "xyz_from_depth_vectorized", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">rerun</span><span class=\"o\">.</span><span class=\"n\">archetypes</span><span class=\"o\">.</span><span class=\"n\">depth_image</span><span class=\"o\">.</span><span class=\"n\">DepthImage</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.xyz_to_pixel_coordinates": {"fullname": "b3d.utils.xyz_to_pixel_coordinates", "modulename": "b3d.utils", "qualname": "xyz_to_pixel_coordinates", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">xyz</span>, </span><span class=\"param\"><span class=\"n\">fx</span>, </span><span class=\"param\"><span class=\"n\">fy</span>, </span><span class=\"param\"><span class=\"n\">cx</span>, </span><span class=\"param\"><span class=\"n\">cy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.segment_point_cloud": {"fullname": "b3d.utils.segment_point_cloud", "modulename": "b3d.utils", "qualname": "segment_point_cloud", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">point_cloud</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.01</span>, </span><span class=\"param\"><span class=\"n\">min_points_in_cluster</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.aabb": {"fullname": "b3d.utils.aabb", "modulename": "b3d.utils", "qualname": "aabb", "kind": "function", "doc": "<p>Returns the axis aligned bounding box of a point cloud.\nArgs:\n    object_points: (N,3) point cloud\nReturns:\n    dims: (3,) dimensions of the bounding box\n    pose: (4,4) pose of the bounding box</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">object_points</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.pad_with_1": {"fullname": "b3d.utils.pad_with_1", "modulename": "b3d.utils", "qualname": "pad_with_1", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"fullname": "b3d.utils.make_mesh_from_point_cloud_and_resolution", "modulename": "b3d.utils", "qualname": "make_mesh_from_point_cloud_and_resolution", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">grid_centers</span>, </span><span class=\"param\"><span class=\"n\">grid_colors</span>, </span><span class=\"param\"><span class=\"n\">resolutions</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"fullname": "b3d.utils.get_vertices_faces_colors_from_mesh", "modulename": "b3d.utils", "qualname": "get_vertices_faces_colors_from_mesh", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.get_rgb_pil_image": {"fullname": "b3d.utils.get_rgb_pil_image", "modulename": "b3d.utils", "qualname": "get_rgb_pil_image", "kind": "function", "doc": "<p>Convert an RGB image to a PIL image.</p>\n\n<p>Args:\n    image (np.ndarray): RGB image. Shape (H, W, 3).\n    max (float): Maximum value for colormap.\nReturns:\n    PIL.Image: RGB image visualized as a PIL image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.viz_rgb": {"fullname": "b3d.utils.viz_rgb", "modulename": "b3d.utils", "qualname": "viz_rgb", "kind": "function", "doc": "<p>Convert an RGB image to a PIL image.</p>\n\n<p>Args:\n    image (np.ndarray): RGB image. Shape (H, W, 3).\n    max (float): Maximum value for colormap.\nReturns:\n    PIL.Image: RGB image visualized as a PIL image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"nb\">max</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.overlay_image": {"fullname": "b3d.utils.overlay_image", "modulename": "b3d.utils", "qualname": "overlay_image", "kind": "function", "doc": "<p>Overlay two images.</p>\n\n<p>Args:\n    img_1 (PIL.Image): First image.\n    img_2 (PIL.Image): Second image.\n    alpha (float): Alpha value for blending.\nReturns:\n    PIL.Image: Overlayed image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">img_1</span>, </span><span class=\"param\"><span class=\"n\">img_2</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.make_gif_from_pil_images": {"fullname": "b3d.utils.make_gif_from_pil_images", "modulename": "b3d.utils", "qualname": "make_gif_from_pil_images", "kind": "function", "doc": "<p>Save a list of PIL images as a GIF.</p>\n\n<p>Args:\n    images (list): List of PIL images.\n    filename (str): Filename to save GIF to.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">images</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.make_video_from_pil_images": {"fullname": "b3d.utils.make_video_from_pil_images", "modulename": "b3d.utils", "qualname": "make_video_from_pil_images", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">images</span>, </span><span class=\"param\"><span class=\"n\">output_filename</span>, </span><span class=\"param\"><span class=\"n\">fps</span><span class=\"o\">=</span><span class=\"mf\">5.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.vstack_images": {"fullname": "b3d.utils.vstack_images", "modulename": "b3d.utils", "qualname": "vstack_images", "kind": "function", "doc": "<p>Stack images vertically.</p>\n\n<p>Args:\n    images (list): List of PIL images.\n    border (int): Border between images.\nReturns:\n    PIL.Image: Stacked image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">images</span>, </span><span class=\"param\"><span class=\"n\">border</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.hstack_images": {"fullname": "b3d.utils.hstack_images", "modulename": "b3d.utils", "qualname": "hstack_images", "kind": "function", "doc": "<p>Stack images horizontally.</p>\n\n<p>Args:\n    images (list): List of PIL images.\n    border (int): Border between images.\nReturns:\n    PIL.Image: Stacked image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">images</span>, </span><span class=\"param\"><span class=\"n\">border</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.multi_panel": {"fullname": "b3d.utils.multi_panel", "modulename": "b3d.utils", "qualname": "multi_panel", "kind": "function", "doc": "<p>Combine multiple images into a single image.</p>\n\n<p>Args:\n    images (list): List of PIL images.\n    labels (list): List of labels for each image.\n    title (str): Title for image.\n    bottom_text (str): Text for bottom of image.\n    title_fontsize (int): Font size for title.\n    label_fontsize (int): Font size for labels.\n    bottom_fontsize (int): Font size for bottom text.\n    middle_width (int): Width of border between images.\nReturns:\n    PIL.Image: Combined image.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">images</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bottom_text</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title_fontsize</span><span class=\"o\">=</span><span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">label_fontsize</span><span class=\"o\">=</span><span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">bottom_fontsize</span><span class=\"o\">=</span><span class=\"mi\">20</span>,</span><span class=\"param\">\t<span class=\"n\">middle_width</span><span class=\"o\">=</span><span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.make_onehot": {"fullname": "b3d.utils.make_onehot", "modulename": "b3d.utils", "qualname": "make_onehot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n</span>, </span><span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">hot</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"n\">cold</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.multivmap": {"fullname": "b3d.utils.multivmap", "modulename": "b3d.utils", "qualname": "multivmap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">args</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.update_choices": {"fullname": "b3d.utils.update_choices", "modulename": "b3d.utils", "qualname": "update_choices", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addresses</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.update_choices_get_score": {"fullname": "b3d.utils.update_choices_get_score", "modulename": "b3d.utils", "qualname": "update_choices_get_score", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.enumerate_choices": {"fullname": "b3d.utils.enumerate_choices", "modulename": "b3d.utils", "qualname": "enumerate_choices", "kind": "function", "doc": "<p>Vectorized version of update_choices. Takes similar arguments as update_choices but with additional array axes over which update_choices is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addresses</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.enumerate_choices_get_scores": {"fullname": "b3d.utils.enumerate_choices_get_scores", "modulename": "b3d.utils", "qualname": "enumerate_choices_get_scores", "kind": "function", "doc": "<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.grid1": {"fullname": "b3d.utils.grid1", "modulename": "b3d.utils", "qualname": "grid1", "kind": "function", "doc": "<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.grid2": {"fullname": "b3d.utils.grid2", "modulename": "b3d.utils", "qualname": "grid2", "kind": "function", "doc": "<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.grid3": {"fullname": "b3d.utils.grid3", "modulename": "b3d.utils", "qualname": "grid3", "kind": "function", "doc": "<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.grid4": {"fullname": "b3d.utils.grid4", "modulename": "b3d.utils", "qualname": "grid4", "kind": "function", "doc": "<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n\n<p>Original documentation:</p>\n\n<p>Vectorized version of update_choices_get_score. Takes similar arguments as update_choices_get_score but with additional array axes over which update_choices_get_score is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addr_const</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.grid_trace": {"fullname": "b3d.utils.grid_trace", "modulename": "b3d.utils", "qualname": "grid_trace", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trace</span>, </span><span class=\"param\"><span class=\"n\">addresses_const</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.nn_background_segmentation": {"fullname": "b3d.utils.nn_background_segmentation", "modulename": "b3d.utils", "qualname": "nn_background_segmentation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">images</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_pose": {"fullname": "b3d.utils.rr_log_pose", "modulename": "b3d.utils", "qualname": "rr_log_pose", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">channel</span>, </span><span class=\"param\"><span class=\"n\">pose</span>, </span><span class=\"param\"><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_init": {"fullname": "b3d.utils.rr_init", "modulename": "b3d.utils", "qualname": "rr_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;demo&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_rgb": {"fullname": "b3d.utils.rr_log_rgb", "modulename": "b3d.utils", "qualname": "rr_log_rgb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb</span>, </span><span class=\"param\"><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;rgb&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_depth": {"fullname": "b3d.utils.rr_log_depth", "modulename": "b3d.utils", "qualname": "rr_log_depth", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">depth</span>, </span><span class=\"param\"><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;depth&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_mask": {"fullname": "b3d.utils.rr_log_mask", "modulename": "b3d.utils", "qualname": "rr_log_mask", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mask</span>, </span><span class=\"param\"><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;mask&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_rgbd": {"fullname": "b3d.utils.rr_log_rgbd", "modulename": "b3d.utils", "qualname": "rr_log_rgbd", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgbd</span>, </span><span class=\"param\"><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;rgbd&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_log_cloud": {"fullname": "b3d.utils.rr_log_cloud", "modulename": "b3d.utils", "qualname": "rr_log_cloud", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cloud</span>, </span><span class=\"param\"><span class=\"n\">channel</span><span class=\"o\">=</span><span class=\"s1\">&#39;cloud&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.rr_set_time": {"fullname": "b3d.utils.rr_set_time", "modulename": "b3d.utils", "qualname": "rr_set_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.reload": {"fullname": "b3d.utils.reload", "modulename": "b3d.utils", "qualname": "reload", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.normalize_log_scores": {"fullname": "b3d.utils.normalize_log_scores", "modulename": "b3d.utils", "qualname": "normalize_log_scores", "kind": "function", "doc": "<p>Normalizes log scores.\nArgs:\n    log_p: (N,) log scores\nReturns:\n    log_p_normalized: (N,) normalized log scores</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log_p</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.Array": {"fullname": "b3d.utils.Array", "modulename": "b3d.utils", "qualname": "Array", "kind": "class", "doc": "<p>Array base class for JAX</p>\n\n<p><code>jax.Array</code> is the public interface for instance checks and type annotation\nof JAX arrays and tracers. Its main applications are in instance checks and\ntype annotations; for example::</p>\n\n<p>x = jnp.arange(5)\n  isinstance(x, jax.Array)  # returns True both inside and outside traced functions.</p>\n\n<p>def f(x: Array) -> Array:  # type annotations are valid for traced and non-traced types.\n    return x</p>\n\n<p><code>jax.Array</code> should not be used directly for creation of arrays; instead you\nshould use array creation routines offered in <code>jax.numpy</code>, such as\n<code>jax.numpy.array()</code>, <code>jax.numpy.zeros()</code>, <code>jax.numpy.ones()</code>,\n<code>jax.numpy.full()</code>, <code>jax.numpy.arange()</code>, etc.</p>\n", "bases": "abc.ABC"}, "b3d.utils.Array.dtype": {"fullname": "b3d.utils.Array.dtype", "modulename": "b3d.utils", "qualname": "Array.dtype", "kind": "variable", "doc": "<p>The data type (<code>numpy.dtype</code>) of the array.</p>\n", "annotation": ": numpy.dtype"}, "b3d.utils.Array.ndim": {"fullname": "b3d.utils.Array.ndim", "modulename": "b3d.utils", "qualname": "Array.ndim", "kind": "variable", "doc": "<p>The number of dimensions in the array.</p>\n", "annotation": ": int"}, "b3d.utils.Array.size": {"fullname": "b3d.utils.Array.size", "modulename": "b3d.utils", "qualname": "Array.size", "kind": "variable", "doc": "<p>The total number of elements in the array.</p>\n", "annotation": ": int"}, "b3d.utils.Array.shape": {"fullname": "b3d.utils.Array.shape", "modulename": "b3d.utils", "qualname": "Array.shape", "kind": "variable", "doc": "<p>The shape of the array.</p>\n", "annotation": ": tuple[int, ...]"}, "b3d.utils.Array.addressable_data": {"fullname": "b3d.utils.Array.addressable_data", "modulename": "b3d.utils", "qualname": "Array.addressable_data", "kind": "function", "doc": "<p>Return an array of the addressable data at a particular index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.addressable_shards": {"fullname": "b3d.utils.Array.addressable_shards", "modulename": "b3d.utils", "qualname": "Array.addressable_shards", "kind": "variable", "doc": "<p>List of addressable shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.utils.Array.global_shards": {"fullname": "b3d.utils.Array.global_shards", "modulename": "b3d.utils", "qualname": "Array.global_shards", "kind": "variable", "doc": "<p>List of global shards.</p>\n", "annotation": ": collections.abc.Sequence[typing.Any]"}, "b3d.utils.Array.is_fully_addressable": {"fullname": "b3d.utils.Array.is_fully_addressable", "modulename": "b3d.utils", "qualname": "Array.is_fully_addressable", "kind": "variable", "doc": "<p>Is this Array fully addressable?</p>\n\n<p>A jax.Array is fully addressable if the current process can address all of\nthe devices named in the <code>Sharding</code>. <code>is_fully_addressable</code> is\nequivalent to \"is_local\" in multi-process JAX.</p>\n\n<p>Note that fully replicated is not equal to fully addressable i.e.\na jax.Array which is fully replicated can span across multiple hosts and is\nnot fully addressable.</p>\n", "annotation": ": bool"}, "b3d.utils.Array.is_fully_replicated": {"fullname": "b3d.utils.Array.is_fully_replicated", "modulename": "b3d.utils", "qualname": "Array.is_fully_replicated", "kind": "variable", "doc": "<p>Is this Array fully replicated?</p>\n", "annotation": ": bool"}, "b3d.utils.Array.sharding": {"fullname": "b3d.utils.Array.sharding", "modulename": "b3d.utils", "qualname": "Array.sharding", "kind": "variable", "doc": "<p>The sharding for the array.</p>\n", "annotation": ": Any"}, "b3d.utils.Array.all": {"fullname": "b3d.utils.Array.all", "modulename": "b3d.utils", "qualname": "Array.all", "kind": "function", "doc": "<p>Test whether all array elements along a given axis evaluate to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.all()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical AND reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical AND over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `all` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for all <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>all : ndarray, bool\n    A new boolean or array is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.any": {"fullname": "b3d.utils.Array.any", "modulename": "b3d.utils", "qualname": "Array.any", "kind": "function", "doc": "<p>Test whether any array element along a given axis evaluates to True.</p>\n\n<p>LAX-backend implementation of <code>numpy.any()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns single boolean if <code>axis</code> is <code>None</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array or object that can be converted to an array.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a logical OR reduction is performed.\n    The default (<code>axis=None</code>) is to perform a logical OR over all\n    the dimensions of the input array. <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `any` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in checking for any <code>True</code> values.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>any : bool or ndarray\n    A new boolean or <code>ndarray</code> is returned unless <code>out</code> is specified,\n    in which case a reference to <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.argmax": {"fullname": "b3d.utils.Array.argmax", "modulename": "b3d.utils", "qualname": "Array.argmax", "kind": "function", "doc": "<p>Returns the indices of the maximum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmax()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.argmin": {"fullname": "b3d.utils.Array.argmin", "modulename": "b3d.utils", "qualname": "Array.argmin", "kind": "function", "doc": "<p>Returns the indices of the minimum values along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.argmin()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    By default, the index is into the flattened array, otherwise\n    along the specified axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray of ints\n    Array of indices into the array. It has the same shape as <code>a.shape</code>\n    with the dimension along <code>axis</code> removed. If <code>keepdims</code> is set to True,\n    then the size of <code>axis</code> will be 1 with the resulting array having same\n    shape as <code>a.shape</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.argpartition": {"fullname": "b3d.utils.Array.argpartition", "modulename": "b3d.utils", "qualname": "Array.argpartition", "kind": "function", "doc": "<p>Perform an indirect partition along the given axis using the</p>\n\n<p>LAX-backend implementation of <code>numpy.argpartition()</code>.</p>\n\n<p>The JAX version requires the <code>kth</code> argument to be a static integer rather than\na general array. This is implemented via two calls to <code>jax.lax.top_k()</code>. If\nyou're only accessing the top or bottom k values of the output, it may be more\nefficient to call <code>jax.lax.top_k()</code> directly.</p>\n\n<p>The JAX version differs from the NumPy version in the treatment of NaN entries;\nNaNs which have the negative bit set are sorted to the beginning of the array.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>algorithm specified by the <code>kind</code> keyword. It returns an array of\nindices of the same shape as <code>a</code> that index data along the given\naxis in partitioned order.</p>\n\n<p><em>New in version 1.8.0.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\nkth : int or sequence of ints\n    Element index to partition by. The k-th element will be in its\n    final sorted position and all smaller elements will be moved\n    before it and all larger elements behind it. The order of all\n    elements in the partitions is undefined. If provided with a\n    sequence of k-th it will partition all of them into their sorted\n    position at once.</p>\n\n<pre><code>*Deprecated since version 1.22.0:*\nPassing booleans as index is deprecated.\n</code></pre>\n\n<p>axis : int or None, optional\n    Axis along which to sort. The default is -1 (the last axis). If\n    None, the flattened array is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that partition <code>a</code> along the specified axis.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a partitioned <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the partitioned <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">kth</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.argsort": {"fullname": "b3d.utils.Array.argsort", "modulename": "b3d.utils", "qualname": "Array.argsort", "kind": "function", "doc": "<p>Returns the indices that would sort an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.argsort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Perform an indirect sort along the given axis using the algorithm specified\nby the <code>kind</code> keyword. It returns an array of indices of the same shape as\n<code>a</code> that index data along the given axis in sorted order.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to sort.\naxis : int or None, optional\n    Axis along which to sort.  The default is -1 (the last axis). If None,\n    the flattened array is used.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>index_array : ndarray, int\n    Array of indices that sort <code>a</code> along the specified <code>axis</code>.\n    If <code>a</code> is one-dimensional, <code>a[index_array]</code> yields a sorted <code>a</code>.\n    More generally, <code>np.take_along_axis(a, index_array, axis=axis)</code>\n    always yields the sorted <code>a</code>, irrespective of dimensionality.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.astype": {"fullname": "b3d.utils.Array.astype", "modulename": "b3d.utils", "qualname": "Array.astype", "kind": "function", "doc": "<p>Copy the array and cast to a specified dtype.</p>\n\n<p>This is implemented via <code>jax.lax.convert_element_type()</code>, which may\nhave slightly different behavior than <code>numpy.ndarray.astype()</code> in\nsome cases. In particular, the details of float-to-int and int-to-float\ncasts are implementation dependent.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">copy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Device</span> <span class=\"o\">|</span> <span class=\"n\">jaxlib</span><span class=\"o\">.</span><span class=\"n\">xla_extension</span><span class=\"o\">.</span><span class=\"n\">Sharding</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.choose": {"fullname": "b3d.utils.Array.choose", "modulename": "b3d.utils", "qualname": "Array.choose", "kind": "function", "doc": "<p>Construct an array from an index array and a list of arrays to choose from.</p>\n\n<p>LAX-backend implementation of <code>numpy.choose()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>First of all, if confused or uncertain, definitely look at the Examples -\nin its full generality, this function is less simple than it might\nseem from the following code description (below ndi =\n<code>numpy.lib.index_tricks</code>):</p>\n\n<p><code>np.choose(a,c) == np.array([c[a[I]][I] for I in ndi.ndindex(a.shape)])</code>.</p>\n\n<p>But this omits some subtleties.  Here is a fully general summary:</p>\n\n<p>Given an \"index\" array (<code>a</code>) of integers and a sequence of <code>n</code> arrays\n(<code>choices</code>), <code>a</code> and each choice array are first broadcast, as necessary,\nto arrays of a common shape; calling these <em>Ba</em> and <em>Bchoices[i], i =\n0,...,n-1</em> we have that, necessarily, <code>Ba.shape == Bchoices[i].shape</code>\nfor each <code>i</code>.  Then, a new array with shape <code>Ba.shape</code> is created as\nfollows:</p>\n\n<ul>\n<li><p>if <code>mode='raise'</code> (the default), then, first of all, each element of\n<code>a</code> (and thus <code>Ba</code>) must be in the range <code>[0, n-1]</code>; now, suppose\nthat <code>i</code> (in that range) is the value at the <code>(j0, j1, ..., jm)</code>\nposition in <code>Ba</code> - then the value at the same position in the new array\nis the value in <code>Bchoices[i]</code> at that same position;</p></li>\n<li><p>if <code>mode='wrap'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; modular arithmetic is used to map integers outside the range\n<code>[0, n-1]</code> back into that range; and then the new array is constructed\nas above;</p></li>\n<li><p>if <code>mode='clip'</code>, values in <code>a</code> (and thus <code>Ba</code>) may be any (signed)\ninteger; negative integers are mapped to 0; values greater than <code>n-1</code>\nare mapped to <code>n-1</code>; and then the new array is constructed as above.</p></li>\n</ul>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : int array\n    This array must contain integers in <code>[0, n-1]</code>, where <code>n</code> is the\n    number of choices, unless <code>mode=wrap</code> or <code>mode=clip</code>, in which\n    cases any integers are permissible.\nchoices : sequence of arrays\n    Choice arrays. <code>a</code> and all of the choices must be broadcastable to the\n    same shape.  If <code>choices</code> is itself an array (not recommended), then\n    its outermost dimension (i.e., the one corresponding to\n    <code>choices.shape[0]</code>) is taken as defining the \"sequence\".\nmode : {'raise' (default), 'wrap', 'clip'}, optional\n    Specifies how indices outside <code>[0, n-1]</code> will be treated:</p>\n\n<pre><code>  * 'raise' : an exception is raised\n  * 'wrap' : value becomes value mod ``n``\n  * 'clip' : values &lt; 0 are mapped to 0, values &gt; n-1 are mapped to n-1\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>merged_array : array\n    The merged result.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">choices</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;raise&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.clip": {"fullname": "b3d.utils.Array.clip", "modulename": "b3d.utils", "qualname": "Array.clip", "kind": "function", "doc": "<p>Return an array whose values are limited to a specified range.</p>\n\n<p>Refer to <code>jax.numpy.clip()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">number</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.conj": {"fullname": "b3d.utils.Array.conj", "modulename": "b3d.utils", "qualname": "Array.conj", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.conjugate": {"fullname": "b3d.utils.Array.conjugate", "modulename": "b3d.utils", "qualname": "Array.conjugate", "kind": "function", "doc": "<p>Return the complex conjugate, element-wise.</p>\n\n<p>LAX-backend implementation of <code>numpy.conjugate()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The complex conjugate of a complex number is obtained by changing the\nsign of its imaginary part.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>x : array_like\n    Input value.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>y : ndarray\n    The complex conjugate of <code>x</code>, with same dtype as <code>y</code>.\n    This is a scalar if <code>x</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">/</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.compress": {"fullname": "b3d.utils.Array.compress", "modulename": "b3d.utils", "qualname": "Array.compress", "kind": "function", "doc": "<p>Return selected slices of this array along given axis.</p>\n\n<p>Refer to <code>jax.numpy.compress()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">condition</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.copy": {"fullname": "b3d.utils.Array.copy", "modulename": "b3d.utils", "qualname": "Array.copy", "kind": "function", "doc": "<p>Return an array copy of the given object.</p>\n\n<p>LAX-backend implementation of <code>numpy.copy()</code>.</p>\n\n<p>This function will create arrays on JAX's default device. For control of the\ndevice placement of data, see <code>jax.device_put()</code>. More information is\navailable in the JAX FAQ at :ref:<code>faq-data-placement</code> (full FAQ at\nhttps://jax.readthedocs.io/en/latest/faq.html).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\norder : {'C', 'F', 'A', 'K'}, optional\n    Controls the memory layout of the copy. 'C' means C-order,\n    'F' means F-order, 'A' means 'F' if <code>a</code> is Fortran contiguous,\n    'C' otherwise. 'K' means match the layout of <code>a</code> as closely\n    as possible. (Note that this function and <code>ndarray.copy()</code> are very\n    similar, but have different default values for their order=\n    arguments.)</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>arr : ndarray\n    Array interpretation of <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.cumprod": {"fullname": "b3d.utils.Array.cumprod", "modulename": "b3d.utils", "qualname": "Array.cumprod", "kind": "function", "doc": "<p>Return the cumulative product of elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumprod()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative product is computed.  By default\n    the input is flattened.\ndtype : dtype, optional\n    Type of the returned array, as well as of the accumulator in which\n    the elements are multiplied.  If <em>dtype</em> is not specified, it\n    defaults to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with\n    a precision less than that of the default platform integer.  In\n    that case, the default platform integer is used instead.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumprod : ndarray\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to out is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.cumsum": {"fullname": "b3d.utils.Array.cumsum", "modulename": "b3d.utils", "qualname": "Array.cumsum", "kind": "function", "doc": "<p>Return the cumulative sum of the elements along a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.cumsum()</code>.</p>\n\n<p>Unlike the numpy counterpart, when <code>dtype</code> is not specified the output dtype will always\nmatch the dtype of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis : int, optional\n    Axis along which the cumulative sum is computed. The default\n    (None) is to compute the cumsum over the flattened array.\ndtype : dtype, optional\n    Type of the returned array and of the accumulator in which the\n    elements are summed.  If <code>dtype</code> is not specified, it defaults\n    to the dtype of <code>a</code>, unless <code>a</code> has an integer dtype with a\n    precision less than that of the default platform integer.  In\n    that case, the default platform integer is used.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>cumsum_along_axis : ndarray.\n    A new array holding the result is returned unless <code>out</code> is\n    specified, in which case a reference to <code>out</code> is returned. The\n    result has the same size as <code>a</code>, and the same shape as <code>a</code> if\n    <code>axis</code> is not None or <code>a</code> is a 1-d array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.diagonal": {"fullname": "b3d.utils.Array.diagonal", "modulename": "b3d.utils", "qualname": "Array.diagonal", "kind": "function", "doc": "<p>Return specified diagonals.</p>\n\n<p>LAX-backend implementation of <code>numpy.diagonal()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, returns the diagonal of <code>a</code> with the given offset,\ni.e., the collection of elements of the form <code>a[i, i+offset]</code>.  If\n<code>a</code> has more than two dimensions, then the axes specified by <code>axis1</code>\nand <code>axis2</code> are used to determine the 2-D sub-array whose diagonal is\nreturned.  The shape of the resulting array can be determined by\nremoving <code>axis1</code> and <code>axis2</code> and appending an index to the right equal\nto the size of the resulting diagonals.</p>\n\n<p>In versions of NumPy prior to 1.7, this function always returned a new,\nindependent array containing a copy of the values in the diagonal.</p>\n\n<p>In NumPy 1.7 and 1.8, it continues to return a copy of the diagonal,\nbut depending on this fact is deprecated. Writing to the resulting\narray continues to work as it used to, but a FutureWarning is issued.</p>\n\n<p>Starting in NumPy 1.9 it returns a read-only view on the original array.\nAttempting to write to the resulting array will produce an error.</p>\n\n<p>In some future release, it will return a read/write view and writing to\nthe returned array will alter your original array.  The returned array\nwill have the same type as the input array.</p>\n\n<p>If you don't write to the array returned by this function, then you can\njust ignore all of the above.</p>\n\n<p>If you depend on the current behavior, then we suggest copying the\nreturned array explicitly, i.e., use <code>np.diagonal(a).copy()</code> instead\nof just <code>np.diagonal(a)</code>. This will work with both past and future\nversions of NumPy.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal.  Can be positive or\n    negative.  Defaults to main diagonal (0).\naxis1 : int, optional\n    Axis to be used as the first axis of the 2-D sub-arrays from which\n    the diagonals should be taken.  Defaults to first axis (0).\naxis2 : int, optional\n    Axis to be used as the second axis of the 2-D sub-arrays from\n    which the diagonals should be taken. Defaults to second axis (1).</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>array_of_diagonals : ndarray\n    If <code>a</code> is 2-D, then a 1-D array containing the diagonal and of the\n    same type as <code>a</code> is returned unless <code>a</code> is a <code>matrix</code>, in which case\n    a 1-D array rather than a (2-D) <code>matrix</code> is returned in order to\n    maintain backward compatibility.</p>\n\n<pre><code>If ``a.ndim &gt; 2``, then the dimensions specified by `axis1` and `axis2`\nare removed, and a new axis inserted at the end corresponding to the\ndiagonal.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.dot": {"fullname": "b3d.utils.Array.dot", "modulename": "b3d.utils", "qualname": "Array.dot", "kind": "function", "doc": "<p>Compute the dot product of two arrays.</p>\n\n<p>JAX implementation of <code>numpy.dot()</code>.</p>\n\n<p>This differs from <code>jax.numpy.matmul()</code> in two respects:</p>\n\n<ul>\n<li>if either <code>a</code> or <code>b</code> is a scalar, the result of <code>dot</code> is equivalent to\n<code>jax.numpy.multiply()</code>, while the result of <code>matmul</code> is an error.</li>\n<li>if <code>a</code> and <code>b</code> have more than 2 dimensions, the batch indices are\nstacked rather than broadcast.</li>\n</ul>\n\n<p>Args:\n  a: first input array, of shape <code>(..., N)</code>.\n  b: second input array. Must have shape <code>(N,)</code> or <code>(..., N, M)</code>.\n    In the multi-dimensional case, leading dimensions must be broadcast-compatible\n    with the leading dimensions of <code>a</code>.\n  precision: either <code>None</code> (default), which means the default precision for\n    the backend, a <code>~jax.lax.Precision</code> enum value (<code>Precision.DEFAULT</code>,\n    <code>Precision.HIGH</code> or <code>Precision.HIGHEST</code>) or a tuple of two\n    such values indicating precision of <code>a</code> and <code>b</code>.\n  preferred_element_type: either <code>None</code> (default), which means the default\n    accumulation type for the input types, or a datatype, indicating to\n    accumulate results to and return a result with that datatype.</p>\n\n<p>Returns:\n  array containing the dot product of the inputs, with batch dimensions of\n  <code>a</code> and <code>b</code> stacked rather than broadcast.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy.matmul()</code>: broadcasted batched matmul.</li>\n<li><code>jax.lax.dot_general()</code>: general batched matrix multiplication.</li>\n</ul>\n\n<p>Examples:\n  For scalar inputs, <code>dot</code> computes the element-wise product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">Array([2, 4, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For vector or matrix inputs, <code>dot</code> computes the vector or matrix product:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([20, 38, 26], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[ 51,  60,  29],</span>\n<span class=\"go\">       [ 96, 114,  62],</span>\n<span class=\"go\">       [ 61,  78,  95]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For higher-dimensional matrix products, batch dimensions are stacked, whereas\n  in <code>~jax.numpy.matmul()</code> they are broadcast. For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 3, 1)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 2, 1)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">precision</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">lax</span><span class=\"o\">.</span><span class=\"n\">Precision</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preferred_element_type</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.flatten": {"fullname": "b3d.utils.Array.flatten", "modulename": "b3d.utils", "qualname": "Array.flatten", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.item": {"fullname": "b3d.utils.Array.item", "modulename": "b3d.utils", "qualname": "Array.item", "kind": "function", "doc": "<p>Copy an element of an array to a standard Python scalar and return it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">complex</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.max": {"fullname": "b3d.utils.Array.max", "modulename": "b3d.utils", "qualname": "Array.max", "kind": "function", "doc": "<p>Return the maximum of an array or maximum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.max()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``max`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The minimum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the maximum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>max : ndarray or scalar\n    Maximum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>. If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.mean": {"fullname": "b3d.utils.Array.mean", "modulename": "b3d.utils", "qualname": "Array.mean", "kind": "function", "doc": "<p>Compute the arithmetic mean along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.mean()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the average of the array elements.  The average is taken over\nthe flattened array by default, otherwise over the specified axis.\n<code>float64</code> intermediate and return values are used for integer inputs.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose mean is desired. If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the means are computed. The default is to\n    compute the mean of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the mean.  For integer inputs, the default\n    is <code>float64</code>; for floating point inputs, it is the same as the\n    input dtype.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `mean` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the mean. See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>m : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the mean values,\n    otherwise a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.min": {"fullname": "b3d.utils.Array.min", "modulename": "b3d.utils", "qualname": "Array.min", "kind": "function", "doc": "<p>Return the minimum of an array or minimum along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.min()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which to operate.  By default, flattened input is\n    used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the ``min`` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The maximum value of an output element. Must be present to allow\n    computation on empty slice. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to compare for the minimum. See <code>~numpy.ufunc.reduce</code>\n    for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>min : ndarray or scalar\n    Minimum of <code>a</code>. If <code>axis</code> is None, the result is a scalar value.\n    If <code>axis</code> is an int, the result is an array of dimension\n    <code>a.ndim - 1</code>.  If <code>axis</code> is a tuple, the result is an array of \n    dimension <code>a.ndim - len(axis)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.nonzero": {"fullname": "b3d.utils.Array.nonzero", "modulename": "b3d.utils", "qualname": "Array.nonzero", "kind": "function", "doc": "<p>Return indices of nonzero elements of an array.</p>\n\n<p>JAX implementation of <code>numpy.nonzero()</code>.</p>\n\n<p>Because the size of the output of <code>nonzero</code> is data-dependent, the function\nis not compatible with JIT and other transformations. The JAX version adds\nthe optional <code>size</code> argument which must be specified statically for\n<code>jnp.nonzero</code> to be used within JAX's transformations.</p>\n\n<p>Args:\n  a: N-dimensional array.\n  size: optional static integer specifying the number of nonzero entries to\n    return. If there are more nonzero elements than the specified <code>size</code>,\n    then indices will be truncated at the end. If there are fewer nonzero\n    elements than the specified size, then indices will be padded with\n    <code>fill_value</code>, which defaults to zero.\n  fill_value: optional padding value when <code>size</code> is specified. Defaults to 0.</p>\n\n<p>Returns:\n  Tuple of JAX Arrays of length <code>a.ndim</code>, containing the indices of each\n  nonzero value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><code>jax.numpy flatnonzero()</code></li>\n<li><code>jax.numpy.where()</code></li>\n</ul>\n\n<p>Examples:</p>\n\n<p>One-dimensional array returns a length-1 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>Two-dimensional array returns a length-2 tuple of indices:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([0, 1, 1], dtype=int32), Array([1, 0, 2], dtype=int32))</span>\n</code></pre>\n</div>\n\n<p>In either case, the resulting tuple of indices can be used directly to extract\n  the nonzero values:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">indices</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"n\">indices</span><span class=\"p\">]</span>\n<span class=\"go\">Array([5, 6, 7], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>The output of <code>nonzero</code> has a dynamic shape, because the number of returned\n  indices depends on the contents of the input array. As such, it is incompatible\n  with JIT and other JAX transformations:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">)(</span><span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># doctest: +IGNORE_EXCEPTION_DETAIL</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">  </span><span class=\"c\">...</span>\n<span class=\"gr\">ConcretizationTypeError</span>: <span class=\"n\">Abstract tracer value encountered where concrete value is expected: traced array with shape int32[].</span>\n<span class=\"x\">The size argument of jnp.nonzero must be statically specified to use jnp.nonzero within JAX transformations.</span>\n</code></pre>\n</div>\n\n<p>This can be addressed by passing a static <code>size</code> parameter to specify the\n  desired output shape:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span> <span class=\"o\">=</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">jit</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">nonzero</span><span class=\"p\">,</span> <span class=\"n\">static_argnames</span><span class=\"o\">=</span><span class=\"s1\">&#39;size&#39;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">(Array([1, 3, 5], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>If <code>size</code> does not match the true size, the result will be either truncated or padded:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># size &lt; 3: indices are truncated</span>\n<span class=\"go\">(Array([1, 3], dtype=int32),)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># size &gt; 3: indices are padded with zeros.</span>\n<span class=\"go\">(Array([1, 3, 5, 0, 0], dtype=int32),)</span>\n</code></pre>\n</div>\n\n<p>You can specify a custom fill value for the padding using the <code>fill_value</code> argument:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">nonzero_jit</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"go\">(Array([1, 3, 5, 6, 6], dtype=int32),)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.prod": {"fullname": "b3d.utils.Array.prod", "modulename": "b3d.utils", "qualname": "Array.prod", "kind": "function", "doc": "<p>Return the product of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.prod()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a product is performed.  The default,\n    axis=None, will calculate the product of all the elements in the\n    input array. If axis is negative it counts from the last to the\n    first axis.\ndtype : dtype, optional\n    The type of the returned array, as well as of the accumulator in\n    which the elements are multiplied.  The dtype of <code>a</code> is used by\n    default unless <code>a</code> has an integer dtype of less precision than the\n    default platform integer.  In that case, if <code>a</code> is signed then the\n    platform integer is used while if <code>a</code> is unsigned then an unsigned\n    integer of the same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left in the\n    result as dimensions with size one. With this option, the result\n    will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `prod` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    The starting value for this product. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the product. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>product_along_axis : ndarray, see <code>dtype</code> parameter above.\n    An array shaped as <code>a</code> but with the specified axis removed.\n    Returns a reference to <code>out</code> if specified.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.ptp": {"fullname": "b3d.utils.Array.ptp", "modulename": "b3d.utils", "qualname": "Array.ptp", "kind": "function", "doc": "<p>Range of values (maximum - minimum) along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.ptp()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>The name of the function comes from the acronym for 'peak to peak'.</p>\n\n<div class=\"pdoc-alert pdoc-alert-warning\">\n\n<p><code>ptp</code> preserves the data type of the array. This means the\nreturn value for an input of signed integers with n bits\n(e.g. <code>np.int8</code>, <code>np.int16</code>, etc) is also a signed integer\nwith n bits.  In that case, peak-to-peak values greater than\n<code>2**(n-1)-1</code> will be returned as negative values. An example\nwith a work-around is shown below.</p>\n\n</div>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input values.\naxis : None or int or tuple of ints, optional\n    Axis along which to find the peaks.  By default, flatten the\n    array.  <code>axis</code> may be negative, in\n    which case it counts from the last to the first axis.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `ptp` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>ptp : ndarray or scalar\n    The range of a given array - <code>scalar</code> if array is one-dimensional\n    or a new array holding the result along the given axis</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.ravel": {"fullname": "b3d.utils.Array.ravel", "modulename": "b3d.utils", "qualname": "Array.ravel", "kind": "function", "doc": "<p>Flatten array into a 1-dimensional shape.</p>\n\n<p>JAX implementation of <code>numpy.ravel()</code>, implemented in terms of\n<code>jax.lax.reshape()</code>.</p>\n\n<p><code>ravel(arr, order=order)</code> is equivalent to <code>reshape(arr, -1, order=order)</code>.</p>\n\n<p>Args:\n  a: array to be flattened.\n  order: <code>'F'</code> or <code>'C'</code>, specifies whether the reshape should apply column-major\n    (fortran-style, <code>\"F\"</code>) or row-major (C-style, <code>\"C\"</code>) order; default is <code>\"C\"</code>.\n    JAX does not support <code>order=\"A\"</code> or <code>order=\"K\"</code>.</p>\n\n<p>Returns:\n  flattened copy of input array.</p>\n\n<p>Notes:\n  Unlike <code>numpy.ravel()</code>, <code>jax.numpy.ravel()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.ravel()</code>: equivalent functionality via an array method.</li>\n<li><code>jax.numpy.reshape()</code>: general array reshape.</li>\n</ul>\n\n<p>Examples:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">]])</span>\n</code></pre>\n</div>\n\n<p>By default, ravel in C-style, row-major order</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>Optionally ravel in Fortran-style, column-major:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 4, 2, 5, 3, 6], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, the same functionality is availabel via the <code>jax.Array.ravel()</code>\n  method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">ravel</span><span class=\"p\">()</span>\n<span class=\"go\">Array([1, 2, 3, 4, 5, 6], dtype=int32)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.repeat": {"fullname": "b3d.utils.Array.repeat", "modulename": "b3d.utils", "qualname": "Array.repeat", "kind": "function", "doc": "<p>Repeat each element of an array after themselves</p>\n\n<p>LAX-backend implementation of <code>numpy.repeat()</code>.</p>\n\n<p>JAX adds the optional <code>total_repeat_length</code> parameter which specifies the total\nnumber of repeat, and defaults to sum(repeats). It must be specified for repeat\nto be compilable. If <code>sum(repeats)</code> is larger than the specified\n<code>total_repeat_length</code> the remaining values will be discarded. In the case of\n<code>sum(repeats)</code> being smaller than the specified target length, the final value\nwill be repeated.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\nrepeats : int or array of ints\n    The number of repetitions for each element.  <code>repeats</code> is broadcasted\n    to fit the shape of the given axis.\naxis : int, optional\n    The axis along which to repeat values.  By default, use the\n    flattened input array, and return a flat output array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>repeated_array : ndarray\n    Output array which has the same shape as <code>a</code>, except along\n    the given axis.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">total_repeat_length</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.reshape": {"fullname": "b3d.utils.Array.reshape", "modulename": "b3d.utils", "qualname": "Array.reshape", "kind": "function", "doc": "<p>Returns an array containing the same data with a new shape.</p>\n\n<p>Refer to <code>jax.numpy.reshape()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.round": {"fullname": "b3d.utils.Array.round", "modulename": "b3d.utils", "qualname": "Array.round", "kind": "function", "doc": "<p>Round an array to the given number of decimals.</p>\n\n<p>LAX-backend implementation of <code>numpy.around()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p><code>around</code> is an alias of <code>~numpy.round</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">decimals</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.searchsorted": {"fullname": "b3d.utils.Array.searchsorted", "modulename": "b3d.utils", "qualname": "Array.searchsorted", "kind": "function", "doc": "<p>Find indices where elements should be inserted to maintain order.</p>\n\n<p>LAX-backend implementation of <code>numpy.searchsorted()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Find the indices into a sorted array <code>a</code> such that, if the\ncorresponding elements in <code>v</code> were inserted before the indices, the\norder of <code>a</code> would be preserved.</p>\n\n<p>Assuming that <code>a</code> is sorted:</p>\n\n<p>======  ============================\n<code>side</code>  returned index <code>i</code> satisfies\n======  ============================\nleft    <code>a[i-1] &lt; v &lt;= a[i]</code>\nright   <code>a[i-1] &lt;= v &lt; a[i]</code>\n======  ============================</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : 1-D array_like\n    Input array. If <code>sorter</code> is None, then it must be sorted in\n    ascending order, otherwise <code>sorter</code> must be an array of indices\n    that sort it.\nv : array_like\n    Values to insert into <code>a</code>.\nside : {'left', 'right'}, optional\n    If 'left', the index of the first suitable location found is given.\n    If 'right', return the last such index.  If there is no suitable\n    index, return either 0 or N (where N is the length of <code>a</code>).\nmethod : str\n    One of 'scan' (default), 'scan_unrolled', 'sort' or 'compare_all'. Controls the method used by the\n    implementation: 'scan' tends to be more performant on CPU (particularly when <code>a</code> is\n    very large), 'scan_unrolled' is more performant on GPU at the expense of additional compile time,\n    'sort' is often more performant on accelerator backends like GPU and TPU\n    (particularly when <code>v</code> is very large), and 'compare_all' can be most performant\n    when <code>a</code> is very small.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>indices : int or array of ints\n    Array of insertion points with the same shape as <code>v</code>,\n    or an integer if <code>v</code> is a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sorter</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;scan&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.sort": {"fullname": "b3d.utils.Array.sort", "modulename": "b3d.utils", "qualname": "Array.sort", "kind": "function", "doc": "<p>Return a sorted copy of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.sort()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array to be sorted.\naxis : int or None, optional\n    Axis along which to sort. If None, the array is flattened before\n    sorting. The default is -1, which sorts along the last axis.\nkind : deprecated; specify sort algorithm using stable=True or stable=False\norder : not supported\nstable : bool, default=True\n    Specify whether to use a stable sort.\ndescending : bool, default=False\n    Specify whether to do a descending sort.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sorted_array : ndarray\n    Array of the same type and shape as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">descending</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.squeeze": {"fullname": "b3d.utils.Array.squeeze", "modulename": "b3d.utils", "qualname": "Array.squeeze", "kind": "function", "doc": "<p>Remove axes of length one from <code>a</code>.</p>\n\n<p>LAX-backend implementation of <code>numpy.squeeze()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input data.\naxis : None or int or tuple of ints, optional</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>squeezed : ndarray\n    The input array, but with all or a subset of the\n    dimensions of length 1 removed. This is always <code>a</code> itself\n    or a view into <code>a</code>. Note that if all axes are squeezed,\n    the result is a 0d array and not a scalar.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.std": {"fullname": "b3d.utils.Array.std", "modulename": "b3d.utils", "qualname": "Array.std", "kind": "function", "doc": "<p>Compute the standard deviation along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.std()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the standard deviation, a measure of the spread of a distribution,\nof the array elements. The standard deviation is computed for the\nflattened array by default, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Calculate the standard deviation of these values.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the standard deviation is computed. The\n    default is to compute the standard deviation of the flattened array.\ndtype : dtype, optional\n    Type to use in computing the standard deviation. For arrays of\n    integer type the default is float64, for arrays of float types it is\n    the same as the array type.\nddof : int, optional\n    Means Delta Degrees of Freedom.  The divisor used in calculations\n    is <code>N - ddof</code>, where <code>N</code> represents the number of elements.\n    By default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `std` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the standard deviation.\n    See <code>~numpy.ufunc.reduce</code> for details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>standard_deviation : ndarray, see dtype parameter above.\n    If <code>out</code> is None, return a new array containing the standard deviation,\n    otherwise return a reference to the output array.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.sum": {"fullname": "b3d.utils.Array.sum", "modulename": "b3d.utils", "qualname": "Array.sum", "kind": "function", "doc": "<p>Sum of array elements over a given axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.sum()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Elements to sum.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which a sum is performed.  The default,\n    axis=None, will sum all of the elements of the input array.  If\n    axis is negative it counts from the last to the first axis.\ndtype : dtype, optional\n    The type of the returned array and of the accumulator in which the\n    elements are summed.  The dtype of <code>a</code> is used by default unless <code>a</code>\n    has an integer dtype of less precision than the default platform\n    integer.  In that case, if <code>a</code> is signed then the platform integer\n    is used while if <code>a</code> is unsigned then an unsigned integer of the\n    same precision as the platform integer is used.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `sum` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>initial : scalar, optional\n    Starting value for the sum. See <code>~numpy.ufunc.reduce</code> for details.\nwhere : array_like of bool, optional\n    Elements to include in the sum. See <code>~numpy.ufunc.reduce</code> for details.\npromote_integers : bool, default=True\n    If True, then integer inputs will be promoted to the widest available integer\n    dtype, following numpy's behavior. If False, the result will have the same dtype\n    as the input. <code>promote_integers</code> is ignored if <code>dtype</code> is specified.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_axis : ndarray\n    An array with the same shape as <code>a</code>, with the specified\n    axis removed.   If <code>a</code> is a 0-d array, or if <code>axis</code> is None, a scalar\n    is returned.  If an output array is specified, a reference to\n    <code>out</code> is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">promote_integers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.swapaxes": {"fullname": "b3d.utils.Array.swapaxes", "modulename": "b3d.utils", "qualname": "Array.swapaxes", "kind": "function", "doc": "<p>Interchange two axes of an array.</p>\n\n<p>LAX-backend implementation of <code>numpy.swapaxes()</code>.</p>\n\n<p>The JAX version of this function may in some cases return a copy rather than a\nview of the input.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array.\naxis1 : int\n    First axis.\naxis2 : int\n    Second axis.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>a_swapped : ndarray\n    For NumPy &gt;= 1.10.0, if <code>a</code> is an ndarray, then a view of <code>a</code> is\n    returned; otherwise a new array is created. For earlier NumPy\n    versions a view of <code>a</code> is returned only if the order of the\n    axes is changed, otherwise the input array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.take": {"fullname": "b3d.utils.Array.take", "modulename": "b3d.utils", "qualname": "Array.take", "kind": "function", "doc": "<p>Take elements from an array along an axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.take()</code>.</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>When axis is not None, this function does the same thing as \"fancy\"\nindexing (indexing arrays using arrays); however, it can be easier to use\nif you need elements along a given axis. A call such as\n<code>np.take(arr, indices, axis=3)</code> is equivalent to\n<code>arr[:,:,:,indices,...]</code>.</p>\n\n<p>Explained without fancy indexing, this is equivalent to the following use\nof <code>ndindex</code>, which sets each of <code>ii</code>, <code>jj</code>, and <code>kk</code> to a tuple of\nindices::</p>\n\n<pre><code>Ni, Nk = a.shape[:axis], a.shape[axis+1:]\nNj = indices.shape\nfor ii in ndindex(Ni):\n    for jj in ndindex(Nj):\n        for kk in ndindex(Nk):\n            out[ii + jj + kk] = a[ii + (indices[jj],) + kk]\n</code></pre>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like (Ni..., M, Nk...)\n    The source array.\nindices : array_like (Nj...)\n    The indices of the values to extract.\naxis : int, optional\n    The axis over which to select values. By default, the flattened\n    input array is used.\nmode : string, default=\"fill\"\n    Out-of-bounds indexing mode. The default mode=\"fill\" returns invalid values\n    (e.g. NaN) for out-of bounds indices (see also <code>fill_value</code> below).\n    For more discussion of mode options, see <code>jax.numpy.ndarray.at</code>.\nfill_value : optional\n    The fill value to return for out-of-bounds slices when mode is 'fill'. Ignored\n    otherwise. Defaults to NaN for inexact types, the largest negative value for\n    signed types, the largest positive value for unsigned types, and True for booleans.\nunique_indices : bool, default=False\n    If True, the implementation will assume that the indices are unique,\n    which can result in more efficient execution on some backends.\nindices_are_sorted : bool, default=False\n    If True, the implementation will assume that the indices are sorted in\n    ascending order, which can lead to more efficient execution on some backends.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray (Ni..., Nj..., Nk...)\n    The returned array has the same type as <code>a</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">indices</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">unique_indices</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indices_are_sorted</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fill_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.trace": {"fullname": "b3d.utils.Array.trace", "modulename": "b3d.utils", "qualname": "Array.trace", "kind": "function", "doc": "<p>Return the sum along diagonals of the array.</p>\n\n<p>LAX-backend implementation of <code>numpy.trace()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>If <code>a</code> is 2-D, the sum along its diagonal with the given offset\nis returned, i.e., the sum of elements <code>a[i,i+offset]</code> for all i.</p>\n\n<p>If <code>a</code> has more than two dimensions, then the axes specified by axis1 and\naxis2 are used to determine the 2-D sub-arrays whose traces are returned.\nThe shape of the resulting array is the same as that of <code>a</code> with <code>axis1</code>\nand <code>axis2</code> removed.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Input array, from which the diagonals are taken.\noffset : int, optional\n    Offset of the diagonal from the main diagonal. Can be both positive\n    and negative. Defaults to 0.\naxis1, axis2 : int, optional\n    Axes to be used as the first and second axis of the 2-D sub-arrays\n    from which the diagonals should be taken. Defaults are the first two\n    axes of <code>a</code>.\ndtype : dtype, optional\n    Determines the data-type of the returned array and of the accumulator\n    where the elements are summed. If dtype has the value None and <code>a</code> is\n    of integer type of precision less than the default integer\n    precision, then the default integer precision is used. Otherwise,\n    the precision is the same as that of <code>a</code>.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>sum_along_diagonals : ndarray\n    If <code>a</code> is 2-D, the sum along the diagonal is returned.  If <code>a</code> has\n    larger dimensions, then an array of sums along diagonals is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.transpose": {"fullname": "b3d.utils.Array.transpose", "modulename": "b3d.utils", "qualname": "Array.transpose", "kind": "function", "doc": "<p>Returns a view of the array with axes transposed.</p>\n\n<p>Refer to <code>jax.numpy.transpose()</code> for full documentation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.var": {"fullname": "b3d.utils.Array.var", "modulename": "b3d.utils", "qualname": "Array.var", "kind": "function", "doc": "<p>Compute the variance along the specified axis.</p>\n\n<p>LAX-backend implementation of <code>numpy.var()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<p>Returns the variance of the array elements, a measure of the spread of a\ndistribution.  The variance is computed for the flattened array by\ndefault, otherwise over the specified axis.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>a : array_like\n    Array containing numbers whose variance is desired.  If <code>a</code> is not an\n    array, a conversion is attempted.\naxis : None or int or tuple of ints, optional\n    Axis or axes along which the variance is computed.  The default is to\n    compute the variance of the flattened array.\ndtype : data-type, optional\n    Type to use in computing the variance.  For arrays of integer type\n    the default is <code>float64</code>; for arrays of float types it is the same as\n    the array type.\nddof : int, optional\n    \"Delta Degrees of Freedom\": the divisor used in the calculation is\n    <code>N - ddof</code>, where <code>N</code> represents the number of elements. By\n    default <code>ddof</code> is zero.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left\n    in the result as dimensions with size one. With this option,\n    the result will broadcast correctly against the input array.</p>\n\n<pre><code>If the default value is passed, then `keepdims` will not be\npassed through to the `var` method of sub-classes of\n`ndarray`, however any non-default value will be.  If the\nsub-class' method does not implement `keepdims` any\nexceptions will be raised.\n</code></pre>\n\n<p>where : array_like of bool, optional\n    Elements to include in the variance. See <code>~numpy.ufunc.reduce</code> for\n    details.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>variance : ndarray, see dtype parameter above\n    If <code>out=None</code>, returns a new array containing the variance;\n    otherwise, a reference to the output array is returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">out</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ddof</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">keepdims</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.view": {"fullname": "b3d.utils.Array.view", "modulename": "b3d.utils", "qualname": "Array.view", "kind": "function", "doc": "<p>Return a bitwise copy of the array, viewed as a new dtype.</p>\n\n<p>This is fuller-featured wrapper around <code>jax.lax.bitcast_convert_type()</code>.</p>\n\n<p>If the source and target dtype have the same bitwidth, the result has the same\nshape as the input array. If the bitwidth of the target dtype is different\nfrom the source, the size of the last axis of the result is adjusted\naccordingly.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 6)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int16</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(1, 2, 2)</span>\n</code></pre>\n</div>\n\n<p>Conversions involving booleans are not well-defined in all situations. With\nregards to the shape of result as explained above, booleans are treated as\nhaving a bitwidth of 8. However, when converting to a boolean array, the input\nshould only contain 0 or 1 bytes. Otherwise, results may be unpredictable or\nmay change depending on how the result is used.</p>\n\n<p>This conversion is guaranteed and safe:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">view</span><span class=\"p\">(</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ True, False,  True], dtype=bool)</span>\n</code></pre>\n</div>\n\n<p>However, there are no guarantees about the results of any expression involving\na view such as this: <code>jnp.array([1, 2, 3], dtype=jnp.int8).view(jnp.bool_)</code>.\nIn particular, the results may change between JAX releases and depending on\nthe platform. To safely convert such an array to a boolean array, compare it\nwith <code>0</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">int8</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span>\n<span class=\"go\">Array([ True,  True, False], dtype=bool)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">dtype</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">SupportsDType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, "b3d.utils.Array.flat": {"fullname": "b3d.utils.Array.flat", "modulename": "b3d.utils", "qualname": "Array.flat", "kind": "variable", "doc": "<p>Not implemented: Use <code>~jax.Array.flatten()</code> instead.</p>\n"}, "b3d.utils.Array.T": {"fullname": "b3d.utils.Array.T", "modulename": "b3d.utils", "qualname": "Array.T", "kind": "variable", "doc": "<p>Return a transposed version of an N-dimensional array.</p>\n\n<p>JAX implementation of <code>jax.numpy.transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  a: input array\n  axes: optionally specify the permutation using a length-<code>a.ndim</code> sequence of integers\n    <code>i</code> satisfying <code>0 &lt;= i &lt; a.ndim</code>. Defaults to <code>range(a.ndim)[::-1]</code>, i.e\n    reverses the order of all axes.</p>\n\n<p>Returns:\n  transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.transpose()</code>: equivalent function via an <code>~jax.Array</code> method.</li>\n<li><code>jax.Array.T</code>: equivalent function via an <code>~jax.Array</code>  property.</li>\n<li><code>jax.numpy.matrix_transpose()</code>: transpose the last two axes of an array. This is\nsuitable for working with batched 2D matrices.</li>\n<li><code>jax.numpy.swapaxes()</code>: swap any two axes in an array.</li>\n<li><code>jax.numpy.moveaxis()</code>: move an axis to another postion in the array.</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.transpose()</code>, <code>jax.numpy.transpose()</code> will return a copy rather\n  than a view of the input array. However, under JIT, the compiler will optimize-away\n  such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  For a 1D array, the transpose is the identity:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([1, 2, 3, 4], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For a 2D array, the transpose is a matrix transpose:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For an N-dimensional array, the transpose reverses the order of the axes:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(5, 4, 3)</span>\n</code></pre>\n</div>\n\n<p>The <code>axes</code> argument can be specified to change this default behavior:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>Since swapping the last two axes is a common operation, it can be done\n  via its own API, <code>jax.numpy.matrix_transpose()</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"go\">(3, 5, 4)</span>\n</code></pre>\n</div>\n\n<p>For convenience, transposes may also be performed using the <code>jax.Array.transpose()</code>\n  method or the <code>jax.Array.T</code> property:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">()</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">T</span>\n<span class=\"go\">Array([[1, 3],</span>\n<span class=\"go\">       [2, 4]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.utils.Array.mT": {"fullname": "b3d.utils.Array.mT", "modulename": "b3d.utils", "qualname": "Array.mT", "kind": "variable", "doc": "<p>Transpose the last two dimensions of an array.</p>\n\n<p>JAX implementation of <code>jax.numpy.matrix_transpose()</code>, implemented in terms of\n<code>jax.lax.transpose()</code>.</p>\n\n<p>Args:\n  x: input array, Must have <code>x.ndim &gt;= 2</code></p>\n\n<p>Returns:\n  matrix-transposed copy of the array.</p>\n\n<p>See Also:</p>\n\n<ul>\n<li><code>jax.Array.mT</code>: same operation accessed via an <code>~jax.Array()</code> property.</li>\n<li><code>jax.numpy.transpose()</code>: general multi-axis transpose</li>\n</ul>\n\n<p>Note:\n  Unlike <code>numpy.matrix_transpose()</code>, <code>jax.numpy.matrix_transpose()</code> will return a\n  copy rather than a view of the input array. However, under JIT, the compiler will\n  optimize-away such copies when possible, so this doesn't have performance impacts in practice.</p>\n\n<p>Examples:\n  Here is a 2x2x2 matrix representing a batched 2x2 matrix:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span>\n<span class=\"gp\">... </span>               <span class=\"p\">[[</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span>\n<span class=\"gp\">... </span>                <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">]]])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">matrix_transpose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n\n<p>For convenience, you can perform the same transpose via the <code>~jax.Array.mT</code>\n  property of <code>jax.Array</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">mT</span>\n<span class=\"go\">Array([[[1, 3],</span>\n<span class=\"go\">        [2, 4]],</span>\n<span class=\"go\">&lt;BLANKLINE&gt;</span>\n<span class=\"go\">       [[5, 7],</span>\n<span class=\"go\">        [6, 8]]], dtype=int32)</span>\n</code></pre>\n</div>\n", "annotation": ": jax.Array"}, "b3d.utils.Array.real": {"fullname": "b3d.utils.Array.real", "modulename": "b3d.utils", "qualname": "Array.real", "kind": "variable", "doc": "<p>Return the real part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.real()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The real component of the complex argument. If <code>val</code> is real, the type\n    of <code>val</code> is used for the output.  If <code>val</code> has complex elements, the\n    returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.utils.Array.imag": {"fullname": "b3d.utils.Array.imag", "modulename": "b3d.utils", "qualname": "Array.imag", "kind": "variable", "doc": "<p>Return the imaginary part of the complex argument.</p>\n\n<p>LAX-backend implementation of <code>numpy.imag()</code>.</p>\n\n<p><em>Original docstring below.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>val : array_like\n    Input array.</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>out : ndarray or scalar\n    The imaginary component of the complex argument. If <code>val</code> is real,\n    the type of <code>val</code> is used for the output.  If <code>val</code> has complex\n    elements, the returned type is float.</p>\n", "annotation": ": jax.Array"}, "b3d.utils.Array.nbytes": {"fullname": "b3d.utils.Array.nbytes", "modulename": "b3d.utils", "qualname": "Array.nbytes", "kind": "variable", "doc": "<p>Total bytes consumed by the elements of the array.</p>\n", "annotation": ": int"}, "b3d.utils.Array.itemsize": {"fullname": "b3d.utils.Array.itemsize", "modulename": "b3d.utils", "qualname": "Array.itemsize", "kind": "variable", "doc": "<p>Length of one array element in bytes.</p>\n", "annotation": ": int"}, "b3d.utils.Array.at": {"fullname": "b3d.utils.Array.at", "modulename": "b3d.utils", "qualname": "Array.at", "kind": "variable", "doc": "<p>Helper property for index update functionality.</p>\n\n<p>The <code>at</code> property provides a functionally pure equivalent of in-place\narray modifications.</p>\n\n<p>In particular:</p>\n\n<p>==============================  ================================\nAlternate syntax                Equivalent In-place expression\n==============================  ================================\n<code>x = x.at[idx].set(y)</code>        <code>x[idx] = y</code>\n<code>x = x.at[idx].add(y)</code>        <code>x[idx] += y</code>\n<code>x = x.at[idx].multiply(y)</code>   <code>x[idx] *= y</code>\n<code>x = x.at[idx].divide(y)</code>     <code>x[idx] /= y</code>\n<code>x = x.at[idx].power(y)</code>      <code>x[idx] **= y</code>\n<code>x = x.at[idx].min(y)</code>        <code>x[idx] = minimum(x[idx], y)</code>\n<code>x = x.at[idx].max(y)</code>        <code>x[idx] = maximum(x[idx], y)</code>\n<code>x = x.at[idx].apply(ufunc)</code>  <code>ufunc.at(x, idx)</code>\n<code>x = x.at[idx].get()</code>         <code>x = x[idx]</code>\n==============================  ================================</p>\n\n<p>None of the <code>x.at</code> expressions modify the original <code>x</code>; instead they return\na modified copy of <code>x</code>. However, inside a <code>~jax.jit()</code> compiled function,\nexpressions like :code:<code>x = x.at[idx].set(y)</code> are guaranteed to be applied in-place.</p>\n\n<p>Unlike NumPy in-place operations such as :code:<code>x[idx] += y</code>, if multiple\nindices refer to the same location, all updates will be applied (NumPy would\nonly apply the last update, rather than applying all updates.) The order\nin which conflicting updates are applied is implementation-defined and may be\nnondeterministic (e.g., due to concurrency on some hardware platforms).</p>\n\n<p>By default, JAX assumes that all indices are in-bounds. Alternative out-of-bound\nindex semantics can be specified via the <code>mode</code> parameter (see below).</p>\n\n<h2 id=\"arguments\">Arguments</h2>\n\n<p>mode : str\n    Specify out-of-bound indexing mode. Options are:</p>\n\n<pre><code>- ``\"promise_in_bounds\"``: (default) The user promises that indices are in bounds.\n  No additional checking will be performed. In practice, this means that\n  out-of-bounds indices in ``get()`` will be clipped, and out-of-bounds indices\n  in ``set()``, ``add()``, etc. will be dropped.\n- ``\"clip\"``: clamp out of bounds indices into valid range.\n- ``\"drop\"``: ignore out-of-bound indices.\n- ``\"fill\"``: alias for ``\"drop\"``.  For `get()`, the optional ``fill_value``\n  argument specifies the value that will be returned.\n\n  See `jax.lax.GatherScatterMode` for more details.\n</code></pre>\n\n<p>indices_are_sorted : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are sorted in ascending order, which can lead to more efficient execution\n    on some backends.\nunique_indices : bool\n    If True, the implementation will assume that the indices passed to <code>at[]</code>\n    are unique, which can result in more efficient execution on some backends.\nfill_value : Any\n    Only applies to the <code>get()</code> method: the fill value to return for out-of-bounds\n    slices when <code>mode</code> is <code>'fill'</code>. Ignored otherwise. Defaults to <code>NaN</code> for\n    inexact types, the largest negative value for signed types, the largest positive\n    value for unsigned types, and <code>True</code> for booleans.</p>\n\n<h2 id=\"examples\">Examples</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">jnp</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1., 12.,  3.,  4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices are ignored</span>\n<span class=\"go\">Array([0., 1., 2., 3., 4.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;clip&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">Array([ 0.,  1.,  2.,  3., 14.], dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"go\">Array(2., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>  <span class=\"c1\"># out-of-bounds indices clipped</span>\n<span class=\"go\">Array(4., dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># out-of-bounds indices filled with NaN</span>\n<span class=\"go\">Array(nan, dtype=float32)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fill&#39;</span><span class=\"p\">,</span> <span class=\"n\">fill_value</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># custom fill value</span>\n<span class=\"go\">Array(-1., dtype=float32)</span>\n</code></pre>\n</div>\n"}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"fullname": "b3d.utils.square_center_width_color_to_vertices_faces_colors", "modulename": "b3d.utils", "qualname": "square_center_width_color_to_vertices_faces_colors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span>, </span><span class=\"param\"><span class=\"n\">center</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">color</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.all_pairs": {"fullname": "b3d.utils.all_pairs", "modulename": "b3d.utils", "qualname": "all_pairs", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">Y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.distinct_colors": {"fullname": "b3d.utils.distinct_colors", "modulename": "b3d.utils", "qualname": "distinct_colors", "kind": "function", "doc": "<p>Get a list of distinct colors.</p>\n\n<p>Args:\n    num_colors (int): Number of colors to generate.\n    pastel_factor (float): Pastel factor.\nReturns:\n    list: List of colors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">num_colors</span>, </span><span class=\"param\"><span class=\"n\">pastel_factor</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.fit_plane": {"fullname": "b3d.utils.fit_plane", "modulename": "b3d.utils", "qualname": "fit_plane", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">point_cloud</span>, </span><span class=\"param\"><span class=\"n\">inlier_threshold</span>, </span><span class=\"param\"><span class=\"n\">minPoints</span>, </span><span class=\"param\"><span class=\"n\">maxIteration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.fit_table_plane": {"fullname": "b3d.utils.fit_table_plane", "modulename": "b3d.utils", "qualname": "fit_table_plane", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">point_cloud</span>,</span><span class=\"param\">\t<span class=\"n\">inlier_threshold</span>,</span><span class=\"param\">\t<span class=\"n\">segmentation_threshold</span>,</span><span class=\"param\">\t<span class=\"n\">minPoints</span>,</span><span class=\"param\">\t<span class=\"n\">maxIteration</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.separate_shared_vertices": {"fullname": "b3d.utils.separate_shared_vertices", "modulename": "b3d.utils", "qualname": "separate_shared_vertices", "kind": "function", "doc": "<p>Given a mesh where multiple faces are using the same vertex,\nreturn a mesh where each vertex is unique to a face.\n(This will therefore duplicate some vertices.)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"fullname": "b3d.utils.triangle_color_mesh_to_vertex_color_mesh", "modulename": "b3d.utils", "qualname": "triangle_color_mesh_to_vertex_color_mesh", "kind": "function", "doc": "<p>Given a mesh with the provided <code>vertices, faces, triangle_colors</code>,\nreturn an equivalent mesh <code>(vertices, faces, vertex_colors)</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vertices</span>, </span><span class=\"param\"><span class=\"n\">faces</span>, </span><span class=\"param\"><span class=\"n\">triangle_colors</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.HIINTERFACE": {"fullname": "b3d.utils.HIINTERFACE", "modulename": "b3d.utils", "qualname": "HIINTERFACE", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, "b3d.utils.carvekit_get_foreground_mask": {"fullname": "b3d.utils.carvekit_get_foreground_mask", "modulename": "b3d.utils", "qualname": "carvekit_get_foreground_mask", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.discretize": {"fullname": "b3d.utils.discretize", "modulename": "b3d.utils", "qualname": "discretize", "kind": "function", "doc": "<p>Discretizes a point cloud.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">resolution</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.voxelize": {"fullname": "b3d.utils.voxelize", "modulename": "b3d.utils", "qualname": "voxelize", "kind": "function", "doc": "<p>Voxelize a point cloud.\nArgs:\n    data: (N,3) point cloud\n    resolution: (float) resolution of the voxel grid\nReturns:\n    data: (M,3) voxelized point cloud</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">resolution</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.voxel_occupied_occluded_free": {"fullname": "b3d.utils.voxel_occupied_occluded_free", "modulename": "b3d.utils", "qualname": "voxel_occupied_occluded_free", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">camera_pose</span>,</span><span class=\"param\">\t<span class=\"n\">rgb_image</span>,</span><span class=\"param\">\t<span class=\"n\">depth_image</span>,</span><span class=\"param\">\t<span class=\"n\">grid</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span>,</span><span class=\"param\">\t<span class=\"n\">far</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"fullname": "b3d.utils.voxel_occupied_occluded_free_parallel_camera", "modulename": "b3d.utils", "qualname": "voxel_occupied_occluded_free_parallel_camera", "kind": "function", "doc": "<p>Vectorized version of voxel_occupied_occluded_free. Takes similar arguments as voxel_occupied_occluded_free but with additional array axes over which voxel_occupied_occluded_free is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">camera_pose</span>,</span><span class=\"param\">\t<span class=\"n\">rgb_image</span>,</span><span class=\"param\">\t<span class=\"n\">depth_image</span>,</span><span class=\"param\">\t<span class=\"n\">grid</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span>,</span><span class=\"param\">\t<span class=\"n\">far</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"fullname": "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth", "modulename": "b3d.utils", "qualname": "voxel_occupied_occluded_free_parallel_camera_depth", "kind": "function", "doc": "<p>Vectorized version of voxel_occupied_occluded_free. Takes similar arguments as voxel_occupied_occluded_free but with additional array axes over which voxel_occupied_occluded_free is mapped.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">camera_pose</span>,</span><span class=\"param\">\t<span class=\"n\">rgb_image</span>,</span><span class=\"param\">\t<span class=\"n\">depth_image</span>,</span><span class=\"param\">\t<span class=\"n\">grid</span>,</span><span class=\"param\">\t<span class=\"n\">fx</span>,</span><span class=\"param\">\t<span class=\"n\">fy</span>,</span><span class=\"param\">\t<span class=\"n\">cx</span>,</span><span class=\"param\">\t<span class=\"n\">cy</span>,</span><span class=\"param\">\t<span class=\"n\">far</span>,</span><span class=\"param\">\t<span class=\"n\">tolerance</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "b3d.utils.make_grid_points": {"fullname": "b3d.utils.make_grid_points", "modulename": "b3d.utils", "qualname": "make_grid_points", "kind": "function", "doc": "<p>Generate uniformly spaced translation proposals in a 3D box\nArgs:\n    min_x, min_y, min_z: minimum x, y, z values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_vec</span>, </span><span class=\"param\"><span class=\"n\">max_vec</span>, </span><span class=\"param\"><span class=\"n\">num_vec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"b3d": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Renderer": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Renderer.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "b3d.Renderer.renderer_env": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Renderer.num_layers": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Renderer.from_intrinsics_object": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Renderer.get_intrinsics_object": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Renderer.set_intrinsics": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.Renderer.interpolate_many": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.Renderer.interpolate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.Renderer.rasterize_many": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 261}, "b3d.Renderer.rasterize": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 176}, "b3d.Renderer.render_attribute_many": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 175}, "b3d.Renderer.render_attribute": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 170}, "b3d.RendererOriginal": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.RendererOriginal.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 56}, "b3d.RendererOriginal.renderer_env": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.RendererOriginal.set_intrinsics": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.RendererOriginal.rasterize_many": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.RendererOriginal.rasterize": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.RendererOriginal.rasterize_mesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.RendererOriginal.rasterize_original": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.RendererOriginal.interpolate_many": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.interpolate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.render_many": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.render": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.render_rgbd_many": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.render_rgbd": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.RendererOriginal.rr_log_rgbd": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Pose": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.Pose.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "b3d.Pose.identity_quaternion": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.unit_quaternion": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.pos": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.position": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.xyzw": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.quat": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.quaternion": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.wxyz": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.rot": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.normalize": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Pose.quat_in_upper_hemisphere": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Pose.canonical": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 58}, "b3d.Pose.flatten": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Pose.tree_flatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Pose.tree_unflatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.Pose.copy": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Pose.flat": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.shape": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Pose.reshape": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.Pose.slice": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Pose.as_matrix": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "b3d.Pose.identity": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.Pose.eye": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.Pose.id": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.Pose.apply": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 7}, "b3d.Pose.compose": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 7}, "b3d.Pose.scale": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "b3d.Pose.concatenate_poses": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "b3d.Pose.concat": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.Pose.stack_poses": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "b3d.Pose.split": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Pose.inv": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "b3d.Pose.inverse": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "b3d.Pose.from_matrix": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "b3d.Pose.from_xyzw": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "b3d.Pose.from_quat": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "b3d.Pose.from_pos": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 13}, "b3d.Pose.from_translation": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 13}, "b3d.Pose.from_vec": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 47}, "b3d.Pose.from_pos_matrix": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "b3d.Pose.from_position_and_target": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 64}, "b3d.Pose.sample_uniform_pose": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.Pose.sample_uniform_pose_vmap": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.Pose.sample_gaussian_vmf_pose": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.Rot": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.MeshLibrary.vertices": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.faces": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.ranges": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.attributes": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.vertex_index_to_object": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.objects": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.MeshLibrary.make_empty_library": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "b3d.MeshLibrary.tree_flatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.MeshLibrary.tree_unflatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.MeshLibrary.get_object_name": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "b3d.MeshLibrary.get_num_objects": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.MeshLibrary.add_object": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 34}, "b3d.MeshLibrary.add_trimesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "b3d.Mesh": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Mesh.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 87}, "b3d.Mesh.vertices": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Mesh.faces": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Mesh.vertex_attributes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.Mesh.tree_flatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.tree_unflatten": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.Mesh.copy": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.from_obj_file": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.from_obj": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.from_trimesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "b3d.Mesh.save": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.transform": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.merge_meshes": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.transform_and_merge_meshes": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.transform_mesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.squeeze_mesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.Mesh.rr_visualize": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.scale": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.Mesh.cube_mesh": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 3}, "b3d.Mesh.shape": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.enumerative_proposals": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "b3d.bayes3d.likelihoods": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.likelihoods.PixelOutlier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"qualname": 9, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 3}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 34}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "b3d.bayes3d.model": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.model.ModelArgs": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 16}, "b3d.bayes3d.model.ModelArgs.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 20}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"qualname": 8, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "b3d.bayes3d.model.RGBDSensorModel": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 3}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "b3d.bayes3d.model.rgbd_sensor_model": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.model.get_poses_from_trace": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.model.get_object_ids_from_trace": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "b3d.bayes3d.scene_graph": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.camera": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.ImageShape": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.ScreenCoordinates": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.CameraCoordinates": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.DepthImage": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.CameraMatrix3x3": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.BoundingBox": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.camera.Intrinsics": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 12}, "b3d.camera.Intrinsics.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 132, "bases": 0, "doc": 16}, "b3d.camera.Intrinsics.width": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.height": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.fx": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.fy": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.cx": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.cy": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.near": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.far": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.Intrinsics.from_array": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.camera.Intrinsics.as_array": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "b3d.camera.Intrinsics.downscale": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.camera.RenderConfig": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 6}, "b3d.camera.RenderConfig.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 10}, "b3d.camera.RenderConfig.bg_color": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.camera.pixel_centers_from_shape": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 53}, "b3d.camera.camera_from_screen_and_depth": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 77}, "b3d.camera.camera_from_screen": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "b3d.camera.camera_from_depth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 94}, "b3d.camera.xyz_from_depth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 94}, "b3d.camera.unproject_depth": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 94}, "b3d.camera.screen_from_camera": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 72}, "b3d.camera.screen_from_xyz": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 72}, "b3d.camera.screen_from_world": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 16}, "b3d.camera.camera_matrix_from_intrinsics": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 30}, "b3d.camera.camera_rays_from_intrinsics": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 45}, "b3d.camera.canvas_from_intrinsics": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 40}, "b3d.camera.homogeneous_coordinates": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 39}, "b3d.camera.planar_coordinates": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 38}, "b3d.camera.rgb_for_point_from_img": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 53}, "b3d.camera.CAM_ALONG_X": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.dense_model": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 116}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 23}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 175, "bases": 0, "doc": 123}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 125, "bases": 0, "doc": 13}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 93}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 103}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 50}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 24}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 91}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 38}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 8}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 8}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 8}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.image_likelihood": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"qualname": 8, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.krays": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 13}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 17}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"qualname": 8, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 27}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"qualname": 2, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"qualname": 2, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 83}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"qualname": 3, "fullname": 9, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"qualname": 3, "fullname": 9, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 32}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 306, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 31, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 129}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"qualname": 4, "fullname": 10, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"qualname": 4, "fullname": 10, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 68, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 71, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"qualname": 6, "fullname": 12, "annotation": 0, "default_value": 71, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 67}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"qualname": 2, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 79, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 14, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 82, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 56}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"qualname": 2, "fullname": 8, "annotation": 8, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 92, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"qualname": 7, "fullname": 13, "annotation": 0, "default_value": 95, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"qualname": 8, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 141}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 42, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"qualname": 5, "fullname": 11, "annotation": 0, "default_value": 78, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"qualname": 9, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 110}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "b3d.chisight.particle_system": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 46, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.uniform_pose_args": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.latent_particle_model": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 30}, "b3d.chisight.particle_system.make_dense_gps_model": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 55}, "b3d.chisight.particle_system.visualize_particle_system": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 158, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.visualize_sparse_observation": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.visualize_dense_gps": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 3}, "b3d.chisight.particle_system.visualize_dense_observation": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.patch_tracking": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.patch_tracking.get_patches": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 13}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 13}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"qualname": 5, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 123, "bases": 0, "doc": 215}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.sparse": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 104}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 120, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"qualname": 3, "fullname": 8, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"qualname": 2, "fullname": 7, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"qualname": 3, "fullname": 8, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"qualname": 3, "fullname": 8, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"qualname": 3, "fullname": 8, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 13}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 34}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 16}, "b3d.chisight.sparse.dynamic_sfm": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.inv": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 643}, "b3d.chisight.sparse.gps_utils.logsumexp": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 395, "bases": 0, "doc": 217}, "b3d.chisight.sparse.gps_utils.logaddexp": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"qualname": 1, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"qualname": 1, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"qualname": 1, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.RayDirection": {"qualname": 1, "fullname": 6, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 8}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.bilinear": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 97}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 35}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 16}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 16}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 31}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 33}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"qualname": 2, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 26}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 28}, "b3d.chisight.sparse.gps_utils.IndexDist": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 36}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.index_dist": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 23}, "b3d.chisight.sparse.hgps_utils": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.hgps_utils.depreciated": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "b3d.chisight.sparse.sparse_gps_model": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 8}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 255}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"qualname": 1, "fullname": 7, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 10}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check": {"qualname": 0, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 46, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 19, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 46, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 46, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 24, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"qualname": 3, "fullname": 10, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"qualname": 4, "fullname": 11, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"qualname": 2, "fullname": 9, "annotation": 0, "default_value": 195, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 20, "signature": 0, "bases": 0, "doc": 3}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 173, "bases": 0, "doc": 239}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 316}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"qualname": 1, "fullname": 8, "annotation": 0, "default_value": 3028, "signature": 0, "bases": 0, "doc": 3}, "b3d.colors": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.colors.rgb_to_lab": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.colors.lab_to_rgb": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.colors.labd_to_rgbd": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.colors.rgbd_to_labd": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.colors.rgb_to_hsv": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.colors.cie94_err": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 3}, "b3d.colors.ciede2000_err": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 54}, "b3d.colors.color_error_helper": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "b3d.io": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 122}, "b3d.io.MeshData.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 149, "bases": 0, "doc": 3}, "b3d.io.MeshData.vertices_positions": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.vertices_normals": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.vertices_uv": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.triangles": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.triangles_materials": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.materials": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.MeshData.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.MeshData.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.FeatureTrackData": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 260}, "b3d.io.FeatureTrackData.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 284, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"qualname": 4, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.keypoint_visibility": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.camera_intrinsics": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.rgbd_images": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.fps": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.observed_features": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"qualname": 4, "fullname": 6, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"qualname": 4, "fullname": 6, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.object_assignments": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.camera_position": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.camera_quaternion": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.num_frames": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.num_keypoints": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.shape": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.uv": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.vis": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.rgb": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.visibility": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.rgbd": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.camera_poses": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.intrinsics": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "b3d.io.FeatureTrackData.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.FeatureTrackData.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.FeatureTrackData.slice_time": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 7}, "b3d.io.FeatureTrackData.downscale": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 11}, "b3d.io.FeatureTrackData.has_depth_channel": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"qualname": 9, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 33}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "b3d.io.FeatureTrackData.quick_plot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "b3d.io.VideoInput": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 464}, "b3d.io.VideoInput.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 3}, "b3d.io.VideoInput.rgb": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.xyz": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.camera_positions": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.camera_quaternions": {"qualname": 3, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"qualname": 4, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.camera_intrinsics_depth": {"qualname": 4, "fullname": 6, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.z": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.depth": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.rgbd": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.fps": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.io.VideoInput.to_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.io.VideoInput.save": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.VideoInput.save_in_timeframe": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 12}, "b3d.io.VideoInput.load": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 6}, "b3d.io.VideoInput.rgb_float": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Array": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 143}, "b3d.pose.core.Array.dtype": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.pose.core.Array.ndim": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.pose.core.Array.size": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.pose.core.Array.shape": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.pose.core.Array.addressable_data": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "b3d.pose.core.Array.addressable_shards": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.pose.core.Array.global_shards": {"qualname": 3, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.pose.core.Array.is_fully_addressable": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "b3d.pose.core.Array.is_fully_replicated": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.pose.core.Array.sharding": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.pose.core.Array.all": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 263}, "b3d.pose.core.Array.any": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 279}, "b3d.pose.core.Array.argmax": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.pose.core.Array.argmin": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.pose.core.Array.argpartition": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 365}, "b3d.pose.core.Array.argsort": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 220}, "b3d.pose.core.Array.astype": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 224, "bases": 0, "doc": 59}, "b3d.pose.core.Array.choose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 233, "bases": 0, "doc": 566}, "b3d.pose.core.Array.clip": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 280, "bases": 0, "doc": 28}, "b3d.pose.core.Array.conj": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.pose.core.Array.conjugate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.pose.core.Array.compress": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 334, "bases": 0, "doc": 26}, "b3d.pose.core.Array.copy": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 178}, "b3d.pose.core.Array.cumprod": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 186}, "b3d.pose.core.Array.cumsum": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 228}, "b3d.pose.core.Array.diagonal": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 558}, "b3d.pose.core.Array.dot": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 386, "bases": 0, "doc": 810}, "b3d.pose.core.Array.flatten": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.pose.core.Array.item": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 17}, "b3d.pose.core.Array.max": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.pose.core.Array.mean": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 352, "bases": 0, "doc": 304}, "b3d.pose.core.Array.min": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.pose.core.Array.nonzero": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 315, "bases": 0, "doc": 1065}, "b3d.pose.core.Array.prod": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 391}, "b3d.pose.core.Array.ptp": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 180, "bases": 0, "doc": 299}, "b3d.pose.core.Array.ravel": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.pose.core.Array.repeat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 230, "bases": 0, "doc": 197}, "b3d.pose.core.Array.reshape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 28}, "b3d.pose.core.Array.round": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 46}, "b3d.pose.core.Array.searchsorted": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 242, "bases": 0, "doc": 327}, "b3d.pose.core.Array.sort": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 134}, "b3d.pose.core.Array.squeeze": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 132}, "b3d.pose.core.Array.std": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 330}, "b3d.pose.core.Array.sum": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 406}, "b3d.pose.core.Array.swapaxes": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 139}, "b3d.pose.core.Array.take": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 373, "bases": 0, "doc": 415}, "b3d.pose.core.Array.trace": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 239, "bases": 0, "doc": 302}, "b3d.pose.core.Array.transpose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 26}, "b3d.pose.core.Array.var": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 337}, "b3d.pose.core.Array.view": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 548}, "b3d.pose.core.Array.flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.pose.core.Array.T": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 873}, "b3d.pose.core.Array.mT": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 398}, "b3d.pose.core.Array.real": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.pose.core.Array.imag": {"qualname": 2, "fullname": 5, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.pose.core.Array.nbytes": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "b3d.pose.core.Array.itemsize": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.pose.core.Array.at": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 989}, "b3d.pose.core.Float": {"qualname": 1, "fullname": 4, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Int": {"qualname": 1, "fullname": 4, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Quaternion": {"qualname": 1, "fullname": 4, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.multiply_quats": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.pose.core.multiply_quat_and_vec": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.pose.core.choose_good_quat": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 64}, "b3d.pose.core.sample_uniform_pose": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.pose.core.logpdf_uniform_pose": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.pose.core.sample_gaussian_vmf_pose": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.pose.core.camera_from_position_and_target": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 64}, "b3d.pose.core.Pose": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.pose.core.Pose.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 16}, "b3d.pose.core.Pose.identity_quaternion": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.unit_quaternion": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.pos": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.position": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.xyzw": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.quat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.quaternion": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.wxyz": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.rot": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.normalize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.canonical": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 58}, "b3d.pose.core.Pose.flatten": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.tree_flatten": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.tree_unflatten": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.copy": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.flat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.shape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.reshape": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.slice": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.as_matrix": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "b3d.pose.core.Pose.identity": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.pose.core.Pose.eye": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.pose.core.Pose.id": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 7}, "b3d.pose.core.Pose.apply": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 7}, "b3d.pose.core.Pose.compose": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 7}, "b3d.pose.core.Pose.scale": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.concatenate_poses": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.concat": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.stack_poses": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.split": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.inv": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "b3d.pose.core.Pose.inverse": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60}, "b3d.pose.core.Pose.from_matrix": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "b3d.pose.core.Pose.from_xyzw": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "b3d.pose.core.Pose.from_quat": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "b3d.pose.core.Pose.from_pos": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 13}, "b3d.pose.core.Pose.from_translation": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 13}, "b3d.pose.core.Pose.from_vec": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 47}, "b3d.pose.core.Pose.from_pos_matrix": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 13}, "b3d.pose.core.Pose.from_position_and_target": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 64}, "b3d.pose.core.Pose.sample_uniform_pose": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"qualname": 5, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 83}, "b3d.pose.pose_utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 34}, "b3d.pose.pose_utils.volume_of_3_ball": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"qualname": 6, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 130}, "b3d.pose.pose_utils.UniformPoseInBall": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 3}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 63}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.Renderer": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 56}, "b3d.renderer.Renderer.renderer_env": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.num_layers": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.from_intrinsics_object": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.get_intrinsics_object": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.set_intrinsics": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.interpolate_many": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.interpolate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 3}, "b3d.renderer.Renderer.rasterize_many": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 261}, "b3d.renderer.Renderer.rasterize": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 176}, "b3d.renderer.Renderer.render_attribute_many": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 175}, "b3d.renderer.Renderer.render_attribute": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 170}, "b3d.renderer.RendererOriginal": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 56}, "b3d.renderer.RendererOriginal.renderer_env": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.set_intrinsics": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.rasterize_many": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.rasterize": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.rasterize_original": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.interpolate_many": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.interpolate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.render_many": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.render": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.render_rgbd": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.types": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Shape": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Array": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 143}, "b3d.types.Array.dtype": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.types.Array.ndim": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.types.Array.size": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.types.Array.shape": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.types.Array.addressable_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "b3d.types.Array.addressable_shards": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.types.Array.global_shards": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.types.Array.is_fully_addressable": {"qualname": 4, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "b3d.types.Array.is_fully_replicated": {"qualname": 4, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.types.Array.sharding": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.types.Array.all": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 263}, "b3d.types.Array.any": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 279}, "b3d.types.Array.argmax": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.types.Array.argmin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.types.Array.argpartition": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 365}, "b3d.types.Array.argsort": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 220}, "b3d.types.Array.astype": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 224, "bases": 0, "doc": 59}, "b3d.types.Array.choose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 233, "bases": 0, "doc": 566}, "b3d.types.Array.clip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 280, "bases": 0, "doc": 28}, "b3d.types.Array.conj": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.types.Array.conjugate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.types.Array.compress": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 334, "bases": 0, "doc": 26}, "b3d.types.Array.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 178}, "b3d.types.Array.cumprod": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 186}, "b3d.types.Array.cumsum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 228}, "b3d.types.Array.diagonal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 558}, "b3d.types.Array.dot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 386, "bases": 0, "doc": 810}, "b3d.types.Array.flatten": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.types.Array.item": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 17}, "b3d.types.Array.max": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.types.Array.mean": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 352, "bases": 0, "doc": 304}, "b3d.types.Array.min": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.types.Array.nonzero": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 315, "bases": 0, "doc": 1065}, "b3d.types.Array.prod": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 391}, "b3d.types.Array.ptp": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 180, "bases": 0, "doc": 299}, "b3d.types.Array.ravel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.types.Array.repeat": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 230, "bases": 0, "doc": 197}, "b3d.types.Array.reshape": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 28}, "b3d.types.Array.round": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 46}, "b3d.types.Array.searchsorted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 242, "bases": 0, "doc": 327}, "b3d.types.Array.sort": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 134}, "b3d.types.Array.squeeze": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 132}, "b3d.types.Array.std": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 330}, "b3d.types.Array.sum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 406}, "b3d.types.Array.swapaxes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 139}, "b3d.types.Array.take": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 373, "bases": 0, "doc": 415}, "b3d.types.Array.trace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 239, "bases": 0, "doc": 302}, "b3d.types.Array.transpose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 26}, "b3d.types.Array.var": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 337}, "b3d.types.Array.view": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 548}, "b3d.types.Array.flat": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.types.Array.T": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 873}, "b3d.types.Array.mT": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 398}, "b3d.types.Array.real": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.types.Array.imag": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.types.Array.nbytes": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "b3d.types.Array.itemsize": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.types.Array.at": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 989}, "b3d.types.Bool": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Float": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Int": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Quaternion": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Indexer": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 6, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Matrix": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Vector": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Direction": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.GaussianParticle": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Key": {"qualname": 1, "fullname": 3, "annotation": 2, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.Pytree": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 539}, "b3d.types.GenerativeFunction.handle_kwargs": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction.get_trace_shape": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction.get_empty_trace": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction.gfi_boundary": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction.simulate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 316}, "b3d.types.GenerativeFunction.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 276, "bases": 0, "doc": 968}, "b3d.types.GenerativeFunction.assess": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 244}, "b3d.types.GenerativeFunction.importance": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 179, "bases": 0, "doc": 239}, "b3d.types.GenerativeFunction.propose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 153, "bases": 0, "doc": 64}, "b3d.types.GenerativeFunction.treescope_color": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 64}, "b3d.types.GenerativeFunction.vmap": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 190}, "b3d.types.GenerativeFunction.repeat": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 184}, "b3d.types.GenerativeFunction.scan": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 953}, "b3d.types.GenerativeFunction.accumulate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 619}, "b3d.types.GenerativeFunction.reduce": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 567}, "b3d.types.GenerativeFunction.iterate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 496}, "b3d.types.GenerativeFunction.iterate_final": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 464}, "b3d.types.GenerativeFunction.mask": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 172}, "b3d.types.GenerativeFunction.or_else": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 85, "bases": 0, "doc": 196}, "b3d.types.GenerativeFunction.switch": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 177}, "b3d.types.GenerativeFunction.mix": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 234}, "b3d.types.GenerativeFunction.dimap": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 158, "bases": 0, "doc": 245}, "b3d.types.GenerativeFunction.map": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 149}, "b3d.types.GenerativeFunction.contramap": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 107, "bases": 0, "doc": 179}, "b3d.types.GenerativeFunction.marginal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 101, "bases": 0, "doc": 3}, "b3d.types.GenerativeFunction.target": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "b3d.types.NamedArgs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.types.NamedArgs.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.types.NamedArgs.tree_flatten": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.types.NamedArgs.tree_unflatten": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "b3d.utils.get_root_path": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "b3d.utils.get_assets": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 12}, "b3d.utils.get_assets_path": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 12}, "b3d.utils.make_assets_path": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.get_shared": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 12}, "b3d.utils.get_gcloud_bucket_ref": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 3}, "b3d.utils.keysplit": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "b3d.utils.split_key": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.resize_image_nearest": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.utils.resize_image_nearest_vmap": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.utils.resize_image_linear": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.utils.resize_image_linear_vmap": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.utils.clip_rgb": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.downsize_images": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 12}, "b3d.utils.xyz_from_depth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "b3d.utils.xyz_from_depth_vectorized": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "b3d.utils.xyz_to_pixel_coordinates": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "b3d.utils.segment_point_cloud": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "b3d.utils.aabb": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 35}, "b3d.utils.pad_with_1": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.get_rgb_pil_image": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 42}, "b3d.utils.viz_rgb": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 42}, "b3d.utils.overlay_image": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 36}, "b3d.utils.make_gif_from_pil_images": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 31}, "b3d.utils.make_video_from_pil_images": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "b3d.utils.vstack_images": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.utils.hstack_images": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 28}, "b3d.utils.multi_panel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 84}, "b3d.utils.make_onehot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "b3d.utils.multivmap": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "b3d.utils.update_choices": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 3}, "b3d.utils.update_choices_get_score": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "b3d.utils.enumerate_choices": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 25}, "b3d.utils.enumerate_choices_get_scores": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "b3d.utils.grid1": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "b3d.utils.grid2": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 66}, "b3d.utils.grid3": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 101}, "b3d.utils.grid4": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 136}, "b3d.utils.grid_trace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "b3d.utils.nn_background_segmentation": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.rr_log_pose": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 3}, "b3d.utils.rr_init": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "b3d.utils.rr_log_rgb": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.utils.rr_log_depth": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.utils.rr_log_mask": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.utils.rr_log_rgbd": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.utils.rr_log_cloud": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "b3d.utils.rr_set_time": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.utils.reload": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.normalize_log_scores": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 19}, "b3d.utils.Array": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 143}, "b3d.utils.Array.dtype": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.utils.Array.ndim": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.utils.Array.size": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "b3d.utils.Array.shape": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.utils.Array.addressable_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 14}, "b3d.utils.Array.addressable_shards": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.utils.Array.global_shards": {"qualname": 3, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.utils.Array.is_fully_addressable": {"qualname": 4, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 78}, "b3d.utils.Array.is_fully_replicated": {"qualname": 4, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "b3d.utils.Array.sharding": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "b3d.utils.Array.all": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 263}, "b3d.utils.Array.any": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 279, "bases": 0, "doc": 279}, "b3d.utils.Array.argmax": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.utils.Array.argmin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 160, "bases": 0, "doc": 165}, "b3d.utils.Array.argpartition": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 365}, "b3d.utils.Array.argsort": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 220}, "b3d.utils.Array.astype": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 224, "bases": 0, "doc": 59}, "b3d.utils.Array.choose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 233, "bases": 0, "doc": 566}, "b3d.utils.Array.clip": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 280, "bases": 0, "doc": 28}, "b3d.utils.Array.conj": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.utils.Array.conjugate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 95}, "b3d.utils.Array.compress": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 334, "bases": 0, "doc": 26}, "b3d.utils.Array.copy": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 118, "bases": 0, "doc": 178}, "b3d.utils.Array.cumprod": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 186}, "b3d.utils.Array.cumsum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 235, "bases": 0, "doc": 228}, "b3d.utils.Array.diagonal": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 148, "bases": 0, "doc": 558}, "b3d.utils.Array.dot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 386, "bases": 0, "doc": 810}, "b3d.utils.Array.flatten": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.utils.Array.item": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 17}, "b3d.utils.Array.max": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.utils.Array.mean": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 352, "bases": 0, "doc": 304}, "b3d.utils.Array.min": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 366, "bases": 0, "doc": 274}, "b3d.utils.Array.nonzero": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 315, "bases": 0, "doc": 1065}, "b3d.utils.Array.prod": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 391}, "b3d.utils.Array.ptp": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 180, "bases": 0, "doc": 299}, "b3d.utils.Array.ravel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 476}, "b3d.utils.Array.repeat": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 230, "bases": 0, "doc": 197}, "b3d.utils.Array.reshape": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 28}, "b3d.utils.Array.round": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 130, "bases": 0, "doc": 46}, "b3d.utils.Array.searchsorted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 242, "bases": 0, "doc": 327}, "b3d.utils.Array.sort": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 199, "bases": 0, "doc": 134}, "b3d.utils.Array.squeeze": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 140, "bases": 0, "doc": 132}, "b3d.utils.Array.std": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 330}, "b3d.utils.Array.sum": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 458, "bases": 0, "doc": 406}, "b3d.utils.Array.swapaxes": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 139}, "b3d.utils.Array.take": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 373, "bases": 0, "doc": 415}, "b3d.utils.Array.trace": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 239, "bases": 0, "doc": 302}, "b3d.utils.Array.transpose": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 26}, "b3d.utils.Array.var": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 370, "bases": 0, "doc": 337}, "b3d.utils.Array.view": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 548}, "b3d.utils.Array.flat": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "b3d.utils.Array.T": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 873}, "b3d.utils.Array.mT": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 398}, "b3d.utils.Array.real": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.utils.Array.imag": {"qualname": 2, "fullname": 4, "annotation": 3, "default_value": 0, "signature": 0, "bases": 0, "doc": 90}, "b3d.utils.Array.nbytes": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "b3d.utils.Array.itemsize": {"qualname": 2, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "b3d.utils.Array.at": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 989}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"qualname": 8, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "b3d.utils.all_pairs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "b3d.utils.distinct_colors": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 33}, "b3d.utils.fit_plane": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "b3d.utils.fit_table_plane": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "b3d.utils.separate_shared_vertices": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 31}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 27}, "b3d.utils.HIINTERFACE": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "b3d.utils.carvekit_get_foreground_mask": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "b3d.utils.discretize": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 7}, "b3d.utils.voxelize": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 26}, "b3d.utils.voxel_occupied_occluded_free": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 3}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"qualname": 6, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 31}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"qualname": 7, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 69, "bases": 0, "doc": 31}, "b3d.utils.make_grid_points": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}}, "length": 929, "save": true}, "index": {"qualname": {"root": {"1": {"docs": {"b3d.utils.pad_with_1": {"tf": 1}}, "df": 1}, "2": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 3}}, "3": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}}, "df": 1}, "docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}}, "df": 35, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer": {"tf": 1}, "b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.renderer_env": {"tf": 1.4142135623730951}, "b3d.Renderer.num_layers": {"tf": 1}, "b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.Renderer": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.renderer_env": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.num_layers": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}}, "df": 28, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.RendererOriginal": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}}, "df": 32}}}}}}}}}, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.reshape": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.reload": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.real": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}}, "df": 12}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.camera.camera_rays_from_intrinsics": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}}, "df": 23, "d": {"docs": {"b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}}, "df": 20, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 11}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.rot": {"tf": 1}, "b3d.Rot": {"tf": 1}, "b3d.pose.core.Pose.rot": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.round": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.get_root_path": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}}, "df": 36}}, "t": {"docs": {"b3d.pose.core.Int": {"tf": 1}, "b3d.types.Int": {"tf": 1}}, "df": 2, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}}, "df": 28}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}}, "df": 5}}}}}}}}}}, "v": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.Indexer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {"b3d.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 3, "e": {"docs": {"b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}}, "df": 12, "s": {"docs": {"b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.ImageShape": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 7}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.item": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"b3d.Renderer.renderer_env": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.Renderer.renderer_env": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}}, "df": 3}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.color_error_helper": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.num_layers": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.renderer.Renderer.num_layers": {"tf": 1}}, "df": 12}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"b3d.io.MeshData.vertices_normals": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.NamedArgs": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.Intrinsics.near": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.num_layers": {"tf": 1}, "b3d.renderer.Renderer.num_layers": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {"b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}}, "df": 2, "d": {"docs": {"b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 18, "s": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}}, "df": 5}}}}}}}}}}, "f": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 59}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"0": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.num_frames": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Pose.flat": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput.rgb_float": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.types.Float": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.faces": {"tf": 1}, "b3d.Mesh.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"b3d.camera.Intrinsics.far": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.from_obj_file": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 2}}, "x": {"docs": {"b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}}, "df": 2}, "y": {"docs": {"b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}, "b3d.io.FeatureTrackData.vis": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 33}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}}, "df": 17, "s": {"docs": {"b3d.MeshLibrary.objects": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.make_onehot": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 48}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 14, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GaussianParticle": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {"b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {"b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"b3d.utils.make_gif_from_pil_images": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"1": {"docs": {"b3d.utils.grid1": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.utils.grid2": {"tf": 1}}, "df": 1}, "3": {"docs": {"b3d.utils.grid3": {"tf": 1}}, "df": 1}, "4": {"docs": {"b3d.utils.grid4": {"tf": 1}}, "df": 1}, "docs": {"b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 2}}}}, "s": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}}, "df": 1}, "3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}}, "df": 1}, "6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"3": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.shape": {"tf": 1}, "b3d.Mesh.shape": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Pose.shape": {"tf": 1}, "b3d.types.Shape": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.get_shared": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.slice": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.scale": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}}, "df": 3}}, "n": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.ScreenCoordinates": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 1}}, "d": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}}, "df": 30, "s": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.save": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 5}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.squeeze_mesh": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 12, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.marginal": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.Mesh": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.Mesh.vertices": {"tf": 1}, "b3d.Mesh.faces": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.save": {"tf": 1}, "b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.squeeze_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1.4142135623730951}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.shape": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 29, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.vertices": {"tf": 1}, "b3d.MeshLibrary.faces": {"tf": 1}, "b3d.MeshLibrary.ranges": {"tf": 1}, "b3d.MeshLibrary.attributes": {"tf": 1}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.MeshLibrary.objects": {"tf": 1}, "b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}}, "df": 30}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}}, "df": 10}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}}, "df": 25, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}}, "df": 8}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 6}}}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.utils.multivmap": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "n": {"docs": {"b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.MeshLibrary.attributes": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 14}, "y": {"docs": {"b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 9}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}}, "df": 13, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}}, "df": 6}, "x": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 179}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {"b3d.utils.aabb": {"tf": 1}}, "df": 1}}}}, "p": {"0": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}}, "df": 2}, "1": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose.pos": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.pos": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}}, "df": 6, "e": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.Pose.pos": {"tf": 1}, "b3d.Pose.position": {"tf": 1}, "b3d.Pose.xyzw": {"tf": 1}, "b3d.Pose.quat": {"tf": 1}, "b3d.Pose.quaternion": {"tf": 1}, "b3d.Pose.wxyz": {"tf": 1}, "b3d.Pose.rot": {"tf": 1}, "b3d.Pose.normalize": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.Pose.copy": {"tf": 1}, "b3d.Pose.flat": {"tf": 1}, "b3d.Pose.shape": {"tf": 1}, "b3d.Pose.reshape": {"tf": 1}, "b3d.Pose.slice": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.scale": {"tf": 1}, "b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.concat": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.Pose.split": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.pos": {"tf": 1}, "b3d.pose.core.Pose.position": {"tf": 1}, "b3d.pose.core.Pose.xyzw": {"tf": 1}, "b3d.pose.core.Pose.quat": {"tf": 1}, "b3d.pose.core.Pose.quaternion": {"tf": 1}, "b3d.pose.core.Pose.wxyz": {"tf": 1}, "b3d.pose.core.Pose.rot": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.pose.core.Pose.flat": {"tf": 1}, "b3d.pose.core.Pose.shape": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}}, "df": 114, "s": {"docs": {"b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.position": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.position": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {"b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}}, "df": 3}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.propose": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}}, "df": 10, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {"b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}}, "df": 3}}, "d": {"docs": {"b3d.utils.pad_with_1": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.all_pairs": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.planar_coordinates": {"tf": 1}}, "df": 1}}, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}}, "df": 1, "p": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.Pytree": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.quat": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.quat": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.Pose.quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.quaternion": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 3}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 7}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.unproject_depth": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {"b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}}, "df": 2}}, "x": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 7, "w": {"docs": {"b3d.Pose.xyzw": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.Pose.wxyz": {"tf": 1}, "b3d.pose.core.Pose.wxyz": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.utils.pad_with_1": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.camera.screen_from_world": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.Intrinsics.height": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.color_error_helper": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 1}}, "s": {"docs": {"b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"b3d.colors.rgb_to_hsv": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.utils.hstack_images": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.HIINTERFACE": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 22, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.CameraCoordinates": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"3": {"docs": {}, "df": 0, "x": {"3": {"docs": {"b3d.camera.CameraMatrix3x3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.copy": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.cube_mesh": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {"b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}}, "df": 2}, "y": {"docs": {"b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "e": {"9": {"4": {"docs": {"b3d.colors.cie94_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"2": {"0": {"0": {"0": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "t": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 4, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 11}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.fit_table_plane": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 24, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.Vector": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.vertices": {"tf": 1}, "b3d.Mesh.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "f": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.vis": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}}, "df": 17}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}, "z": {"docs": {"b3d.utils.viz_rgb": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.voxelize": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.utils.vstack_images": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}}, "df": 13, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.distinct_colors": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.discretize": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput.to_dict": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.Direction": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.DepthImage": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.downsize_images": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 29}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}}, "df": 5}}}, "q": {"docs": {"b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"b3d.camera.BoundingBox": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.Bool": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"b3d.camera.RenderConfig.bg_color": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}}, "df": 3}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.types.Key": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.keysplit": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}}, "df": 1}}}}}}}}, "fullname": {"root": {"1": {"docs": {"b3d.utils.pad_with_1": {"tf": 1}}, "df": 1}, "2": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 3}}, "3": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}}, "df": 1}, "docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}}, "df": 35, "b": {"3": {"docs": {}, "df": 0, "d": {"docs": {"b3d": {"tf": 1}, "b3d.Renderer": {"tf": 1}, "b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.renderer_env": {"tf": 1}, "b3d.Renderer.num_layers": {"tf": 1}, "b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.Pose": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.Pose.pos": {"tf": 1}, "b3d.Pose.position": {"tf": 1}, "b3d.Pose.xyzw": {"tf": 1}, "b3d.Pose.quat": {"tf": 1}, "b3d.Pose.quaternion": {"tf": 1}, "b3d.Pose.wxyz": {"tf": 1}, "b3d.Pose.rot": {"tf": 1}, "b3d.Pose.normalize": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.Pose.copy": {"tf": 1}, "b3d.Pose.flat": {"tf": 1}, "b3d.Pose.shape": {"tf": 1}, "b3d.Pose.reshape": {"tf": 1}, "b3d.Pose.slice": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.scale": {"tf": 1}, "b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.concat": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.Pose.split": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.Rot": {"tf": 1}, "b3d.MeshLibrary": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.vertices": {"tf": 1}, "b3d.MeshLibrary.faces": {"tf": 1}, "b3d.MeshLibrary.ranges": {"tf": 1}, "b3d.MeshLibrary.attributes": {"tf": 1}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.MeshLibrary.objects": {"tf": 1}, "b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.Mesh.vertices": {"tf": 1}, "b3d.Mesh.faces": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.save": {"tf": 1}, "b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1}, "b3d.Mesh.squeeze_mesh": {"tf": 1}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 1}, "b3d.Mesh.shape": {"tf": 1}, "b3d.bayes3d": {"tf": 1}, "b3d.bayes3d.enumerative_proposals": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.likelihoods": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.mesh_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.model": {"tf": 1}, "b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.bayes3d.scene_graph": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.camera": {"tf": 1}, "b3d.camera.ImageShape": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 1}, "b3d.chisight": {"tf": 1}, "b3d.chisight.dense": {"tf": 1}, "b3d.chisight.dense.dense_model": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.dense.likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.chisight.particle_system": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}, "b3d.chisight.patch_tracking": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_sfm": {"tf": 1}, "b3d.chisight.sparse.gps_utils": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.hgps_utils": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}, "b3d.colors": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.io": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}, "b3d.io.FeatureTrackData.vis": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}, "b3d.pose": {"tf": 1}, "b3d.pose.core": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.multiply_quats": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.pos": {"tf": 1}, "b3d.pose.core.Pose.position": {"tf": 1}, "b3d.pose.core.Pose.xyzw": {"tf": 1}, "b3d.pose.core.Pose.quat": {"tf": 1}, "b3d.pose.core.Pose.quaternion": {"tf": 1}, "b3d.pose.core.Pose.wxyz": {"tf": 1}, "b3d.pose.core.Pose.rot": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.pose.core.Pose.flat": {"tf": 1}, "b3d.pose.core.Pose.shape": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}, "b3d.renderer": {"tf": 1}, "b3d.renderer.Renderer": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.renderer_env": {"tf": 1}, "b3d.renderer.Renderer.num_layers": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.types": {"tf": 1}, "b3d.types.Shape": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Indexer": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}, "b3d.types.GaussianParticle": {"tf": 1}, "b3d.types.Key": {"tf": 1}, "b3d.types.Pytree": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.types.NamedArgs": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}, "b3d.utils": {"tf": 1}, "b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1}, "b3d.utils.keysplit": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.pad_with_1": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.multivmap": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.nn_background_segmentation": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}, "b3d.utils.reload": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}, "b3d.utils.HIINTERFACE": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 929}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"3": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d": {"tf": 1}, "b3d.bayes3d.enumerative_proposals": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.likelihoods": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.mesh_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.model": {"tf": 1}, "b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.bayes3d.scene_graph": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 49}}, "docs": {}, "df": 0}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 4}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"b3d.camera.BoundingBox": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.Bool": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"b3d.camera.RenderConfig.bg_color": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}}, "df": 17}}}, "y": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer": {"tf": 1}, "b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.renderer_env": {"tf": 1.4142135623730951}, "b3d.Renderer.num_layers": {"tf": 1}, "b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.renderer": {"tf": 1}, "b3d.renderer.Renderer": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.renderer_env": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.num_layers": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.interpolate": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}}, "df": 76, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.RendererOriginal": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}}, "df": 32}}}}}}}}}, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}}, "df": 3}}}}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.reshape": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.reload": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.real": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 24}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}}, "df": 12}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.camera.camera_rays_from_intrinsics": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}}, "df": 23, "d": {"docs": {"b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}}, "df": 20, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 11}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.rot": {"tf": 1}, "b3d.Rot": {"tf": 1}, "b3d.pose.core.Pose.rot": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.round": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.get_root_path": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}}, "df": 36}}, "t": {"docs": {"b3d.pose.core.Int": {"tf": 1}, "b3d.types.Int": {"tf": 1}}, "df": 2, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}}, "df": 28}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}}, "df": 5}}}}}}}}}}, "v": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.Indexer": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {"b3d.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 3, "e": {"docs": {"b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}}, "df": 13, "s": {"docs": {"b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}}, "df": 6, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.ImageShape": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 7}, "o": {"docs": {"b3d.io": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}, "b3d.io.FeatureTrackData.vis": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}}, "df": 61}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.item": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"b3d.Renderer.renderer_env": {"tf": 1}, "b3d.RendererOriginal.renderer_env": {"tf": 1}, "b3d.renderer.Renderer.renderer_env": {"tf": 1}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}}, "df": 3}}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.color_error_helper": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.num_layers": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.renderer.Renderer.num_layers": {"tf": 1}}, "df": 12}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"b3d.io.MeshData.vertices_normals": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.NamedArgs": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.Intrinsics.near": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.num_layers": {"tf": 1}, "b3d.renderer.Renderer.num_layers": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {"b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}}, "df": 2, "d": {"docs": {"b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 12, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 18, "s": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}}, "df": 17}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1.4142135623730951}}, "df": 21, "s": {"docs": {"b3d.bayes3d.likelihoods": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.chisight.dense.likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}}, "df": 95}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 59}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"0": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.num_frames": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Pose.flat": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput.rgb_float": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.types.Float": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.faces": {"tf": 1}, "b3d.Mesh.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"b3d.camera.Intrinsics.far": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.from_obj_file": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 2}}, "x": {"docs": {"b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}}, "df": 2}, "y": {"docs": {"b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}, "b3d.io.FeatureTrackData.vis": {"tf": 1}, "b3d.io.FeatureTrackData.rgb": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 33}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}}, "df": 17, "s": {"docs": {"b3d.MeshLibrary.objects": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 56}}}}, "f": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.make_onehot": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 48}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 27}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 20, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GaussianParticle": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {"b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"b3d.bayes3d.scene_graph": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"1": {"docs": {"b3d.utils.grid1": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.utils.grid2": {"tf": 1}}, "df": 1}, "3": {"docs": {"b3d.utils.grid3": {"tf": 1}}, "df": 1}, "4": {"docs": {"b3d.utils.grid4": {"tf": 1}}, "df": 1}, "docs": {"b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 97}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {"b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.get_gcloud_bucket_ref": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"b3d.utils.make_gif_from_pil_images": {"tf": 1}}, "df": 1}}}, "s": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}}, "df": 1}, "3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}}, "df": 1}, "6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"3": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.shape": {"tf": 1}, "b3d.Mesh.shape": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.io.FeatureTrackData.shape": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Pose.shape": {"tf": 1}, "b3d.types.Shape": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.get_shared": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.slice": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.scale": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}}, "df": 3}}, "n": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.scene_graph": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.ScreenCoordinates": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 1}}, "d": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}}, "df": 3}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.sparse": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_sfm": {"tf": 1}, "b3d.chisight.sparse.gps_utils": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.hgps_utils": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 124, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}}, "df": 30, "s": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.save": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 5}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.squeeze_mesh": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.particle_system": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 10}}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_sfm": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}}, "df": 14}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 12, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.marginal": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.Mesh": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.Mesh.vertices": {"tf": 1}, "b3d.Mesh.faces": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.save": {"tf": 1}, "b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.squeeze_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1.4142135623730951}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.Mesh.shape": {"tf": 1}, "b3d.bayes3d.mesh_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 45, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.vertices": {"tf": 1}, "b3d.MeshLibrary.faces": {"tf": 1}, "b3d.MeshLibrary.ranges": {"tf": 1}, "b3d.MeshLibrary.attributes": {"tf": 1}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.MeshLibrary.objects": {"tf": 1}, "b3d.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}}, "df": 30}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}}, "df": 10}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model": {"tf": 1}, "b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.dense.dense_model": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 76, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}}, "df": 8}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 6}}}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.utils.multivmap": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 5, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "n": {"docs": {"b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 8, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.MeshLibrary.attributes": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 14}, "y": {"docs": {"b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 5, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 9}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}}, "df": 13, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}}, "df": 6}, "x": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 179}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {"b3d.utils.aabb": {"tf": 1}}, "df": 1}}}}, "p": {"0": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}}, "df": 2}, "1": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose.pos": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.pos": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}}, "df": 6, "e": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.Pose.pos": {"tf": 1}, "b3d.Pose.position": {"tf": 1}, "b3d.Pose.xyzw": {"tf": 1}, "b3d.Pose.quat": {"tf": 1}, "b3d.Pose.quaternion": {"tf": 1}, "b3d.Pose.wxyz": {"tf": 1}, "b3d.Pose.rot": {"tf": 1}, "b3d.Pose.normalize": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.Pose.copy": {"tf": 1}, "b3d.Pose.flat": {"tf": 1}, "b3d.Pose.shape": {"tf": 1}, "b3d.Pose.reshape": {"tf": 1}, "b3d.Pose.slice": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.scale": {"tf": 1}, "b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.concat": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.Pose.split": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.pose": {"tf": 1}, "b3d.pose.core": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.multiply_quats": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.pos": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.position": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.xyzw": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.quaternion": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.wxyz": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.rot": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.normalize": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.flat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.shape": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.reshape": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.slice": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.as_matrix": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.identity": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.eye": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.id": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.apply": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.compose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.scale": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.concat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.stack_poses": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.split": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inverse": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_matrix": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_pos": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_translation": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_pose": {"tf": 1}}, "df": 192, "s": {"docs": {"b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.position": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.position": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.enumerative_proposals": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"b3d.types.GenerativeFunction.propose": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}}, "df": 3}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 15, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}}, "df": 3}}}}}}}}}}, "l": {"docs": {"b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}}, "df": 17, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.patch_tracking": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 1}}}}}}}}}}, "h": {"docs": {"b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}}, "df": 3}}, "d": {"docs": {"b3d.utils.pad_with_1": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.all_pairs": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.planar_coordinates": {"tf": 1}}, "df": 1}}, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}}, "df": 1, "p": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.Pytree": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.quat": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.quat": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.Pose.quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.quaternion": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 3}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 22, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 7}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.unproject_depth": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.hgps_utils": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.pose.pose_utils": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}, "b3d.utils": {"tf": 1}, "b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.make_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1}, "b3d.utils.keysplit": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.pad_with_1": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.multivmap": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.nn_background_segmentation": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}, "b3d.utils.reload": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}, "b3d.utils.HIINTERFACE": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 189}}}}, "v": {"docs": {"b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.FeatureTrackData.uv": {"tf": 1}}, "df": 2}}, "x": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 7, "w": {"docs": {"b3d.Pose.xyzw": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.Pose.wxyz": {"tf": 1}, "b3d.pose.core.Pose.wxyz": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.utils.pad_with_1": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.camera.screen_from_world": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.Intrinsics.height": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.color_error_helper": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 1}}, "s": {"docs": {"b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.hgps_utils": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"b3d.colors.rgb_to_hsv": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.utils.hstack_images": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.HIINTERFACE": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"b3d.camera": {"tf": 1}, "b3d.camera.ImageShape": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 55, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.CameraCoordinates": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"3": {"docs": {}, "df": 0, "x": {"3": {"docs": {"b3d.camera.CameraMatrix3x3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.carvekit_get_foreground_mask": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.copy": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.colors": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 13}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.multiply_quats": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1}, "b3d.pose.core.Pose.pos": {"tf": 1}, "b3d.pose.core.Pose.position": {"tf": 1}, "b3d.pose.core.Pose.xyzw": {"tf": 1}, "b3d.pose.core.Pose.quat": {"tf": 1}, "b3d.pose.core.Pose.quaternion": {"tf": 1}, "b3d.pose.core.Pose.wxyz": {"tf": 1}, "b3d.pose.core.Pose.rot": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.pose.core.Pose.flat": {"tf": 1}, "b3d.pose.core.Pose.shape": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 119}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.cube_mesh": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {"b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}}, "df": 2}, "y": {"docs": {"b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight": {"tf": 1}, "b3d.chisight.dense": {"tf": 1}, "b3d.chisight.dense.dense_model": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.dense.likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.chisight.particle_system": {"tf": 1}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}, "b3d.chisight.patch_tracking": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}, "b3d.chisight.sparse": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_sfm": {"tf": 1}, "b3d.chisight.sparse.gps_utils": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.hgps_utils": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 264}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 24}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "e": {"9": {"4": {"docs": {"b3d.colors.cie94_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"2": {"0": {"0": {"0": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "t": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 4, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 14, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 11}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.patch_tracking": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.fit_table_plane": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.labd_to_rgbd": {"tf": 1}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 24, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}}, "df": 4}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types": {"tf": 1}, "b3d.types.Shape": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Indexer": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}, "b3d.types.GaussianParticle": {"tf": 1}, "b3d.types.Key": {"tf": 1}, "b3d.types.Pytree": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.types.NamedArgs": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 103}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.Vector": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.vertices": {"tf": 1}, "b3d.Mesh.vertices": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.Mesh.vertex_attributes": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 4}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}, "f": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.vis": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.visibility": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.io.VideoInput.rgbd": {"tf": 1}, "b3d.io.VideoInput.fps": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.io.VideoInput.rgb_float": {"tf": 1}}, "df": 17}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}, "z": {"docs": {"b3d.utils.viz_rgb": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.voxelize": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.utils.vstack_images": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}}, "df": 32, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}}, "df": 13, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.distinct_colors": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.discretize": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput.to_dict": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.Direction": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.io.VideoInput.depth": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.DepthImage": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense": {"tf": 1}, "b3d.chisight.dense.dense_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.dense.likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 128}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.downsize_images": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_sfm": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 32, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 29}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}}, "df": 5}}}, "q": {"docs": {"b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}}, "df": 3}}}}}, "z": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.io.VideoInput.z": {"tf": 1}}, "df": 3}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.types.Key": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.keysplit": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"b3d.chisight.dense.likelihoods.krays": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1.4142135623730951}}, "df": 10, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}}, "df": 1}}}}}}}}, "annotation": {"root": {"docs": {"b3d.camera.ImageShape": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Key": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1.4142135623730951}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 114, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.ImageShape": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Key": {"tf": 1}}, "df": 19}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.shape": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}}, "df": 3}}}}}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 41}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1}, "b3d.io.MeshData.vertices_positions": {"tf": 1}, "b3d.io.MeshData.vertices_normals": {"tf": 1}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.io.VideoInput.rgb": {"tf": 1}, "b3d.io.VideoInput.xyz": {"tf": 1}, "b3d.io.VideoInput.camera_positions": {"tf": 1}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 51}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}}, "df": 20}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 8}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 8, "t": {"docs": {"b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 12}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 8}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}}, "df": 10}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "default_value": {"root": {"0": {"0": {"6": {"3": {"7": {"7": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"4": {"0": {"6": {"0": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"0": {"8": {"3": {"6": {"4": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"4": {"3": {"4": {"3": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"7": {"7": {"6": {"3": {"5": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"8": {"9": {"0": {"5": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"1": {"0": {"0": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"3": {"2": {"4": {"3": {"3": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"8": {"2": {"5": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"5": {"5": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"6": {"0": {"5": {"3": {"4": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"6": {"5": {"2": {"0": {"3": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"2": {"6": {"2": {"7": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"0": {"0": {"7": {"3": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"2": {"8": {"2": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"3": {"3": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"1": {"2": {"8": {"6": {"7": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"4": {"3": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"1": {"0": {"8": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"3": {"1": {"0": {"5": {"3": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}, "7": {"7": {"8": {"7": {"0": {"2": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"4": {"4": {"1": {"5": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"4": {"5": {"5": {"9": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"6": {"3": {"1": {"1": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"2": {"4": {"5": {"5": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"6": {"1": {"2": {"3": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"3": {"4": {"1": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.Pose.identity_quaternion": {"tf": 1.7320508075688772}, "b3d.camera.CAM_ALONG_X": {"tf": 3.4641016151377544}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 12}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 5.744562646538029}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 13.228756555322953}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1.7320508075688772}}, "df": 30}, "1": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 6}}, "df": 3}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "1": {"4": {"1": {"6": {"9": {"1": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"6": {"9": {"8": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"8": {"9": {"8": {"2": {"6": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"5": {"0": {"2": {"0": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"0": {"0": {"8": {"1": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"9": {"6": {"3": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"3": {"2": {"2": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"9": {"5": {"0": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"1": {"1": {"6": {"5": {"8": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"8": {"5": {"4": {"4": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"4": {"3": {"1": {"8": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"8": {"0": {"4": {"1": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"3": {"1": {"4": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"6": {"8": {"3": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"4": {"0": {"8": {"8": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"2": {"5": {"2": {"4": {"9": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"5": {"4": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"6": {"8": {"3": {"1": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 2}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 8.366600265340756}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}}, "df": 17, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}}, "df": 1, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "2": {"0": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "1": {"1": {"7": {"0": {"9": {"1": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"7": {"6": {"6": {"8": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"6": {"5": {"9": {"5": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"4": {"2": {"4": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"0": {"1": {"6": {"3": {"0": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"1": {"8": {"2": {"2": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"9": {"3": {"4": {"4": {"8": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"8": {"0": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"1": {"7": {"0": {"5": {"0": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"4": {"2": {"3": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"3": {"5": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.605551275463989}}, "df": 4}, "6": {"5": {"9": {"8": {"9": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"1": {"4": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "8": {"5": {"9": {"3": {"1": {"8": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"2": {"1": {"8": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"9": {"8": {"9": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"8": {"3": {"7": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"0": {"3": {"6": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"3": {"5": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 7.14142842854285}}, "df": 7, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "3": {"0": {"1": {"0": {"6": {"7": {"5": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"5": {"7": {"9": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"1": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"5": {"3": {"3": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"9": {"5": {"6": {"1": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "3": {"1": {"0": {"3": {"4": {"1": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"9": {"7": {"1": {"0": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"4": {"2": {"8": {"6": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"6": {"8": {"7": {"0": {"6": {"9": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"4": {"2": {"8": {"1": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"1": {"7": {"2": {"4": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"8": {"4": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"2": {"9": {"1": {"8": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"9": {"5": {"1": {"5": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"1": {"6": {"8": {"0": {"3": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"8": {"4": {"5": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"5": {"1": {"9": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"4": {"0": {"0": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"8": {"4": {"7": {"8": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"2": {"6": {"6": {"9": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4}}, "df": 3, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "4": {"1": {"0": {"4": {"8": {"2": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"5": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"1": {"0": {"8": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"4": {"1": {"4": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"1": {"4": {"7": {"0": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"0": {"2": {"2": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"3": {"4": {"4": {"5": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"6": {"4": {"0": {"0": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"5": {"2": {"7": {"1": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"7": {"1": {"6": {"9": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"1": {"2": {"4": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"8": {"8": {"3": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "5": {"0": {"4": {"3": {"6": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"7": {"2": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"3": {"4": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4.242640687119285}}, "df": 2}, "1": {"9": {"4": {"4": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"7": {"3": {"7": {"6": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"5": {"1": {"3": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"8": {"1": {"8": {"2": {"2": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"5": {"5": {"5": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"0": {"8": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"5": {"2": {"4": {"7": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"6": {"1": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"8": {"4": {"9": {"9": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"6": {"6": {"6": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"1": {"0": {"0": {"5": {"4": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"1": {"9": {"6": {"4": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.605551275463989}}, "df": 5}, "6": {"0": {"0": {"9": {"4": {"9": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"2": {"0": {"8": {"9": {"7": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"9": {"9": {"4": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"0": {"0": {"7": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"2": {"7": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"2": {"4": {"4": {"9": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"0": {"6": {"6": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"0": {"7": {"6": {"2": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"3": {"6": {"6": {"3": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"2": {"3": {"7": {"3": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"6": {"1": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"1": {"7": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"8": {"0": {"2": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"3": {"3": {"5": {"1": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"7": {"9": {"4": {"6": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"8": {"0": {"0": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"2": {"7": {"7": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"6": {"3": {"9": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"4": {"8": {"2": {"5": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"7": {"7": {"9": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"5": {"9": {"8": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"5": {"9": {"6": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"8": {"9": {"7": {"0": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"4": {"7": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"6": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"7": {"4": {"1": {"2": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"3": {"2": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"7": {"6": {"7": {"7": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"6": {"2": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "7": {"0": {"3": {"4": {"6": {"8": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"1": {"0": {"7": {"2": {"5": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"4": {"4": {"9": {"0": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"6": {"0": {"6": {"7": {"7": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"1": {"9": {"7": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"6": {"5": {"7": {"9": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"0": {"4": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"1": {"8": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"1": {"7": {"0": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"7": {"1": {"1": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"5": {"3": {"3": {"6": {"7": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"2": {"4": {"0": {"0": {"8": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"0": {"6": {"1": {"5": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"8": {"6": {"4": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"0": {"9": {"3": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"7": {"6": {"0": {"1": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "8": {"0": {"0": {"1": {"0": {"9": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"2": {"7": {"4": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"9": {"1": {"5": {"0": {"0": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"0": {"3": {"6": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"5": {"0": {"7": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"0": {"0": {"6": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"2": {"6": {"3": {"6": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"1": {"0": {"9": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"2": {"5": {"3": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"2": {"7": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"9": {"0": {"5": {"4": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"0": {"0": {"8": {"4": {"0": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"6": {"7": {"9": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"2": {"4": {"2": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"6": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"5": {"2": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"6": {"2": {"0": {"0": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"9": {"4": {"6": {"2": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"3": {"1": {"6": {"1": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"6": {"6": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "9": {"0": {"4": {"8": {"3": {"3": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"7": {"6": {"9": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"3": {"0": {"4": {"0": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"3": {"7": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"4": {"3": {"6": {"3": {"2": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"9": {"8": {"1": {"9": {"0": {"3": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"5": {"0": {"0": {"2": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"2": {"8": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"6": {"1": {"1": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"1": {"5": {"5": {"9": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"8": {"5": {"9": {"4": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"5": {"4": {"5": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"4": {"2": {"4": {"5": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"2": {"7": {"5": {"6": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"4": {"3": {"9": {"9": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"1": {"9": {"2": {"2": {"9": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"3": {"8": {"3": {"3": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"6": {"4": {"7": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"0": {"3": {"0": {"9": {"2": {"6": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"5": {"3": {"5": {"5": {"6": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "+": {"0": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {"b3d.Pose.identity_quaternion": {"tf": 1.4142135623730951}, "b3d.Rot": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}, "b3d.camera.ImageShape": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 3.872983346207417}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 2}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 10.14889156509222}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}, "b3d.types.Shape": {"tf": 1.4142135623730951}, "b3d.types.Indexer": {"tf": 1.4142135623730951}, "b3d.types.Matrix": {"tf": 1.4142135623730951}, "b3d.types.Vector": {"tf": 1.4142135623730951}, "b3d.types.Direction": {"tf": 1.4142135623730951}}, "df": 63, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 13.341664064126334}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Indexer": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}, "b3d.types.Key": {"tf": 1}}, "df": 42}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 7.0710678118654755}}, "df": 21}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}}, "df": 8}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.8284271247461903}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 7}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1}, "b3d.types.GaussianParticle": {"tf": 1}, "b3d.types.Pytree": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.camera.CAM_ALONG_X": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 12.96148139681572}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}}, "df": 21}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.7320508075688772}}, "df": 9, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4}}, "df": 11, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.1622776601683795}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.385164807134504}}, "df": 20}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.8284271247461903}}, "df": 6}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"b3d.Pose.identity_quaternion": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 11.61895003862225}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1}}, "df": 19}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 7.54983443527075}}, "df": 21}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2.6457513110645907}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2.449489742783178}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.385164807134504}}, "df": 20}}}}}}}, "x": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Rot": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2.8284271247461903}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 3.4641016151377544}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 3.4641016151377544}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 3.7416573867739413}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 3.4641016151377544}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 2.449489742783178}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 3.605551275463989}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 15.556349186104045}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}}, "df": 26}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.196152422706632}}, "df": 17}}}}, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4.47213595499958}}, "df": 16}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.8284271247461903}}, "df": 14}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Rot": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 2}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.385164807134504}}, "df": 20}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.291502622129181}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "x": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "x": {"2": {"7": {"docs": {"b3d.Rot": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 6}, "b3d.types.Matrix": {"tf": 1.4142135623730951}, "b3d.types.Vector": {"tf": 1.4142135623730951}, "b3d.types.Direction": {"tf": 1.4142135623730951}}, "df": 5}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Rot": {"tf": 1}, "b3d.camera.ScreenCoordinates": {"tf": 1}, "b3d.camera.CameraCoordinates": {"tf": 1}, "b3d.camera.DepthImage": {"tf": 1}, "b3d.camera.CameraMatrix3x3": {"tf": 1}, "b3d.camera.BoundingBox": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 12.24744871391589}, "b3d.pose.core.Float": {"tf": 1}, "b3d.pose.core.Int": {"tf": 1}, "b3d.pose.core.Quaternion": {"tf": 1}, "b3d.types.Bool": {"tf": 1}, "b3d.types.Float": {"tf": 1}, "b3d.types.Int": {"tf": 1}, "b3d.types.Quaternion": {"tf": 1}, "b3d.types.Indexer": {"tf": 1}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}, "b3d.types.Key": {"tf": 1}}, "df": 24}}, "v": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"b3d.Rot": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Rot": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4.58257569495584}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Rot": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4.47213595499958}}, "df": 16}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 6}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.23606797749979}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.Indexer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Rot": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 10.246950765959598}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.ImageShape": {"tf": 1}, "b3d.types.Shape": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 4}}, "df": 11}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 10.246950765959598}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GaussianParticle": {"tf": 1}, "b3d.types.Pytree": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Rot": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 7}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.3166247903554}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Rot": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 2.8284271247461903}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 3.4641016151377544}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 3.4641016151377544}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 3.7416573867739413}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 3.4641016151377544}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 2.449489742783178}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 3.605551275463989}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 15.556349186104045}, "b3d.types.Matrix": {"tf": 1}, "b3d.types.Vector": {"tf": 1}, "b3d.types.Direction": {"tf": 1}}, "df": 26}, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.291502622129181}}, "df": 7}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 7, "t": {"3": {"2": {"docs": {"b3d.camera.CAM_ALONG_X": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 6.557438524302}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"b3d.types.Shape": {"tf": 1}, "b3d.types.Indexer": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.6457513110645907}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "b": {"3": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.291502622129181}}, "df": 2}}, "docs": {}, "df": 0}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 5.744562646538029}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 4}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}}, "df": 8}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 8.48528137423857}}, "df": 7, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.6457513110645907}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.7416573867739413}}, "df": 7}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 13}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 1, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.4641016151377544}}, "df": 16}}}}}}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.4641016151377544}}, "df": 16}}}}}}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 7}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.449489742783178}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.8284271247461903}}, "df": 6}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.1622776601683795}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.1622776601683795}, "b3d.io.MeshData.vertices_uv": {"tf": 1}, "b3d.io.MeshData.triangles_materials": {"tf": 1}, "b3d.io.MeshData.materials": {"tf": 1}, "b3d.io.FeatureTrackData.fps": {"tf": 1}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1}, "b3d.utils.HIINTERFACE": {"tf": 1}}, "df": 18}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, ":": {"6": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 2.8284271247461903}}, "df": 1}, "docs": {}, "df": 0}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.uniform_pose_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3.7416573867739413}}, "df": 7}}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 10.246950765959598}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 3}}, "df": 2}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, ":": {"9": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "signature": {"root": {"0": {"0": {"1": {"docs": {"b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "1": {"5": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "docs": {"b3d.utils.segment_point_cloud": {"tf": 1}}, "df": 1}, "4": {"5": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"b3d.RendererOriginal.__init__": {"tf": 2.6457513110645907}, "b3d.Pose.concat": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 2.23606797749979}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2.449489742783178}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 2}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 2.449489742783178}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.449489742783178}, "b3d.colors.cie94_err": {"tf": 1.7320508075688772}, "b3d.colors.ciede2000_err": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 2.23606797749979}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 2.6457513110645907}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_set_time": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 45}, "1": {"0": {"0": {"docs": {"b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}}, "df": 4}, "docs": {"b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 2}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1.7320508075688772}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.colors.cie94_err": {"tf": 1.7320508075688772}, "b3d.colors.ciede2000_err": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 42}, "2": {"0": {"4": {"8": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}, "docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}}, "df": 7, "d": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}, "3": {"0": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}, "9": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 2.449489742783178}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.reshape": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.reshape": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.propose": {"tf": 2.449489742783178}, "b3d.utils.rr_init": {"tf": 1.4142135623730951}, "b3d.utils.rr_log_rgb": {"tf": 1.4142135623730951}, "b3d.utils.rr_log_depth": {"tf": 1.4142135623730951}, "b3d.utils.rr_log_mask": {"tf": 1.4142135623730951}, "b3d.utils.rr_log_rgbd": {"tf": 1.4142135623730951}, "b3d.utils.rr_log_cloud": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.reshape": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 2}}, "df": 30}, "docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}}, "df": 2}, "4": {"0": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"docs": {"b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 5}, "7": {"5": {"docs": {"b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"b3d.Renderer.__init__": {"tf": 6.6332495807108}, "b3d.Renderer.from_intrinsics_object": {"tf": 3.7416573867739413}, "b3d.Renderer.get_intrinsics_object": {"tf": 3.1622776601683795}, "b3d.Renderer.set_intrinsics": {"tf": 6.48074069840786}, "b3d.Renderer.interpolate_many": {"tf": 5.0990195135927845}, "b3d.Renderer.interpolate": {"tf": 5.0990195135927845}, "b3d.Renderer.rasterize_many": {"tf": 5.0990195135927845}, "b3d.Renderer.rasterize": {"tf": 5.0990195135927845}, "b3d.Renderer.render_attribute_many": {"tf": 5.477225575051661}, "b3d.Renderer.render_attribute": {"tf": 5.477225575051661}, "b3d.RendererOriginal.__init__": {"tf": 9.219544457292887}, "b3d.RendererOriginal.set_intrinsics": {"tf": 6.48074069840786}, "b3d.RendererOriginal.rasterize_many": {"tf": 4.242640687119285}, "b3d.RendererOriginal.rasterize": {"tf": 4.242640687119285}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 3.7416573867739413}, "b3d.RendererOriginal.rasterize_original": {"tf": 4.242640687119285}, "b3d.RendererOriginal.interpolate_many": {"tf": 4.69041575982343}, "b3d.RendererOriginal.interpolate": {"tf": 4.69041575982343}, "b3d.RendererOriginal.render_many": {"tf": 4.69041575982343}, "b3d.RendererOriginal.render": {"tf": 4.69041575982343}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 4.69041575982343}, "b3d.RendererOriginal.render_rgbd": {"tf": 4.69041575982343}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 3.7416573867739413}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 3.7416573867739413}, "b3d.Pose.__init__": {"tf": 3.4641016151377544}, "b3d.Pose.normalize": {"tf": 3.1622776601683795}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 3.1622776601683795}, "b3d.Pose.canonical": {"tf": 3.1622776601683795}, "b3d.Pose.flatten": {"tf": 3.1622776601683795}, "b3d.Pose.tree_flatten": {"tf": 3.1622776601683795}, "b3d.Pose.tree_unflatten": {"tf": 4.242640687119285}, "b3d.Pose.copy": {"tf": 3.1622776601683795}, "b3d.Pose.reshape": {"tf": 4}, "b3d.Pose.slice": {"tf": 3.7416573867739413}, "b3d.Pose.as_matrix": {"tf": 3.1622776601683795}, "b3d.Pose.identity": {"tf": 2.6457513110645907}, "b3d.Pose.eye": {"tf": 2.6457513110645907}, "b3d.Pose.id": {"tf": 2.6457513110645907}, "b3d.Pose.apply": {"tf": 5.291502622129181}, "b3d.Pose.compose": {"tf": 6.6332495807108}, "b3d.Pose.scale": {"tf": 6}, "b3d.Pose.concatenate_poses": {"tf": 3.1622776601683795}, "b3d.Pose.concat": {"tf": 4.69041575982343}, "b3d.Pose.stack_poses": {"tf": 3.1622776601683795}, "b3d.Pose.split": {"tf": 3.7416573867739413}, "b3d.Pose.inv": {"tf": 3.1622776601683795}, "b3d.Pose.inverse": {"tf": 3.1622776601683795}, "b3d.Pose.from_matrix": {"tf": 3.1622776601683795}, "b3d.Pose.from_xyzw": {"tf": 3.1622776601683795}, "b3d.Pose.from_quat": {"tf": 3.1622776601683795}, "b3d.Pose.from_pos": {"tf": 3.1622776601683795}, "b3d.Pose.from_translation": {"tf": 3.1622776601683795}, "b3d.Pose.from_vec": {"tf": 3.1622776601683795}, "b3d.Pose.from_pos_matrix": {"tf": 3.7416573867739413}, "b3d.Pose.from_position_and_target": {"tf": 9.327379053088816}, "b3d.Pose.sample_uniform_pose": {"tf": 4.242640687119285}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 4.242640687119285}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 4.69041575982343}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 4.69041575982343}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 4.69041575982343}, "b3d.MeshLibrary.__init__": {"tf": 4.898979485566356}, "b3d.MeshLibrary.make_empty_library": {"tf": 2.6457513110645907}, "b3d.MeshLibrary.tree_flatten": {"tf": 3.1622776601683795}, "b3d.MeshLibrary.tree_unflatten": {"tf": 4.242640687119285}, "b3d.MeshLibrary.get_object_name": {"tf": 3.7416573867739413}, "b3d.MeshLibrary.get_num_objects": {"tf": 3.1622776601683795}, "b3d.MeshLibrary.add_object": {"tf": 5.830951894845301}, "b3d.MeshLibrary.add_trimesh": {"tf": 4.69041575982343}, "b3d.Mesh.__init__": {"tf": 4}, "b3d.Mesh.tree_flatten": {"tf": 3.1622776601683795}, "b3d.Mesh.tree_unflatten": {"tf": 4.242640687119285}, "b3d.Mesh.copy": {"tf": 3.1622776601683795}, "b3d.Mesh.from_obj_file": {"tf": 3.1622776601683795}, "b3d.Mesh.from_obj": {"tf": 3.1622776601683795}, "b3d.Mesh.from_trimesh": {"tf": 3.1622776601683795}, "b3d.Mesh.save": {"tf": 3.7416573867739413}, "b3d.Mesh.transform": {"tf": 3.7416573867739413}, "b3d.Mesh.merge_meshes": {"tf": 3.1622776601683795}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 3.7416573867739413}, "b3d.Mesh.transform_mesh": {"tf": 3.7416573867739413}, "b3d.Mesh.squeeze_mesh": {"tf": 3.1622776601683795}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 4.242640687119285}, "b3d.Mesh.rr_visualize": {"tf": 3.7416573867739413}, "b3d.Mesh.scale": {"tf": 3.7416573867739413}, "b3d.Mesh.cube_mesh": {"tf": 9.055385138137417}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 4.69041575982343}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 5.477225575051661}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 5.477225575051661}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 5.5677643628300215}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 7.810249675906654}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 7.810249675906654}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 4.898979485566356}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 2.6457513110645907}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 3.1622776601683795}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 4.242640687119285}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 3.7416573867739413}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 3.1622776601683795}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 5.830951894845301}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 4.69041575982343}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 5.830951894845301}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 3.1622776601683795}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 5.5677643628300215}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 4}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 6.164414002968976}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 6.782329983125268}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 4.58257569495584}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 3.1622776601683795}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 3.1622776601683795}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 3.1622776601683795}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 6.48074069840786}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 3.1622776601683795}, "b3d.camera.Intrinsics.__init__": {"tf": 10.392304845413264}, "b3d.camera.Intrinsics.from_array": {"tf": 4.69041575982343}, "b3d.camera.Intrinsics.as_array": {"tf": 3.1622776601683795}, "b3d.camera.Intrinsics.downscale": {"tf": 3.7416573867739413}, "b3d.camera.RenderConfig.__init__": {"tf": 7.14142842854285}, "b3d.camera.pixel_centers_from_shape": {"tf": 5.656854249492381}, "b3d.camera.camera_from_screen_and_depth": {"tf": 6.324555320336759}, "b3d.camera.camera_from_screen": {"tf": 5.291502622129181}, "b3d.camera.camera_from_depth": {"tf": 5.291502622129181}, "b3d.camera.xyz_from_depth": {"tf": 5.291502622129181}, "b3d.camera.unproject_depth": {"tf": 5.291502622129181}, "b3d.camera.screen_from_camera": {"tf": 5.291502622129181}, "b3d.camera.screen_from_xyz": {"tf": 5.291502622129181}, "b3d.camera.screen_from_world": {"tf": 4.242640687119285}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 5.291502622129181}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 5.291502622129181}, "b3d.camera.canvas_from_intrinsics": {"tf": 5.291502622129181}, "b3d.camera.homogeneous_coordinates": {"tf": 6.6332495807108}, "b3d.camera.planar_coordinates": {"tf": 3.1622776601683795}, "b3d.camera.rgb_for_point_from_img": {"tf": 4.242640687119285}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 4.69041575982343}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 4.47213595499958}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 4.898979485566356}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 8.48528137423857}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 11.958260743101398}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 9.899494936611665}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 7.810249675906654}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 4.242640687119285}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 6}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 5.5677643628300215}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 4.242640687119285}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 5.5677643628300215}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 5.0990195135927845}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 5.5677643628300215}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 5.0990195135927845}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 3.7416573867739413}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 4.242640687119285}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 4.242640687119285}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 4.242640687119285}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 5.291502622129181}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 3.7416573867739413}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 5.291502622129181}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 3.7416573867739413}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 5.291502622129181}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 4.242640687119285}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 4.242640687119285}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 6}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 4.69041575982343}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 5.385164807134504}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 5.5677643628300215}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 3.1622776601683795}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 4.47213595499958}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 4.47213595499958}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 5.291502622129181}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 5.291502622129181}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 4.69041575982343}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 4.69041575982343}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 5.0990195135927845}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 5.0990195135927845}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 4.898979485566356}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 4.898979485566356}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 4.69041575982343}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 4.69041575982343}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 5.477225575051661}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 4.242640687119285}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 4.242640687119285}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 3.1622776601683795}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 11.180339887498949}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 4.242640687119285}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 3.7416573867739413}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 5.0990195135927845}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 3.1622776601683795}, "b3d.chisight.patch_tracking.get_patches": {"tf": 5.830951894845301}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 5.0990195135927845}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 10.14889156509222}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 3.1622776601683795}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 9.746794344808963}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 6}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 6}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 3.1622776601683795}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 3.1622776601683795}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 4.242640687119285}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 4.69041575982343}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 5.477225575051661}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 4.242640687119285}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 8.831760866327848}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 18.05547008526779}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 4.898979485566356}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 4.242640687119285}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 6.928203230275509}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 6.782329983125268}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 5.477225575051661}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 5.477225575051661}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 5.830951894845301}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 5.830951894845301}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 4.69041575982343}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 6.164414002968976}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 6.164414002968976}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 6.164414002968976}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 6.164414002968976}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 6}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 3.1622776601683795}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 9.273618495495704}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 6.164414002968976}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 4.69041575982343}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 4.69041575982343}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 11.789826122551595}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 9}, "b3d.colors.rgb_to_lab": {"tf": 3.1622776601683795}, "b3d.colors.lab_to_rgb": {"tf": 3.1622776601683795}, "b3d.colors.labd_to_rgbd": {"tf": 3.1622776601683795}, "b3d.colors.rgbd_to_labd": {"tf": 3.1622776601683795}, "b3d.colors.rgb_to_hsv": {"tf": 3.1622776601683795}, "b3d.colors.cie94_err": {"tf": 7.3484692283495345}, "b3d.colors.ciede2000_err": {"tf": 7.3484692283495345}, "b3d.colors.color_error_helper": {"tf": 5.0990195135927845}, "b3d.io.MeshData.__init__": {"tf": 11}, "b3d.io.MeshData.save": {"tf": 4.242640687119285}, "b3d.io.MeshData.load": {"tf": 4.242640687119285}, "b3d.io.FeatureTrackData.__init__": {"tf": 14.966629547095765}, "b3d.io.FeatureTrackData.save": {"tf": 4.242640687119285}, "b3d.io.FeatureTrackData.load": {"tf": 4.242640687119285}, "b3d.io.FeatureTrackData.slice_time": {"tf": 5.0990195135927845}, "b3d.io.FeatureTrackData.downscale": {"tf": 3.7416573867739413}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 3.1622776601683795}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 3.1622776601683795}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 3.1622776601683795}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 3.7416573867739413}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 3.1622776601683795}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 7.810249675906654}, "b3d.io.VideoInput.__init__": {"tf": 7.937253933193772}, "b3d.io.VideoInput.to_dict": {"tf": 3.1622776601683795}, "b3d.io.VideoInput.save": {"tf": 4.242640687119285}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 5.830951894845301}, "b3d.io.VideoInput.load": {"tf": 4.242640687119285}, "b3d.pose.core.Array.addressable_data": {"tf": 4.898979485566356}, "b3d.pose.core.Array.all": {"tf": 15.231546211727817}, "b3d.pose.core.Array.any": {"tf": 15.231546211727817}, "b3d.pose.core.Array.argmax": {"tf": 11.532562594670797}, "b3d.pose.core.Array.argmin": {"tf": 11.532562594670797}, "b3d.pose.core.Array.argpartition": {"tf": 10.246950765959598}, "b3d.pose.core.Array.argsort": {"tf": 12.922847983320086}, "b3d.pose.core.Array.astype": {"tf": 13.527749258468683}, "b3d.pose.core.Array.choose": {"tf": 13.820274961085254}, "b3d.pose.core.Array.clip": {"tf": 15.231546211727817}, "b3d.pose.core.Array.conj": {"tf": 9.16515138991168}, "b3d.pose.core.Array.conjugate": {"tf": 9.16515138991168}, "b3d.pose.core.Array.compress": {"tf": 16.64331697709324}, "b3d.pose.core.Array.copy": {"tf": 9.899494936611665}, "b3d.pose.core.Array.cumprod": {"tf": 13.92838827718412}, "b3d.pose.core.Array.cumsum": {"tf": 13.92838827718412}, "b3d.pose.core.Array.diagonal": {"tf": 11.090536506409418}, "b3d.pose.core.Array.dot": {"tf": 17.804493814764857}, "b3d.pose.core.Array.flatten": {"tf": 9.746794344808963}, "b3d.pose.core.Array.item": {"tf": 6.4031242374328485}, "b3d.pose.core.Array.max": {"tf": 17.406895185529212}, "b3d.pose.core.Array.mean": {"tf": 17.08800749063506}, "b3d.pose.core.Array.min": {"tf": 17.406895185529212}, "b3d.pose.core.Array.nonzero": {"tf": 16.217274740226856}, "b3d.pose.core.Array.prod": {"tf": 19.44222209522358}, "b3d.pose.core.Array.ptp": {"tf": 12.206555615733702}, "b3d.pose.core.Array.ravel": {"tf": 9.746794344808963}, "b3d.pose.core.Array.repeat": {"tf": 13.784048752090222}, "b3d.pose.core.Array.reshape": {"tf": 7.0710678118654755}, "b3d.pose.core.Array.round": {"tf": 10.392304845413264}, "b3d.pose.core.Array.searchsorted": {"tf": 14.106735979665885}, "b3d.pose.core.Array.sort": {"tf": 12.922847983320086}, "b3d.pose.core.Array.squeeze": {"tf": 10.770329614269007}, "b3d.pose.core.Array.std": {"tf": 17.52141546793523}, "b3d.pose.core.Array.sum": {"tf": 19.44222209522358}, "b3d.pose.core.Array.swapaxes": {"tf": 9.797958971132712}, "b3d.pose.core.Array.take": {"tf": 17.4928556845359}, "b3d.pose.core.Array.trace": {"tf": 14.071247279470288}, "b3d.pose.core.Array.transpose": {"tf": 5.830951894845301}, "b3d.pose.core.Array.var": {"tf": 17.52141546793523}, "b3d.pose.core.Array.view": {"tf": 10}, "b3d.pose.core.multiply_quats": {"tf": 3.7416573867739413}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 3.7416573867739413}, "b3d.pose.core.choose_good_quat": {"tf": 3.1622776601683795}, "b3d.pose.core.sample_uniform_pose": {"tf": 4.242640687119285}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 4.242640687119285}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 4.69041575982343}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 4.69041575982343}, "b3d.pose.core.camera_from_position_and_target": {"tf": 9.327379053088816}, "b3d.pose.core.Pose.__init__": {"tf": 3.4641016151377544}, "b3d.pose.core.Pose.normalize": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.canonical": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.flatten": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.tree_flatten": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 4.242640687119285}, "b3d.pose.core.Pose.copy": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.reshape": {"tf": 4}, "b3d.pose.core.Pose.slice": {"tf": 3.7416573867739413}, "b3d.pose.core.Pose.as_matrix": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.identity": {"tf": 2.6457513110645907}, "b3d.pose.core.Pose.eye": {"tf": 2.6457513110645907}, "b3d.pose.core.Pose.id": {"tf": 2.6457513110645907}, "b3d.pose.core.Pose.apply": {"tf": 5.291502622129181}, "b3d.pose.core.Pose.compose": {"tf": 6.6332495807108}, "b3d.pose.core.Pose.scale": {"tf": 6}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.concat": {"tf": 4.69041575982343}, "b3d.pose.core.Pose.stack_poses": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.split": {"tf": 3.7416573867739413}, "b3d.pose.core.Pose.inv": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.inverse": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_matrix": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_xyzw": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_quat": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_pos": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_translation": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_vec": {"tf": 3.1622776601683795}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 3.7416573867739413}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 9.327379053088816}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 4.242640687119285}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 4.242640687119285}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 4.69041575982343}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 4.69041575982343}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 4.69041575982343}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 4.69041575982343}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 3.1622776601683795}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 3.1622776601683795}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 3.1622776601683795}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 5.477225575051661}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 4}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 6.48074069840786}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 6.48074069840786}, "b3d.renderer.Renderer.__init__": {"tf": 6.6332495807108}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 3.7416573867739413}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 3.1622776601683795}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 6.48074069840786}, "b3d.renderer.Renderer.interpolate_many": {"tf": 5.0990195135927845}, "b3d.renderer.Renderer.interpolate": {"tf": 5.0990195135927845}, "b3d.renderer.Renderer.rasterize_many": {"tf": 5.0990195135927845}, "b3d.renderer.Renderer.rasterize": {"tf": 5.0990195135927845}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 5.477225575051661}, "b3d.renderer.Renderer.render_attribute": {"tf": 5.477225575051661}, "b3d.renderer.RendererOriginal.__init__": {"tf": 9.219544457292887}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 6.48074069840786}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 4.242640687119285}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 4.242640687119285}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 3.7416573867739413}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 4.242640687119285}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.render_many": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.render": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 4.69041575982343}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 3.7416573867739413}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 3.7416573867739413}, "b3d.types.Array.addressable_data": {"tf": 4.898979485566356}, "b3d.types.Array.all": {"tf": 15.231546211727817}, "b3d.types.Array.any": {"tf": 15.231546211727817}, "b3d.types.Array.argmax": {"tf": 11.532562594670797}, "b3d.types.Array.argmin": {"tf": 11.532562594670797}, "b3d.types.Array.argpartition": {"tf": 10.246950765959598}, "b3d.types.Array.argsort": {"tf": 12.922847983320086}, "b3d.types.Array.astype": {"tf": 13.527749258468683}, "b3d.types.Array.choose": {"tf": 13.820274961085254}, "b3d.types.Array.clip": {"tf": 15.231546211727817}, "b3d.types.Array.conj": {"tf": 9.16515138991168}, "b3d.types.Array.conjugate": {"tf": 9.16515138991168}, "b3d.types.Array.compress": {"tf": 16.64331697709324}, "b3d.types.Array.copy": {"tf": 9.899494936611665}, "b3d.types.Array.cumprod": {"tf": 13.92838827718412}, "b3d.types.Array.cumsum": {"tf": 13.92838827718412}, "b3d.types.Array.diagonal": {"tf": 11.090536506409418}, "b3d.types.Array.dot": {"tf": 17.804493814764857}, "b3d.types.Array.flatten": {"tf": 9.746794344808963}, "b3d.types.Array.item": {"tf": 6.4031242374328485}, "b3d.types.Array.max": {"tf": 17.406895185529212}, "b3d.types.Array.mean": {"tf": 17.08800749063506}, "b3d.types.Array.min": {"tf": 17.406895185529212}, "b3d.types.Array.nonzero": {"tf": 16.217274740226856}, "b3d.types.Array.prod": {"tf": 19.44222209522358}, "b3d.types.Array.ptp": {"tf": 12.206555615733702}, "b3d.types.Array.ravel": {"tf": 9.746794344808963}, "b3d.types.Array.repeat": {"tf": 13.784048752090222}, "b3d.types.Array.reshape": {"tf": 7.0710678118654755}, "b3d.types.Array.round": {"tf": 10.392304845413264}, "b3d.types.Array.searchsorted": {"tf": 14.106735979665885}, "b3d.types.Array.sort": {"tf": 12.922847983320086}, "b3d.types.Array.squeeze": {"tf": 10.770329614269007}, "b3d.types.Array.std": {"tf": 17.52141546793523}, "b3d.types.Array.sum": {"tf": 19.44222209522358}, "b3d.types.Array.swapaxes": {"tf": 9.797958971132712}, "b3d.types.Array.take": {"tf": 17.4928556845359}, "b3d.types.Array.trace": {"tf": 14.071247279470288}, "b3d.types.Array.transpose": {"tf": 5.830951894845301}, "b3d.types.Array.var": {"tf": 17.52141546793523}, "b3d.types.Array.view": {"tf": 10}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 5.744562646538029}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 4.242640687119285}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 6.244997998398398}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 5.0990195135927845}, "b3d.types.GenerativeFunction.simulate": {"tf": 9.486832980505138}, "b3d.types.GenerativeFunction.update": {"tf": 14.798648586948742}, "b3d.types.GenerativeFunction.assess": {"tf": 8.94427190999916}, "b3d.types.GenerativeFunction.importance": {"tf": 12}, "b3d.types.GenerativeFunction.propose": {"tf": 11.090536506409418}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.vmap": {"tf": 9.38083151964686}, "b3d.types.GenerativeFunction.repeat": {"tf": 7.416198487095663}, "b3d.types.GenerativeFunction.scan": {"tf": 10.04987562112089}, "b3d.types.GenerativeFunction.accumulate": {"tf": 9}, "b3d.types.GenerativeFunction.reduce": {"tf": 9}, "b3d.types.GenerativeFunction.iterate": {"tf": 8.660254037844387}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 8.660254037844387}, "b3d.types.GenerativeFunction.mask": {"tf": 6.164414002968976}, "b3d.types.GenerativeFunction.or_else": {"tf": 8.366600265340756}, "b3d.types.GenerativeFunction.switch": {"tf": 8.12403840463596}, "b3d.types.GenerativeFunction.mix": {"tf": 8.12403840463596}, "b3d.types.GenerativeFunction.dimap": {"tf": 11.61895003862225}, "b3d.types.GenerativeFunction.map": {"tf": 9.539392014169456}, "b3d.types.GenerativeFunction.contramap": {"tf": 9.539392014169456}, "b3d.types.GenerativeFunction.marginal": {"tf": 9.273618495495704}, "b3d.types.GenerativeFunction.target": {"tf": 7.874007874011811}, "b3d.types.NamedArgs.__init__": {"tf": 4}, "b3d.types.NamedArgs.tree_flatten": {"tf": 3.1622776601683795}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 4.242640687119285}, "b3d.utils.get_root_path": {"tf": 3.605551275463989}, "b3d.utils.get_assets": {"tf": 3.605551275463989}, "b3d.utils.get_assets_path": {"tf": 3.605551275463989}, "b3d.utils.make_assets_path": {"tf": 3.1622776601683795}, "b3d.utils.get_shared": {"tf": 3.605551275463989}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 3}, "b3d.utils.keysplit": {"tf": 4}, "b3d.utils.split_key": {"tf": 3.1622776601683795}, "b3d.utils.resize_image_nearest": {"tf": 4.242640687119285}, "b3d.utils.resize_image_nearest_vmap": {"tf": 4.242640687119285}, "b3d.utils.resize_image_linear": {"tf": 4.242640687119285}, "b3d.utils.resize_image_linear_vmap": {"tf": 4.242640687119285}, "b3d.utils.clip_rgb": {"tf": 3.1622776601683795}, "b3d.utils.downsize_images": {"tf": 3.7416573867739413}, "b3d.utils.xyz_from_depth": {"tf": 6.48074069840786}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 6.48074069840786}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 5.0990195135927845}, "b3d.utils.segment_point_cloud": {"tf": 5.0990195135927845}, "b3d.utils.aabb": {"tf": 3.1622776601683795}, "b3d.utils.pad_with_1": {"tf": 3.1622776601683795}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 4.242640687119285}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 3.1622776601683795}, "b3d.utils.get_rgb_pil_image": {"tf": 4.242640687119285}, "b3d.utils.viz_rgb": {"tf": 4.242640687119285}, "b3d.utils.overlay_image": {"tf": 4.69041575982343}, "b3d.utils.make_gif_from_pil_images": {"tf": 3.7416573867739413}, "b3d.utils.make_video_from_pil_images": {"tf": 4.69041575982343}, "b3d.utils.vstack_images": {"tf": 4.242640687119285}, "b3d.utils.hstack_images": {"tf": 4.242640687119285}, "b3d.utils.multi_panel": {"tf": 8.602325267042627}, "b3d.utils.make_onehot": {"tf": 5.477225575051661}, "b3d.utils.multivmap": {"tf": 4.242640687119285}, "b3d.utils.update_choices": {"tf": 4.47213595499958}, "b3d.utils.update_choices_get_score": {"tf": 4.47213595499958}, "b3d.utils.enumerate_choices": {"tf": 4.47213595499958}, "b3d.utils.enumerate_choices_get_scores": {"tf": 4.47213595499958}, "b3d.utils.grid1": {"tf": 4.47213595499958}, "b3d.utils.grid2": {"tf": 4.47213595499958}, "b3d.utils.grid3": {"tf": 4.47213595499958}, "b3d.utils.grid4": {"tf": 4.47213595499958}, "b3d.utils.grid_trace": {"tf": 4.242640687119285}, "b3d.utils.nn_background_segmentation": {"tf": 3.1622776601683795}, "b3d.utils.rr_log_pose": {"tf": 4.69041575982343}, "b3d.utils.rr_init": {"tf": 4}, "b3d.utils.rr_log_rgb": {"tf": 4.47213595499958}, "b3d.utils.rr_log_depth": {"tf": 4.47213595499958}, "b3d.utils.rr_log_mask": {"tf": 4.47213595499958}, "b3d.utils.rr_log_rgbd": {"tf": 4.47213595499958}, "b3d.utils.rr_log_cloud": {"tf": 4.47213595499958}, "b3d.utils.rr_set_time": {"tf": 3.7416573867739413}, "b3d.utils.reload": {"tf": 3.1622776601683795}, "b3d.utils.normalize_log_scores": {"tf": 3.1622776601683795}, "b3d.utils.Array.addressable_data": {"tf": 4.898979485566356}, "b3d.utils.Array.all": {"tf": 15.231546211727817}, "b3d.utils.Array.any": {"tf": 15.231546211727817}, "b3d.utils.Array.argmax": {"tf": 11.532562594670797}, "b3d.utils.Array.argmin": {"tf": 11.532562594670797}, "b3d.utils.Array.argpartition": {"tf": 10.246950765959598}, "b3d.utils.Array.argsort": {"tf": 12.922847983320086}, "b3d.utils.Array.astype": {"tf": 13.527749258468683}, "b3d.utils.Array.choose": {"tf": 13.820274961085254}, "b3d.utils.Array.clip": {"tf": 15.231546211727817}, "b3d.utils.Array.conj": {"tf": 9.16515138991168}, "b3d.utils.Array.conjugate": {"tf": 9.16515138991168}, "b3d.utils.Array.compress": {"tf": 16.64331697709324}, "b3d.utils.Array.copy": {"tf": 9.899494936611665}, "b3d.utils.Array.cumprod": {"tf": 13.92838827718412}, "b3d.utils.Array.cumsum": {"tf": 13.92838827718412}, "b3d.utils.Array.diagonal": {"tf": 11.090536506409418}, "b3d.utils.Array.dot": {"tf": 17.804493814764857}, "b3d.utils.Array.flatten": {"tf": 9.746794344808963}, "b3d.utils.Array.item": {"tf": 6.4031242374328485}, "b3d.utils.Array.max": {"tf": 17.406895185529212}, "b3d.utils.Array.mean": {"tf": 17.08800749063506}, "b3d.utils.Array.min": {"tf": 17.406895185529212}, "b3d.utils.Array.nonzero": {"tf": 16.217274740226856}, "b3d.utils.Array.prod": {"tf": 19.44222209522358}, "b3d.utils.Array.ptp": {"tf": 12.206555615733702}, "b3d.utils.Array.ravel": {"tf": 9.746794344808963}, "b3d.utils.Array.repeat": {"tf": 13.784048752090222}, "b3d.utils.Array.reshape": {"tf": 7.0710678118654755}, "b3d.utils.Array.round": {"tf": 10.392304845413264}, "b3d.utils.Array.searchsorted": {"tf": 14.106735979665885}, "b3d.utils.Array.sort": {"tf": 12.922847983320086}, "b3d.utils.Array.squeeze": {"tf": 10.770329614269007}, "b3d.utils.Array.std": {"tf": 17.52141546793523}, "b3d.utils.Array.sum": {"tf": 19.44222209522358}, "b3d.utils.Array.swapaxes": {"tf": 9.797958971132712}, "b3d.utils.Array.take": {"tf": 17.4928556845359}, "b3d.utils.Array.trace": {"tf": 14.071247279470288}, "b3d.utils.Array.transpose": {"tf": 5.830951894845301}, "b3d.utils.Array.var": {"tf": 17.52141546793523}, "b3d.utils.Array.view": {"tf": 10}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 4.69041575982343}, "b3d.utils.all_pairs": {"tf": 3.7416573867739413}, "b3d.utils.distinct_colors": {"tf": 4.242640687119285}, "b3d.utils.fit_plane": {"tf": 4.69041575982343}, "b3d.utils.fit_table_plane": {"tf": 5.5677643628300215}, "b3d.utils.separate_shared_vertices": {"tf": 3.7416573867739413}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 4.242640687119285}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 3.1622776601683795}, "b3d.utils.discretize": {"tf": 3.7416573867739413}, "b3d.utils.voxelize": {"tf": 3.7416573867739413}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 7.483314773547883}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 7.483314773547883}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 7.483314773547883}, "b3d.utils.make_grid_points": {"tf": 4.242640687119285}}, "df": 571, "w": {"docs": {"b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 22}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}}, "df": 7}}}}}}, "c": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 3}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 28}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}}, "df": 20}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}}, "df": 12}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.make_onehot": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.multivmap": {"tf": 1}}, "df": 4, "x": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 22}, "y": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 21}, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 16}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 33}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 5}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}}, "df": 47}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}}, "df": 10}, "docs": {}, "df": 0}, "docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 121}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Mesh.save": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 7}}}}}, "l": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.slice_time": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "c": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}}, "df": 10, "x": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 17}, "y": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 17}, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 16}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1.4142135623730951}, "b3d.utils.segment_point_cloud": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1.4142135623730951}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {"b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1}, "b3d.utils.rr_log_mask": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1}, "b3d.utils.rr_log_cloud": {"tf": 1}}, "df": 9}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.compose": {"tf": 1.4142135623730951}, "b3d.Pose.scale": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2}, "b3d.pose.core.Pose.compose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 2}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 2}, "b3d.types.GenerativeFunction.mix": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.marginal": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.target": {"tf": 1.4142135623730951}}, "df": 32}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 10}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.target": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Mesh.cube_mesh": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 10, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 47}}}}}}}}, "d": {"docs": {"b3d.utils.make_onehot": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 6}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 113}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {"b3d.camera.screen_from_world": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}, "b3d.io.FeatureTrackData.__init__": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.__init__": {"tf": 2}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 9}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {"b3d.colors.color_error_helper": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"b3d.Pose.split": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}}, "df": 11}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 4, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 2}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 2}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 112}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 3}, "b3d.pose.core.Array.all": {"tf": 2.449489742783178}, "b3d.pose.core.Array.any": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.astype": {"tf": 2}, "b3d.pose.core.Array.choose": {"tf": 2.449489742783178}, "b3d.pose.core.Array.clip": {"tf": 3}, "b3d.pose.core.Array.conj": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.compress": {"tf": 3}, "b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumprod": {"tf": 2}, "b3d.pose.core.Array.cumsum": {"tf": 2}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 3}, "b3d.pose.core.Array.mean": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.min": {"tf": 3}, "b3d.pose.core.Array.nonzero": {"tf": 3}, "b3d.pose.core.Array.prod": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 2.449489742783178}, "b3d.pose.core.Array.round": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.sum": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 3}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.pose.core.Array.var": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.449489742783178}, "b3d.types.Array.any": {"tf": 2.449489742783178}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.astype": {"tf": 2}, "b3d.types.Array.choose": {"tf": 2.449489742783178}, "b3d.types.Array.clip": {"tf": 3}, "b3d.types.Array.conj": {"tf": 1.7320508075688772}, "b3d.types.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.types.Array.compress": {"tf": 3}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.cumprod": {"tf": 2}, "b3d.types.Array.cumsum": {"tf": 2}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 3}, "b3d.types.Array.mean": {"tf": 2.6457513110645907}, "b3d.types.Array.min": {"tf": 3}, "b3d.types.Array.nonzero": {"tf": 3}, "b3d.types.Array.prod": {"tf": 3.1622776601683795}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 2.449489742783178}, "b3d.types.Array.round": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 2.6457513110645907}, "b3d.types.Array.sum": {"tf": 3.1622776601683795}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 3}, "b3d.types.Array.trace": {"tf": 2}, "b3d.types.Array.var": {"tf": 2.6457513110645907}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.449489742783178}, "b3d.utils.Array.any": {"tf": 2.449489742783178}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.astype": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 2.449489742783178}, "b3d.utils.Array.clip": {"tf": 3}, "b3d.utils.Array.conj": {"tf": 1.7320508075688772}, "b3d.utils.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.utils.Array.compress": {"tf": 3}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumprod": {"tf": 2}, "b3d.utils.Array.cumsum": {"tf": 2}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 3}, "b3d.utils.Array.mean": {"tf": 2.6457513110645907}, "b3d.utils.Array.min": {"tf": 3}, "b3d.utils.Array.nonzero": {"tf": 3}, "b3d.utils.Array.prod": {"tf": 3.1622776601683795}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 2.449489742783178}, "b3d.utils.Array.round": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 2.6457513110645907}, "b3d.utils.Array.sum": {"tf": 3.1622776601683795}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 3}, "b3d.utils.Array.trace": {"tf": 2}, "b3d.utils.Array.var": {"tf": 2.6457513110645907}, "b3d.utils.Array.view": {"tf": 1}}, "df": 113}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.__init__": {"tf": 2.6457513110645907}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.__init__": {"tf": 2.449489742783178}, "b3d.pose.core.Array.all": {"tf": 2}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argmin": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argsort": {"tf": 2.23606797749979}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.compress": {"tf": 2.449489742783178}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 2}, "b3d.pose.core.Array.cumsum": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 2.23606797749979}, "b3d.pose.core.Array.min": {"tf": 2.23606797749979}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 2.23606797749979}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sum": {"tf": 2.449489742783178}, "b3d.pose.core.Array.take": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 2.23606797749979}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 2}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 2.449489742783178}, "b3d.types.Array.argmin": {"tf": 2.449489742783178}, "b3d.types.Array.argsort": {"tf": 2.23606797749979}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.4142135623730951}, "b3d.types.Array.compress": {"tf": 2.449489742783178}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 2}, "b3d.types.Array.cumsum": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 2.23606797749979}, "b3d.types.Array.min": {"tf": 2.23606797749979}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2.449489742783178}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 2.23606797749979}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 2.23606797749979}, "b3d.types.Array.sum": {"tf": 2.449489742783178}, "b3d.types.Array.take": {"tf": 2.6457513110645907}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 2.23606797749979}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.marginal": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1.7320508075688772}, "b3d.utils.multivmap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 2.449489742783178}, "b3d.utils.Array.argmin": {"tf": 2.449489742783178}, "b3d.utils.Array.argsort": {"tf": 2.23606797749979}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.4142135623730951}, "b3d.utils.Array.compress": {"tf": 2.449489742783178}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 2}, "b3d.utils.Array.cumsum": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 2.23606797749979}, "b3d.utils.Array.min": {"tf": 2.23606797749979}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2.449489742783178}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 2.23606797749979}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 2.23606797749979}, "b3d.utils.Array.sum": {"tf": 2.449489742783178}, "b3d.utils.Array.take": {"tf": 2.6457513110645907}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 2.23606797749979}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}}, "df": 110, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}}, "df": 55}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.MeshData.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.utils.rr_init": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 110}}}}}}, "s": {"docs": {"b3d.utils.keysplit": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}, "b": {"1": {"docs": {"b3d.colors.cie94_err": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.colors.cie94_err": {"tf": 1}}, "df": 1}, "docs": {"b3d.colors.lab_to_rgb": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}}, "df": 2, "d": {"docs": {"b3d.colors.labd_to_rgbd": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"b3d.pose.core.Array.dot": {"tf": 2.449489742783178}, "b3d.types.Array.dot": {"tf": 2.449489742783178}, "b3d.utils.Array.dot": {"tf": 2.449489742783178}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}}, "df": 4}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}}, "df": 9}}}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}}, "df": 6}, "g": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}, "i": {"1": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "docs": {"b3d.Pose.slice": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}, "b3d.utils.make_onehot": {"tf": 1}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1}}, "df": 11, "n": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}}, "df": 2, "t": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.23606797749979}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 2.23606797749979}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2.23606797749979}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.pose.core.Array.var": {"tf": 2.23606797749979}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.all": {"tf": 2}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 2.23606797749979}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2.23606797749979}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.prod": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 2.23606797749979}, "b3d.types.Array.sum": {"tf": 2.23606797749979}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 2}, "b3d.types.Array.var": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 2.23606797749979}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2.23606797749979}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 2.23606797749979}, "b3d.utils.Array.sum": {"tf": 2.23606797749979}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 2}, "b3d.utils.Array.var": {"tf": 2.23606797749979}}, "df": 129, "r": {"docs": {"b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.from_intrinsics_object": {"tf": 1}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1}}, "df": 23}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 6}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 12}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}}, "df": 4}, "x": {"docs": {"b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1.4142135623730951}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.make_video_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.nn_background_segmentation": {"tf": 1}}, "df": 7}}}}, "g": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {"b3d.utils.downsize_images": {"tf": 1}}, "df": 1}}, "j": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}}, "df": 7}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 7}}, "s": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"b3d.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.Renderer.set_intrinsics": {"tf": 1}, "b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.Pose.normalize": {"tf": 1}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.flatten": {"tf": 1}, "b3d.Pose.tree_flatten": {"tf": 1}, "b3d.Pose.copy": {"tf": 1}, "b3d.Pose.reshape": {"tf": 1}, "b3d.Pose.slice": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.scale": {"tf": 1}, "b3d.Pose.concat": {"tf": 1}, "b3d.Pose.split": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.tree_flatten": {"tf": 1}, "b3d.Mesh.save": {"tf": 1}, "b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.rr_visualize": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.Intrinsics.downscale": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}, "b3d.io.VideoInput.to_dict": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Pose.normalize": {"tf": 1}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.flatten": {"tf": 1}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1}, "b3d.pose.core.Pose.copy": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.pose.core.Pose.slice": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.pose.core.Pose.split": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}}, "df": 168}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.marginal": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 44}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.fit_table_plane": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"b3d.Pose.scale": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.scale": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}}, "df": 8}}, "n": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {"b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 65}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}}, "df": 4}}, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 9}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 33}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.utils.make_assets_path": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 59}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}, "d": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 109, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 18}}}}}}}}}, "u": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose.reshape": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Pose.reshape": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}, "b3d.utils.multivmap": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}}, "df": 68}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.apply": {"tf": 1.4142135623730951}, "b3d.Pose.scale": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.__init__": {"tf": 2.8284271247461903}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1.4142135623730951}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_screen": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.449489742783178}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 2}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.io.MeshData.__init__": {"tf": 2.449489742783178}, "b3d.io.FeatureTrackData.__init__": {"tf": 3.3166247903554}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.clip": {"tf": 2}, "b3d.pose.core.Array.conj": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.compress": {"tf": 2}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.reshape": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.transpose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.apply": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.clip": {"tf": 2}, "b3d.types.Array.conj": {"tf": 1.4142135623730951}, "b3d.types.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.types.Array.compress": {"tf": 2}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.reshape": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.transpose": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.propose": {"tf": 1.7320508075688772}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.clip": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 1.4142135623730951}, "b3d.utils.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.utils.Array.compress": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.reshape": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.transpose": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 170}}}, "e": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 2}}}}}}}}}, "x": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"1": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 9}, "2": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 9}, "docs": {"b3d.Pose.concat": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 66}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.update_choices": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.marginal": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}}, "df": 7}, "y": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 54}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 47}}}, "u": {"docs": {}, "df": 0, "v": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_screen": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}}, "df": 5}}, "p": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 2.23606797749979}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 2.23606797749979}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1}}, "df": 119}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}}, "df": 6}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "t": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1.4142135623730951}, "b3d.utils.rr_set_time": {"tf": 1}}, "df": 8, "r": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 9, "i": {"docs": {"b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}}, "df": 14, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.interpolate_many": {"tf": 1}, "b3d.Renderer.interpolate": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1}, "b3d.renderer.Renderer.interpolate": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 14, "s": {"docs": {"b3d.io.MeshData.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Mesh.from_trimesh": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}}, "df": 23}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 13}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {"b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1.4142135623730951}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 7}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.target": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 16}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 34}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 40}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}}, "p": {"0": {"docs": {"b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 2}, "docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "s": {"docs": {"b3d.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.rasterize": {"tf": 1}, "b3d.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.RendererOriginal.render_many": {"tf": 1}, "b3d.RendererOriginal.render": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.RendererOriginal.render_rgbd": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1}}, "df": 16, "e": {"docs": {"b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.compose": {"tf": 2.23606797749979}, "b3d.Pose.scale": {"tf": 1.4142135623730951}, "b3d.Pose.concatenate_poses": {"tf": 1}, "b3d.Pose.stack_poses": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.Mesh.transform": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1.4142135623730951}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.compose": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.scale": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1}, "b3d.pose.core.Pose.stack_poses": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.utils.rr_log_pose": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 37, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Pose.concat": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.pose.core.Pose.concat": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 13, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1.4142135623730951}, "b3d.io.MeshData.__init__": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1.4142135623730951}, "b3d.io.VideoInput.__init__": {"tf": 1}}, "df": 4}}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "w": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Mesh.from_obj_file": {"tf": 1}, "b3d.Mesh.from_obj": {"tf": 1}, "b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"b3d.utils.get_root_path": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.distinct_colors": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.dot": {"tf": 2}, "b3d.types.Array.dot": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 2}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.io.MeshData.__init__": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 26}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}}, "df": 11}}}}, "c": {"docs": {"b3d.Pose.apply": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1.7320508075688772}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1}, "b3d.utils.update_choices": {"tf": 1}, "b3d.utils.update_choices_get_score": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1}, "b3d.utils.grid4": {"tf": 1}, "b3d.utils.grid_trace": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}}, "df": 1}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"b3d.pose.core.multiply_quat_and_vec": {"tf": 1}}, "df": 1}}, "r": {"docs": {"b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.RendererOriginal.interpolate": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1}}, "df": 4}}, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.colors.rgb_to_lab": {"tf": 1}, "b3d.colors.rgb_to_hsv": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1.4142135623730951}, "b3d.io.VideoInput.__init__": {"tf": 1.4142135623730951}, "b3d.utils.clip_rgb": {"tf": 1}, "b3d.utils.rr_log_rgb": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 19, "d": {"docs": {"b3d.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1.4142135623730951}, "b3d.colors.rgbd_to_labd": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1}, "b3d.utils.resize_image_nearest": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.rr_log_rgbd": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}}, "df": 12}, "r": {"docs": {"b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1}}, "df": 9}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 3}, "q": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.Mesh.copy": {"tf": 1}, "b3d.Mesh.from_trimesh": {"tf": 1}, "b3d.Mesh.transform_mesh": {"tf": 1}, "b3d.Mesh.squeeze_mesh": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.merge_meshes": {"tf": 1}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.MeshData.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "x": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"b3d.utils.rr_log_mask": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 6, "l": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}}, "df": 12}, "s": {"docs": {"b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}}, "df": 1}}}}}, "u": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.utils.segment_point_cloud": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 6, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.fit_plane": {"tf": 1}, "b3d.utils.fit_table_plane": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}}, "q": {"1": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.pose.core.multiply_quats": {"tf": 1}}, "df": 1}, "docs": {"b3d.pose.core.multiply_quat_and_vec": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}, "d": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.Pose.tree_unflatten": {"tf": 1}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.Mesh.tree_unflatten": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 9}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.Mesh.cube_mesh": {"tf": 1.4142135623730951}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 43}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.Mesh.cube_mesh": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}, "b3d.utils.rr_log_depth": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 21, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 6}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.round": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {"b3d.utils.rr_init": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.particle_system.visualize_particle_system": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.quick_plot": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.apply": {"tf": 1.4142135623730951}, "b3d.Pose.scale": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 2.8284271247461903}, "b3d.camera.Intrinsics.from_array": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_screen": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.449489742783178}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 2}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.io.MeshData.__init__": {"tf": 2.449489742783178}, "b3d.io.FeatureTrackData.__init__": {"tf": 3.3166247903554}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.clip": {"tf": 2}, "b3d.pose.core.Array.conj": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.compress": {"tf": 2}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.reshape": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.transpose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.apply": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.clip": {"tf": 2}, "b3d.types.Array.conj": {"tf": 1.4142135623730951}, "b3d.types.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.types.Array.compress": {"tf": 2}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.prod": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.reshape": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 2.23606797749979}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.transpose": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.clip": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 1.4142135623730951}, "b3d.utils.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.utils.Array.compress": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.reshape": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 2.23606797749979}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.transpose": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}}, "df": 154, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.propose": {"tf": 1.7320508075688772}}, "df": 7}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "b": {"3": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.compose": {"tf": 1.4142135623730951}, "b3d.Pose.scale": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.scale": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1}}, "df": 15}}, "docs": {"b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 5, "g": {"docs": {"b3d.camera.RenderConfig.__init__": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.all": {"tf": 2.23606797749979}, "b3d.pose.core.Array.any": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 2}, "b3d.pose.core.Array.astype": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Array.clip": {"tf": 2.449489742783178}, "b3d.pose.core.Array.conj": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.compress": {"tf": 2.449489742783178}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.mean": {"tf": 2.23606797749979}, "b3d.pose.core.Array.min": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.nonzero": {"tf": 2.449489742783178}, "b3d.pose.core.Array.prod": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.pose.core.Array.sort": {"tf": 2}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sum": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2.23606797749979}, "b3d.types.Array.all": {"tf": 2.23606797749979}, "b3d.types.Array.any": {"tf": 2.23606797749979}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 2}, "b3d.types.Array.astype": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 2}, "b3d.types.Array.clip": {"tf": 2.449489742783178}, "b3d.types.Array.conj": {"tf": 1.4142135623730951}, "b3d.types.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.types.Array.compress": {"tf": 2.449489742783178}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2.6457513110645907}, "b3d.types.Array.mean": {"tf": 2.23606797749979}, "b3d.types.Array.min": {"tf": 2.6457513110645907}, "b3d.types.Array.nonzero": {"tf": 2.449489742783178}, "b3d.types.Array.prod": {"tf": 2.8284271247461903}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.Array.sort": {"tf": 2}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 2.23606797749979}, "b3d.types.Array.sum": {"tf": 2.8284271247461903}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 2.8284271247461903}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.23606797749979}, "b3d.utils.Array.any": {"tf": 2.23606797749979}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 2}, "b3d.utils.Array.astype": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.Array.clip": {"tf": 2.449489742783178}, "b3d.utils.Array.conj": {"tf": 1.4142135623730951}, "b3d.utils.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.utils.Array.compress": {"tf": 2.449489742783178}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2.6457513110645907}, "b3d.utils.Array.mean": {"tf": 2.23606797749979}, "b3d.utils.Array.min": {"tf": 2.6457513110645907}, "b3d.utils.Array.nonzero": {"tf": 2.449489742783178}, "b3d.utils.Array.prod": {"tf": 2.8284271247461903}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.sort": {"tf": 2}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 2.23606797749979}, "b3d.utils.Array.sum": {"tf": 2.8284271247461903}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 2.8284271247461903}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2.23606797749979}}, "df": 118}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.utils.multi_panel": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {"b3d.camera.screen_from_world": {"tf": 1}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.pad_with_1": {"tf": 1}, "b3d.utils.reload": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}}, "df": 15, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.io.VideoInput.__init__": {"tf": 1}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1}}, "df": 6, "w": {"docs": {"b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}}, "df": 4}, "s": {"docs": {"b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}}, "df": 3}}}, "k": {"1": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "2": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.sample_uniform_pose": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.utils.keysplit": {"tf": 1}, "b3d.utils.split_key": {"tf": 1}}, "df": 42, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData.__init__": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"b3d.io.FeatureTrackData.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 37}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.NamedArgs.__init__": {"tf": 1}}, "df": 16}}}}}, "c": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "h": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "l": {"docs": {"b3d.colors.cie94_err": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "j": {"docs": {"b3d.MeshLibrary.get_object_name": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.MeshLibrary.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}, "b3d.io.FeatureTrackData.__init__": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1.4142135623730951}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1}, "b3d.colors.color_error_helper": {"tf": 1}, "b3d.io.FeatureTrackData.__init__": {"tf": 1.4142135623730951}}, "df": 20}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 57, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.make_video_from_pil_images": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 18}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.MeshData.__init__": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.__init__": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 6}}}}}}, "z": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.utils.xyz_from_depth": {"tf": 1}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1}}, "df": 7}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 26}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}, "b3d.types.GenerativeFunction.target": {"tf": 1}}, "df": 26, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.types.GenerativeFunction.marginal": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {"b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1}, "b3d.utils.all_pairs": {"tf": 1}}, "df": 2}}}, "bases": {"root": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.RenderConfig": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 16}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}}, "df": 15}}}}}}}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 16}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}}, "df": 15}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}}, "df": 15, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}}, "df": 15}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.bayes3d.model.RGBDSensorModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1}}, "df": 15}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.RenderConfig": {"tf": 1}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "doc": {"root": {"0": {"1": {"7": {"8": {"6": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 2}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.inv": {"tf": 2}, "b3d.Pose.inverse": {"tf": 2}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 3.605551275463989}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 3.1622776601683795}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 2.23606797749979}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 2}, "b3d.pose.core.Pose.inverse": {"tf": 2}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 2.8284271247461903}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 3.7416573867739413}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.view": {"tf": 2.23606797749979}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.update": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.assess": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.importance": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.vmap": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.mix": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 2.8284271247461903}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 3.7416573867739413}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.view": {"tf": 2.23606797749979}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.23606797749979}}, "df": 80, "s": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}, "d": {"docs": {"b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 3}}, "1": {"0": {"0": {"0": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 3}, "docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.at": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.at": {"tf": 2}}, "df": 14}, "1": {"4": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "2": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}, "4": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Pose.inv": {"tf": 1.7320508075688772}, "b3d.Pose.inverse": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.23606797749979}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 3}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 2.449489742783178}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 3}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 2.449489742783178}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 3}, "b3d.pose.core.Array.T": {"tf": 3}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 2.449489742783178}, "b3d.pose.core.Pose.inv": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.inverse": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 3}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 2.449489742783178}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 3}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 2.449489742783178}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.view": {"tf": 3}, "b3d.types.Array.T": {"tf": 3}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.assess": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 3}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 2.449489742783178}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 3}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 2.449489742783178}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.view": {"tf": 3}, "b3d.utils.Array.T": {"tf": 3}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 2.449489742783178}}, "df": 119, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}, "}": {"docs": {}, "df": 0, "q": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}}, "df": 1}}, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}, "d": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}, "2": {"0": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 2}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.at": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.at": {"tf": 2}}, "df": 7}, "2": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}, "5": {"0": {"0": {"0": {"0": {"0": {"3": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"b3d.io.VideoInput": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 2.23606797749979}}, "df": 1}, "6": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "9": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.23606797749979}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.dot": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.T": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.mT": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 2.449489742783178}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.types.Array.dot": {"tf": 2.8284271247461903}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.trace": {"tf": 2}, "b3d.types.Array.view": {"tf": 2.6457513110645907}, "b3d.types.Array.T": {"tf": 2.8284271247461903}, "b3d.types.Array.mT": {"tf": 2}, "b3d.types.Array.at": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.utils.Array.dot": {"tf": 2.8284271247461903}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 2}, "b3d.utils.Array.view": {"tf": 2.6457513110645907}, "b3d.utils.Array.T": {"tf": 2.8284271247461903}, "b3d.utils.Array.mT": {"tf": 2}, "b3d.utils.Array.at": {"tf": 2.449489742783178}}, "df": 67, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}, "d": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}}, "df": 11}, "x": {"2": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 3, "x": {"2": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "3": {"1": {"4": {"1": {"5": {"9": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 10}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "9": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.449489742783178}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.449489742783178}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.449489742783178}}, "df": 12}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}, "b3d.colors.ciede2000_err": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 3.3166247903554}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 2}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 3.3166247903554}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 3.3166247903554}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 2}, "b3d.utils.voxelize": {"tf": 1.4142135623730951}}, "df": 73, "d": {"docs": {"b3d.Pose.__init__": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 13}, "x": {"3": {"docs": {"b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}, "4": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 3.3166247903554}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 2}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 3.3166247903554}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 2}, "b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 3.3166247903554}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 2}}, "df": 43, "d": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}}, "df": 2}, "x": {"4": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}, "5": {"0": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}, "1": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {"b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.449489742783178}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1}}, "df": 30}, "6": {"0": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "1": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "2": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {"b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2.449489742783178}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2.449489742783178}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}}, "df": 19}, "7": {"8": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {"b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}}, "df": 16}, "8": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}}, "df": 17}, "9": {"5": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "6": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}, "docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 6}, "docs": {"b3d": {"tf": 1.7320508075688772}, "b3d.Renderer": {"tf": 1.7320508075688772}, "b3d.Renderer.__init__": {"tf": 2.449489742783178}, "b3d.Renderer.renderer_env": {"tf": 1.7320508075688772}, "b3d.Renderer.num_layers": {"tf": 1.7320508075688772}, "b3d.Renderer.from_intrinsics_object": {"tf": 1.7320508075688772}, "b3d.Renderer.get_intrinsics_object": {"tf": 1.7320508075688772}, "b3d.Renderer.set_intrinsics": {"tf": 1.7320508075688772}, "b3d.Renderer.interpolate_many": {"tf": 1.7320508075688772}, "b3d.Renderer.interpolate": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.Renderer.render_attribute_many": {"tf": 2.8284271247461903}, "b3d.Renderer.render_attribute": {"tf": 2.8284271247461903}, "b3d.RendererOriginal": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.__init__": {"tf": 2.449489742783178}, "b3d.RendererOriginal.renderer_env": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.set_intrinsics": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.rasterize_many": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.rasterize": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.rasterize_mesh": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.rasterize_original": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.interpolate_many": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.interpolate": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.render_many": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.render": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.render_rgbd_many": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.render_rgbd": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.render_rgbd_from_mesh": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.rr_log_rgbd": {"tf": 1.7320508075688772}, "b3d.Pose": {"tf": 1.7320508075688772}, "b3d.Pose.__init__": {"tf": 2}, "b3d.Pose.identity_quaternion": {"tf": 1.7320508075688772}, "b3d.Pose.unit_quaternion": {"tf": 1.7320508075688772}, "b3d.Pose.pos": {"tf": 1.7320508075688772}, "b3d.Pose.position": {"tf": 1.7320508075688772}, "b3d.Pose.xyzw": {"tf": 1.7320508075688772}, "b3d.Pose.quat": {"tf": 1.7320508075688772}, "b3d.Pose.quaternion": {"tf": 1.7320508075688772}, "b3d.Pose.wxyz": {"tf": 1.7320508075688772}, "b3d.Pose.rot": {"tf": 1.7320508075688772}, "b3d.Pose.normalize": {"tf": 1.7320508075688772}, "b3d.Pose.quat_in_upper_hemisphere": {"tf": 1.7320508075688772}, "b3d.Pose.canonical": {"tf": 2.449489742783178}, "b3d.Pose.flatten": {"tf": 1.7320508075688772}, "b3d.Pose.tree_flatten": {"tf": 1.7320508075688772}, "b3d.Pose.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.Pose.copy": {"tf": 1.7320508075688772}, "b3d.Pose.flat": {"tf": 1.7320508075688772}, "b3d.Pose.shape": {"tf": 1.7320508075688772}, "b3d.Pose.reshape": {"tf": 1.7320508075688772}, "b3d.Pose.slice": {"tf": 1.7320508075688772}, "b3d.Pose.as_matrix": {"tf": 1.7320508075688772}, "b3d.Pose.identity": {"tf": 1.7320508075688772}, "b3d.Pose.eye": {"tf": 1.7320508075688772}, "b3d.Pose.id": {"tf": 1.7320508075688772}, "b3d.Pose.apply": {"tf": 1.7320508075688772}, "b3d.Pose.compose": {"tf": 1.7320508075688772}, "b3d.Pose.scale": {"tf": 1.7320508075688772}, "b3d.Pose.concatenate_poses": {"tf": 1.7320508075688772}, "b3d.Pose.concat": {"tf": 1.7320508075688772}, "b3d.Pose.stack_poses": {"tf": 1.7320508075688772}, "b3d.Pose.split": {"tf": 1.7320508075688772}, "b3d.Pose.inv": {"tf": 5}, "b3d.Pose.inverse": {"tf": 5}, "b3d.Pose.from_matrix": {"tf": 1.7320508075688772}, "b3d.Pose.from_xyzw": {"tf": 1.7320508075688772}, "b3d.Pose.from_quat": {"tf": 1.7320508075688772}, "b3d.Pose.from_pos": {"tf": 1.7320508075688772}, "b3d.Pose.from_translation": {"tf": 1.7320508075688772}, "b3d.Pose.from_vec": {"tf": 2.449489742783178}, "b3d.Pose.from_pos_matrix": {"tf": 1.7320508075688772}, "b3d.Pose.from_position_and_target": {"tf": 4}, "b3d.Pose.sample_uniform_pose": {"tf": 1.7320508075688772}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 4}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 4}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 4}, "b3d.Rot": {"tf": 1.7320508075688772}, "b3d.MeshLibrary": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.__init__": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.vertices": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.faces": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.ranges": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.attributes": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.vertex_index_to_object": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.objects": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.make_empty_library": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.tree_flatten": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.get_object_name": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.get_num_objects": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.add_object": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.add_trimesh": {"tf": 1.7320508075688772}, "b3d.Mesh": {"tf": 1.7320508075688772}, "b3d.Mesh.__init__": {"tf": 2.449489742783178}, "b3d.Mesh.vertices": {"tf": 1.7320508075688772}, "b3d.Mesh.faces": {"tf": 1.7320508075688772}, "b3d.Mesh.vertex_attributes": {"tf": 1.7320508075688772}, "b3d.Mesh.tree_flatten": {"tf": 1.7320508075688772}, "b3d.Mesh.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.Mesh.copy": {"tf": 1.7320508075688772}, "b3d.Mesh.from_obj_file": {"tf": 1.7320508075688772}, "b3d.Mesh.from_obj": {"tf": 1.7320508075688772}, "b3d.Mesh.from_trimesh": {"tf": 1.7320508075688772}, "b3d.Mesh.save": {"tf": 1.7320508075688772}, "b3d.Mesh.transform": {"tf": 1.7320508075688772}, "b3d.Mesh.merge_meshes": {"tf": 1.7320508075688772}, "b3d.Mesh.transform_and_merge_meshes": {"tf": 1.7320508075688772}, "b3d.Mesh.transform_mesh": {"tf": 1.7320508075688772}, "b3d.Mesh.squeeze_mesh": {"tf": 1.7320508075688772}, "b3d.Mesh.mesh_from_xyz_colors_dimensions": {"tf": 1.7320508075688772}, "b3d.Mesh.rr_visualize": {"tf": 1.7320508075688772}, "b3d.Mesh.scale": {"tf": 1.7320508075688772}, "b3d.Mesh.cube_mesh": {"tf": 1.7320508075688772}, "b3d.Mesh.shape": {"tf": 1.7320508075688772}, "b3d.bayes3d": {"tf": 1.7320508075688772}, "b3d.bayes3d.enumerative_proposals": {"tf": 1.7320508075688772}, "b3d.bayes3d.enumerative_proposals.enumerate_and_select_best_move": {"tf": 1.7320508075688772}, "b3d.bayes3d.enumerative_proposals.gvmf_and_select_best_move": {"tf": 1.7320508075688772}, "b3d.bayes3d.enumerative_proposals.gvmf_and_sample": {"tf": 1.7320508075688772}, "b3d.bayes3d.likelihoods": {"tf": 1.7320508075688772}, "b3d.bayes3d.likelihoods.PixelOutlier": {"tf": 1.7320508075688772}, "b3d.bayes3d.likelihoods.PixelOutlier.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.7320508075688772}, "b3d.bayes3d.likelihoods.PixelOutlier.logpdf": {"tf": 1.7320508075688772}, "b3d.bayes3d.likelihoods.pixel_outlier_logpdfs": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.__init__": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.vertices": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.faces": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.ranges": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.attributes": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.vertex_index_to_object": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.objects": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.make_empty_library": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_flatten": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.get_object_name": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.get_num_objects": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.add_trimesh": {"tf": 1.7320508075688772}, "b3d.bayes3d.model": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.ModelArgs": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_trace": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.RGBDSensorModel": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 4}, "b3d.bayes3d.model.RGBDSensorModel.sample": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.RGBDSensorModel.logpdf": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.rgbd_sensor_model": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.model_multiobject_gl_factory": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.get_rendered_rgb_depth_from_trace": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.get_poses_from_trace": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.get_object_ids_from_trace": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.rerun_visualize_trace_t": {"tf": 1.7320508075688772}, "b3d.bayes3d.scene_graph": {"tf": 1.7320508075688772}, "b3d.bayes3d.scene_graph.contact_parameters_to_pose": {"tf": 1.7320508075688772}, "b3d.camera": {"tf": 1.7320508075688772}, "b3d.camera.ImageShape": {"tf": 1.7320508075688772}, "b3d.camera.ScreenCoordinates": {"tf": 1.7320508075688772}, "b3d.camera.CameraCoordinates": {"tf": 1.7320508075688772}, "b3d.camera.DepthImage": {"tf": 1.7320508075688772}, "b3d.camera.CameraMatrix3x3": {"tf": 1.7320508075688772}, "b3d.camera.BoundingBox": {"tf": 1.7320508075688772}, "b3d.camera.Intrinsics": {"tf": 1.7320508075688772}, "b3d.camera.Intrinsics.__init__": {"tf": 1.7320508075688772}, "b3d.camera.Intrinsics.width": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.height": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.fx": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.fy": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.cx": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.cy": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.near": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.far": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.from_array": {"tf": 1.7320508075688772}, "b3d.camera.Intrinsics.as_array": {"tf": 1.7320508075688772}, "b3d.camera.Intrinsics.downscale": {"tf": 1.7320508075688772}, "b3d.camera.RenderConfig": {"tf": 1.7320508075688772}, "b3d.camera.RenderConfig.__init__": {"tf": 1.7320508075688772}, "b3d.camera.RenderConfig.bg_color": {"tf": 1.4142135623730951}, "b3d.camera.pixel_centers_from_shape": {"tf": 3.605551275463989}, "b3d.camera.camera_from_screen_and_depth": {"tf": 4.795831523312719}, "b3d.camera.camera_from_screen": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_depth": {"tf": 5.0990195135927845}, "b3d.camera.xyz_from_depth": {"tf": 5.0990195135927845}, "b3d.camera.unproject_depth": {"tf": 5.0990195135927845}, "b3d.camera.screen_from_camera": {"tf": 4.69041575982343}, "b3d.camera.screen_from_xyz": {"tf": 4.69041575982343}, "b3d.camera.screen_from_world": {"tf": 2.6457513110645907}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 3.1622776601683795}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 3.4641016151377544}, "b3d.camera.canvas_from_intrinsics": {"tf": 2.8284271247461903}, "b3d.camera.homogeneous_coordinates": {"tf": 3.3166247903554}, "b3d.camera.planar_coordinates": {"tf": 3.3166247903554}, "b3d.camera.rgb_for_point_from_img": {"tf": 3.605551275463989}, "b3d.camera.CAM_ALONG_X": {"tf": 1.7320508075688772}, "b3d.chisight": {"tf": 1.7320508075688772}, "b3d.chisight.dense": {"tf": 1.7320508075688772}, "b3d.chisight.dense.dense_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.dense_model.make_dense_multiobject_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.BIGNUM": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 4.358898943540674}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.WINDOW": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.SIGMA": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.GAMMA": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams.EPSILON": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.hyperparams": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fx": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.fy": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cx": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics.cy": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DEFAULT_HYPERPARAMS": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 5.385164807134504}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 5.291502622129181}, "b3d.chisight.dense.differentiable_renderer.dist_params_to_average": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_pixel_attribute_dist_parameters": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 4.242640687119285}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 3.7416573867739413}, "b3d.chisight.dense.differentiable_renderer.get_z_values": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.get_signed_dists_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 3.3166247903554}, "b3d.chisight.dense.differentiable_renderer.pt_is_in_plane": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 3.3166247903554}, "b3d.chisight.dense.differentiable_renderer.project_ray_to_plane": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.dist_to_line_seg": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_half_width": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood.filter_size": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood.blur_intermediate_likelihood_func": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_half_width": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.filter_size": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.blur_intermediate_likelihood_func": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.lower_bound": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.upper_bound": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.filter_size": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_sample_func": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.blur_intermediate_likelihood_func": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.image_likelihood": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.kray_outlier_volume": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.kray_outlier_volume.kray_likelihood_intermediate": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.get_rgb_depth_inliers_from_observed_rendered_args": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.krays.make_krays_image_observation_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.normalize": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 3.3166247903554}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.dist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.argmap": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 4.123105625617661}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.pixel_dist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.map_args": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 3.7416573867739413}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgbd_image_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.image_sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.score": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 6.48074069840786}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.color_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgbd_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.laplace_rgb_uniform_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_rgb_laplace_depth_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s1": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s2": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s3": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 5.385164807134504}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.dist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s4": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.multi_uniform_rgb_depth_laplace": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 4.898979485566356}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 4}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.dists": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.sample": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.mixture_of_uniform_and_multi_uniformrgb_laplacedepth": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s5": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.s6": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 6.324555320336759}, "b3d.chisight.dense.likelihoods.other_likelihoods.multilaplace_pixel_model_rgb_only": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.uniform_multilaplace_mixture_rgb_only": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 5.5677643628300215}, "b3d.chisight.dense.likelihoods.simple_likelihood": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.simple_likelihood.simple_likelihood": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.uniform_pose_args": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 4.58257569495584}, "b3d.chisight.particle_system.visualize_particle_system": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.particle_2d_pixel_coordinates_to_image": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.visualize_sparse_observation": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.visualize_dense_gps": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.visualize_dense_observation": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 6.244997998398398}, "b3d.chisight.patch_tracking.get_default_multiobject_model_for_patchtracking": {"tf": 1.7320508075688772}, "b3d.chisight.sparse": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 4.358898943540674}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.positions": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.quaternions": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.diagonal_covariances": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.features": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_assignments": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_positions": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_quaternions": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_pose_data": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.from_absolute_pose_data": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flatten": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.flat": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_flatten": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_timesteps": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_particles": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.feature_dim": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.num_clusters": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.relative_particle_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.particle_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.cluster_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.absolute_particle_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.at_time": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.get_cluster": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_sfm": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 19.157244060668017}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 7.280109889280518}, "b3d.chisight.sparse.gps_utils.logaddexp": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.CovarianceMatrix": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.PrecisionMatrix": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.RayOrigin": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.RayDirection": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.dq_from_cov": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.bilinear": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 4}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 3.3166247903554}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.projective_gaussian": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.sample": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.projective_gaussian_mixture": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.dist": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 3}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 3}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p0": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.p1": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.IndexDist.sample": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.IndexDist.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.index_dist": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureHack": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.MixtureHack.sample": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureHack.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureStepHack": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 4}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.sample": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.logpdf": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.mixture_step_hack": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 2.23606797749979}, "b3d.chisight.sparse.hgps_utils": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 3.3166247903554}, "b3d.chisight.sparse.sparse_gps_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 7.810249675906654}, "b3d.chisight.sparse.sparse_gps_model.SparseGPSModelTrace": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_particle_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_assignments": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_object_poses": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_cameras": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_observations": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_num_timesteps": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_num_particles": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_num_objects": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.set_camera_choice": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.set_particle_choice": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.set_sensor_coordinates_choice": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.key": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.dummy_mapped_uniform_pose": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.intr": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.outlier_prob": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.p0": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.particle_pose_prior_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_pose_prior_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.camera_pose_prior_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.observation_model_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.object_motion_model_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.camera_motion_model_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.F": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.maker_args": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.model": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 5.656854249492381}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 7.3484692283495345}, "b3d.chisight.sparse.sparse_model_reality_check.tr": {"tf": 1.7320508075688772}, "b3d.colors": {"tf": 1.7320508075688772}, "b3d.colors.rgb_to_lab": {"tf": 1.7320508075688772}, "b3d.colors.lab_to_rgb": {"tf": 1.7320508075688772}, "b3d.colors.labd_to_rgbd": {"tf": 1.7320508075688772}, "b3d.colors.rgbd_to_labd": {"tf": 1.7320508075688772}, "b3d.colors.rgb_to_hsv": {"tf": 1.7320508075688772}, "b3d.colors.cie94_err": {"tf": 1.7320508075688772}, "b3d.colors.ciede2000_err": {"tf": 3.1622776601683795}, "b3d.colors.color_error_helper": {"tf": 1.7320508075688772}, "b3d.io": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 2.449489742783178}, "b3d.io.MeshData.__init__": {"tf": 1.7320508075688772}, "b3d.io.MeshData.vertices_positions": {"tf": 1.7320508075688772}, "b3d.io.MeshData.vertices_normals": {"tf": 1.7320508075688772}, "b3d.io.MeshData.vertices_uv": {"tf": 1.7320508075688772}, "b3d.io.MeshData.triangles": {"tf": 1.7320508075688772}, "b3d.io.MeshData.triangles_materials": {"tf": 1.7320508075688772}, "b3d.io.MeshData.materials": {"tf": 1.7320508075688772}, "b3d.io.MeshData.save": {"tf": 1.4142135623730951}, "b3d.io.MeshData.load": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 5.916079783099616}, "b3d.io.FeatureTrackData.__init__": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.observed_keypoints_positions": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.keypoint_visibility": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.camera_intrinsics": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.rgbd_images": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.fps": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.observed_features": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.latent_keypoint_positions": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.latent_keypoint_quaternions": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.object_assignments": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.camera_position": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.camera_quaternion": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.num_frames": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.num_keypoints": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.shape": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.uv": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.vis": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.rgb": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.visibility": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.rgbd": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.camera_poses": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.save": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.load": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.downscale": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.has_depth_channel": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.all_points_visible_at_frame0": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 2.23606797749979}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.quick_plot": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 7.483314773547883}, "b3d.io.VideoInput.__init__": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.rgb": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.xyz": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.camera_positions": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.camera_quaternions": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.camera_intrinsics_rgb": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.camera_intrinsics_depth": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.z": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.depth": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.rgbd": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.fps": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.to_dict": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.save": {"tf": 1.4142135623730951}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1.4142135623730951}, "b3d.io.VideoInput.load": {"tf": 1.4142135623730951}, "b3d.io.VideoInput.rgb_float": {"tf": 1.7320508075688772}, "b3d.pose": {"tf": 1.7320508075688772}, "b3d.pose.core": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 6}, "b3d.pose.core.Array.dtype": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ndim": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.size": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.shape": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.addressable_data": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.addressable_shards": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.global_shards": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sharding": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 7}, "b3d.pose.core.Array.any": {"tf": 7.54983443527075}, "b3d.pose.core.Array.argmax": {"tf": 6.164414002968976}, "b3d.pose.core.Array.argmin": {"tf": 6.164414002968976}, "b3d.pose.core.Array.argpartition": {"tf": 8.602325267042627}, "b3d.pose.core.Array.argsort": {"tf": 7.280109889280518}, "b3d.pose.core.Array.astype": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.choose": {"tf": 12.206555615733702}, "b3d.pose.core.Array.clip": {"tf": 3}, "b3d.pose.core.Array.conj": {"tf": 5.916079783099616}, "b3d.pose.core.Array.conjugate": {"tf": 5.916079783099616}, "b3d.pose.core.Array.compress": {"tf": 3}, "b3d.pose.core.Array.copy": {"tf": 6.708203932499369}, "b3d.pose.core.Array.cumprod": {"tf": 6.4031242374328485}, "b3d.pose.core.Array.cumsum": {"tf": 7.14142842854285}, "b3d.pose.core.Array.diagonal": {"tf": 9.486832980505138}, "b3d.pose.core.Array.dot": {"tf": 21.307275752662516}, "b3d.pose.core.Array.flatten": {"tf": 15.874507866387544}, "b3d.pose.core.Array.item": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 7.416198487095663}, "b3d.pose.core.Array.mean": {"tf": 7.14142842854285}, "b3d.pose.core.Array.min": {"tf": 7.416198487095663}, "b3d.pose.core.Array.nonzero": {"tf": 23.93741840717165}, "b3d.pose.core.Array.prod": {"tf": 7.874007874011811}, "b3d.pose.core.Array.ptp": {"tf": 7.3484692283495345}, "b3d.pose.core.Array.ravel": {"tf": 15.874507866387544}, "b3d.pose.core.Array.repeat": {"tf": 6.6332495807108}, "b3d.pose.core.Array.reshape": {"tf": 3}, "b3d.pose.core.Array.round": {"tf": 4.58257569495584}, "b3d.pose.core.Array.searchsorted": {"tf": 8.602325267042627}, "b3d.pose.core.Array.sort": {"tf": 5.744562646538029}, "b3d.pose.core.Array.squeeze": {"tf": 5.916079783099616}, "b3d.pose.core.Array.std": {"tf": 7.211102550927978}, "b3d.pose.core.Array.sum": {"tf": 8}, "b3d.pose.core.Array.swapaxes": {"tf": 6.082762530298219}, "b3d.pose.core.Array.take": {"tf": 8.717797887081348}, "b3d.pose.core.Array.trace": {"tf": 7.54983443527075}, "b3d.pose.core.Array.transpose": {"tf": 3}, "b3d.pose.core.Array.var": {"tf": 7.54983443527075}, "b3d.pose.core.Array.view": {"tf": 16.881943016134134}, "b3d.pose.core.Array.flat": {"tf": 2.449489742783178}, "b3d.pose.core.Array.T": {"tf": 22.181073012818835}, "b3d.pose.core.Array.mT": {"tf": 14.66287829861518}, "b3d.pose.core.Array.real": {"tf": 5.656854249492381}, "b3d.pose.core.Array.imag": {"tf": 5.656854249492381}, "b3d.pose.core.Array.nbytes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.itemsize": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 20.46948949045872}, "b3d.pose.core.Float": {"tf": 1.7320508075688772}, "b3d.pose.core.Int": {"tf": 1.7320508075688772}, "b3d.pose.core.Quaternion": {"tf": 1.7320508075688772}, "b3d.pose.core.multiply_quats": {"tf": 1.7320508075688772}, "b3d.pose.core.multiply_quat_and_vec": {"tf": 1.7320508075688772}, "b3d.pose.core.choose_good_quat": {"tf": 2.449489742783178}, "b3d.pose.core.sample_uniform_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.logpdf_uniform_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 4}, "b3d.pose.core.logpdf_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.camera_from_position_and_target": {"tf": 4}, "b3d.pose.core.Pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.__init__": {"tf": 2}, "b3d.pose.core.Pose.identity_quaternion": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.unit_quaternion": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.pos": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.position": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.xyzw": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.quat": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.quaternion": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.wxyz": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.rot": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.normalize": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.quat_in_upper_hemisphere": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.canonical": {"tf": 2.449489742783178}, "b3d.pose.core.Pose.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.tree_flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.copy": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.flat": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.shape": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.reshape": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.slice": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.as_matrix": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.identity": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.eye": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.id": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.apply": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.compose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.scale": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.concatenate_poses": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.concat": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.stack_poses": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.split": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.inv": {"tf": 5}, "b3d.pose.core.Pose.inverse": {"tf": 5}, "b3d.pose.core.Pose.from_matrix": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_quat": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_pos": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_translation": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_vec": {"tf": 2.449489742783178}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 4}, "b3d.pose.core.Pose.sample_uniform_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 4}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 4}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 4}, "b3d.pose.pose_utils": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.uniform_samples_from_disc": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 3}, "b3d.pose.pose_utils.volume_of_3_ball": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 2.6457513110645907}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 3.3166247903554}, "b3d.pose.pose_utils.UniformPoseInBall": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 4}, "b3d.pose.pose_utils.UniformPoseInBall.sample": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.UniformPoseInBall.logpdf": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.uniform_pose_in_ball": {"tf": 1.7320508075688772}, "b3d.renderer": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.renderer_env": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.num_layers": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.from_intrinsics_object": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.get_intrinsics_object": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.set_intrinsics": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.interpolate_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.interpolate": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.8284271247461903}, "b3d.renderer.RendererOriginal": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.__init__": {"tf": 2.449489742783178}, "b3d.renderer.RendererOriginal.renderer_env": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.set_intrinsics": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.rasterize_mesh": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.rasterize_original": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.interpolate_many": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.interpolate": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.render_many": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.render": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.render_rgbd_many": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.render_rgbd": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.render_rgbd_from_mesh": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.rr_log_rgbd": {"tf": 1.7320508075688772}, "b3d.types": {"tf": 1.7320508075688772}, "b3d.types.Shape": {"tf": 1.7320508075688772}, "b3d.types.Array": {"tf": 6}, "b3d.types.Array.dtype": {"tf": 2.23606797749979}, "b3d.types.Array.ndim": {"tf": 1.7320508075688772}, "b3d.types.Array.size": {"tf": 1.7320508075688772}, "b3d.types.Array.shape": {"tf": 1.7320508075688772}, "b3d.types.Array.addressable_data": {"tf": 1.7320508075688772}, "b3d.types.Array.addressable_shards": {"tf": 1.7320508075688772}, "b3d.types.Array.global_shards": {"tf": 1.7320508075688772}, "b3d.types.Array.is_fully_addressable": {"tf": 3.4641016151377544}, "b3d.types.Array.is_fully_replicated": {"tf": 1.4142135623730951}, "b3d.types.Array.sharding": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 7}, "b3d.types.Array.any": {"tf": 7.54983443527075}, "b3d.types.Array.argmax": {"tf": 6.164414002968976}, "b3d.types.Array.argmin": {"tf": 6.164414002968976}, "b3d.types.Array.argpartition": {"tf": 8.602325267042627}, "b3d.types.Array.argsort": {"tf": 7.280109889280518}, "b3d.types.Array.astype": {"tf": 3.4641016151377544}, "b3d.types.Array.choose": {"tf": 12.206555615733702}, "b3d.types.Array.clip": {"tf": 3}, "b3d.types.Array.conj": {"tf": 5.916079783099616}, "b3d.types.Array.conjugate": {"tf": 5.916079783099616}, "b3d.types.Array.compress": {"tf": 3}, "b3d.types.Array.copy": {"tf": 6.708203932499369}, "b3d.types.Array.cumprod": {"tf": 6.4031242374328485}, "b3d.types.Array.cumsum": {"tf": 7.14142842854285}, "b3d.types.Array.diagonal": {"tf": 9.486832980505138}, "b3d.types.Array.dot": {"tf": 21.307275752662516}, "b3d.types.Array.flatten": {"tf": 15.874507866387544}, "b3d.types.Array.item": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 7.416198487095663}, "b3d.types.Array.mean": {"tf": 7.14142842854285}, "b3d.types.Array.min": {"tf": 7.416198487095663}, "b3d.types.Array.nonzero": {"tf": 23.93741840717165}, "b3d.types.Array.prod": {"tf": 7.874007874011811}, "b3d.types.Array.ptp": {"tf": 7.3484692283495345}, "b3d.types.Array.ravel": {"tf": 15.874507866387544}, "b3d.types.Array.repeat": {"tf": 6.6332495807108}, "b3d.types.Array.reshape": {"tf": 3}, "b3d.types.Array.round": {"tf": 4.58257569495584}, "b3d.types.Array.searchsorted": {"tf": 8.602325267042627}, "b3d.types.Array.sort": {"tf": 5.744562646538029}, "b3d.types.Array.squeeze": {"tf": 5.916079783099616}, "b3d.types.Array.std": {"tf": 7.211102550927978}, "b3d.types.Array.sum": {"tf": 8}, "b3d.types.Array.swapaxes": {"tf": 6.082762530298219}, "b3d.types.Array.take": {"tf": 8.717797887081348}, "b3d.types.Array.trace": {"tf": 7.54983443527075}, "b3d.types.Array.transpose": {"tf": 3}, "b3d.types.Array.var": {"tf": 7.54983443527075}, "b3d.types.Array.view": {"tf": 16.881943016134134}, "b3d.types.Array.flat": {"tf": 2.449489742783178}, "b3d.types.Array.T": {"tf": 22.181073012818835}, "b3d.types.Array.mT": {"tf": 14.66287829861518}, "b3d.types.Array.real": {"tf": 5.656854249492381}, "b3d.types.Array.imag": {"tf": 5.656854249492381}, "b3d.types.Array.nbytes": {"tf": 1.7320508075688772}, "b3d.types.Array.itemsize": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 20.46948949045872}, "b3d.types.Bool": {"tf": 1.7320508075688772}, "b3d.types.Float": {"tf": 1.7320508075688772}, "b3d.types.Int": {"tf": 1.7320508075688772}, "b3d.types.Quaternion": {"tf": 1.7320508075688772}, "b3d.types.Indexer": {"tf": 1.7320508075688772}, "b3d.types.Matrix": {"tf": 1.7320508075688772}, "b3d.types.Vector": {"tf": 1.7320508075688772}, "b3d.types.Direction": {"tf": 1.7320508075688772}, "b3d.types.GaussianParticle": {"tf": 1.7320508075688772}, "b3d.types.Key": {"tf": 1.7320508075688772}, "b3d.types.Pytree": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 8.602325267042627}, "b3d.types.GenerativeFunction.handle_kwargs": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.get_trace_shape": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.get_empty_trace": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.gfi_boundary": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 7.3484692283495345}, "b3d.types.GenerativeFunction.update": {"tf": 12.36931687685298}, "b3d.types.GenerativeFunction.assess": {"tf": 5.5677643628300215}, "b3d.types.GenerativeFunction.importance": {"tf": 5.656854249492381}, "b3d.types.GenerativeFunction.propose": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 3}, "b3d.types.GenerativeFunction.vmap": {"tf": 5.477225575051661}, "b3d.types.GenerativeFunction.repeat": {"tf": 6.48074069840786}, "b3d.types.GenerativeFunction.scan": {"tf": 16.278820596099706}, "b3d.types.GenerativeFunction.accumulate": {"tf": 13.674794331177344}, "b3d.types.GenerativeFunction.reduce": {"tf": 12.449899597988733}, "b3d.types.GenerativeFunction.iterate": {"tf": 13}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 11.532562594670797}, "b3d.types.GenerativeFunction.mask": {"tf": 6.164414002968976}, "b3d.types.GenerativeFunction.or_else": {"tf": 6.855654600401044}, "b3d.types.GenerativeFunction.switch": {"tf": 6.855654600401044}, "b3d.types.GenerativeFunction.mix": {"tf": 7.416198487095663}, "b3d.types.GenerativeFunction.dimap": {"tf": 6.708203932499369}, "b3d.types.GenerativeFunction.map": {"tf": 5.477225575051661}, "b3d.types.GenerativeFunction.contramap": {"tf": 5.830951894845301}, "b3d.types.GenerativeFunction.marginal": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.target": {"tf": 1.7320508075688772}, "b3d.types.NamedArgs": {"tf": 1.7320508075688772}, "b3d.types.NamedArgs.__init__": {"tf": 1.7320508075688772}, "b3d.types.NamedArgs.tree_flatten": {"tf": 1.7320508075688772}, "b3d.types.NamedArgs.tree_unflatten": {"tf": 1.7320508075688772}, "b3d.utils": {"tf": 1.7320508075688772}, "b3d.utils.get_root_path": {"tf": 1.7320508075688772}, "b3d.utils.get_assets": {"tf": 1.4142135623730951}, "b3d.utils.get_assets_path": {"tf": 1.4142135623730951}, "b3d.utils.make_assets_path": {"tf": 1.7320508075688772}, "b3d.utils.get_shared": {"tf": 1.4142135623730951}, "b3d.utils.get_gcloud_bucket_ref": {"tf": 1.7320508075688772}, "b3d.utils.keysplit": {"tf": 1.7320508075688772}, "b3d.utils.split_key": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_nearest": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_linear": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_linear_vmap": {"tf": 1.7320508075688772}, "b3d.utils.clip_rgb": {"tf": 1.7320508075688772}, "b3d.utils.downsize_images": {"tf": 1.7320508075688772}, "b3d.utils.xyz_from_depth": {"tf": 1.7320508075688772}, "b3d.utils.xyz_from_depth_vectorized": {"tf": 1.7320508075688772}, "b3d.utils.xyz_to_pixel_coordinates": {"tf": 1.7320508075688772}, "b3d.utils.segment_point_cloud": {"tf": 1.7320508075688772}, "b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.pad_with_1": {"tf": 1.7320508075688772}, "b3d.utils.make_mesh_from_point_cloud_and_resolution": {"tf": 1.7320508075688772}, "b3d.utils.get_vertices_faces_colors_from_mesh": {"tf": 1.7320508075688772}, "b3d.utils.get_rgb_pil_image": {"tf": 2.8284271247461903}, "b3d.utils.viz_rgb": {"tf": 2.8284271247461903}, "b3d.utils.overlay_image": {"tf": 3}, "b3d.utils.make_gif_from_pil_images": {"tf": 2.8284271247461903}, "b3d.utils.make_video_from_pil_images": {"tf": 1.7320508075688772}, "b3d.utils.vstack_images": {"tf": 2.8284271247461903}, "b3d.utils.hstack_images": {"tf": 2.8284271247461903}, "b3d.utils.multi_panel": {"tf": 3.7416573867739413}, "b3d.utils.make_onehot": {"tf": 1.7320508075688772}, "b3d.utils.multivmap": {"tf": 1.7320508075688772}, "b3d.utils.update_choices": {"tf": 1.7320508075688772}, "b3d.utils.update_choices_get_score": {"tf": 1.7320508075688772}, "b3d.utils.enumerate_choices": {"tf": 1.7320508075688772}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1.7320508075688772}, "b3d.utils.grid1": {"tf": 1.7320508075688772}, "b3d.utils.grid2": {"tf": 2.8284271247461903}, "b3d.utils.grid3": {"tf": 3.605551275463989}, "b3d.utils.grid4": {"tf": 4.242640687119285}, "b3d.utils.grid_trace": {"tf": 1.7320508075688772}, "b3d.utils.nn_background_segmentation": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_pose": {"tf": 1.7320508075688772}, "b3d.utils.rr_init": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_rgb": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_depth": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_mask": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_rgbd": {"tf": 1.7320508075688772}, "b3d.utils.rr_log_cloud": {"tf": 1.7320508075688772}, "b3d.utils.rr_set_time": {"tf": 1.7320508075688772}, "b3d.utils.reload": {"tf": 1.7320508075688772}, "b3d.utils.normalize_log_scores": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 6}, "b3d.utils.Array.dtype": {"tf": 2.23606797749979}, "b3d.utils.Array.ndim": {"tf": 1.7320508075688772}, "b3d.utils.Array.size": {"tf": 1.7320508075688772}, "b3d.utils.Array.shape": {"tf": 1.7320508075688772}, "b3d.utils.Array.addressable_data": {"tf": 1.7320508075688772}, "b3d.utils.Array.addressable_shards": {"tf": 1.7320508075688772}, "b3d.utils.Array.global_shards": {"tf": 1.7320508075688772}, "b3d.utils.Array.is_fully_addressable": {"tf": 3.4641016151377544}, "b3d.utils.Array.is_fully_replicated": {"tf": 1.4142135623730951}, "b3d.utils.Array.sharding": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 7}, "b3d.utils.Array.any": {"tf": 7.54983443527075}, "b3d.utils.Array.argmax": {"tf": 6.164414002968976}, "b3d.utils.Array.argmin": {"tf": 6.164414002968976}, "b3d.utils.Array.argpartition": {"tf": 8.602325267042627}, "b3d.utils.Array.argsort": {"tf": 7.280109889280518}, "b3d.utils.Array.astype": {"tf": 3.4641016151377544}, "b3d.utils.Array.choose": {"tf": 12.206555615733702}, "b3d.utils.Array.clip": {"tf": 3}, "b3d.utils.Array.conj": {"tf": 5.916079783099616}, "b3d.utils.Array.conjugate": {"tf": 5.916079783099616}, "b3d.utils.Array.compress": {"tf": 3}, "b3d.utils.Array.copy": {"tf": 6.708203932499369}, "b3d.utils.Array.cumprod": {"tf": 6.4031242374328485}, "b3d.utils.Array.cumsum": {"tf": 7.14142842854285}, "b3d.utils.Array.diagonal": {"tf": 9.486832980505138}, "b3d.utils.Array.dot": {"tf": 21.307275752662516}, "b3d.utils.Array.flatten": {"tf": 15.874507866387544}, "b3d.utils.Array.item": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 7.416198487095663}, "b3d.utils.Array.mean": {"tf": 7.14142842854285}, "b3d.utils.Array.min": {"tf": 7.416198487095663}, "b3d.utils.Array.nonzero": {"tf": 23.93741840717165}, "b3d.utils.Array.prod": {"tf": 7.874007874011811}, "b3d.utils.Array.ptp": {"tf": 7.3484692283495345}, "b3d.utils.Array.ravel": {"tf": 15.874507866387544}, "b3d.utils.Array.repeat": {"tf": 6.6332495807108}, "b3d.utils.Array.reshape": {"tf": 3}, "b3d.utils.Array.round": {"tf": 4.58257569495584}, "b3d.utils.Array.searchsorted": {"tf": 8.602325267042627}, "b3d.utils.Array.sort": {"tf": 5.744562646538029}, "b3d.utils.Array.squeeze": {"tf": 5.916079783099616}, "b3d.utils.Array.std": {"tf": 7.211102550927978}, "b3d.utils.Array.sum": {"tf": 8}, "b3d.utils.Array.swapaxes": {"tf": 6.082762530298219}, "b3d.utils.Array.take": {"tf": 8.717797887081348}, "b3d.utils.Array.trace": {"tf": 7.54983443527075}, "b3d.utils.Array.transpose": {"tf": 3}, "b3d.utils.Array.var": {"tf": 7.54983443527075}, "b3d.utils.Array.view": {"tf": 16.881943016134134}, "b3d.utils.Array.flat": {"tf": 2.449489742783178}, "b3d.utils.Array.T": {"tf": 22.181073012818835}, "b3d.utils.Array.mT": {"tf": 14.66287829861518}, "b3d.utils.Array.real": {"tf": 5.656854249492381}, "b3d.utils.Array.imag": {"tf": 5.656854249492381}, "b3d.utils.Array.nbytes": {"tf": 1.7320508075688772}, "b3d.utils.Array.itemsize": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 20.46948949045872}, "b3d.utils.square_center_width_color_to_vertices_faces_colors": {"tf": 1.7320508075688772}, "b3d.utils.all_pairs": {"tf": 1.7320508075688772}, "b3d.utils.distinct_colors": {"tf": 2.8284271247461903}, "b3d.utils.fit_plane": {"tf": 1.7320508075688772}, "b3d.utils.fit_table_plane": {"tf": 1.7320508075688772}, "b3d.utils.separate_shared_vertices": {"tf": 1.7320508075688772}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 3}, "b3d.utils.HIINTERFACE": {"tf": 1.7320508075688772}, "b3d.utils.carvekit_get_foreground_mask": {"tf": 1.7320508075688772}, "b3d.utils.discretize": {"tf": 1.7320508075688772}, "b3d.utils.voxelize": {"tf": 1.4142135623730951}, "b3d.utils.voxel_occupied_occluded_free": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.7320508075688772}, "b3d.utils.make_grid_points": {"tf": 1.4142135623730951}}, "df": 929, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 2.8284271247461903}, "b3d.io.VideoInput": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.update": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 61, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.importance": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}}, "df": 16, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 3.3166247903554}, "b3d.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.Renderer.render_attribute_many": {"tf": 2}, "b3d.Renderer.render_attribute": {"tf": 2}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 2.449489742783178}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 2.8284271247461903}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 3.3166247903554}, "b3d.renderer.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2}, "b3d.renderer.Renderer.render_attribute": {"tf": 2}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 20, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 12}, "[": {"docs": {}, "df": 0, "f": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}}, "df": 8, "s": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 11}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 4.358898943540674}, "b3d.pose.core.Array.mT": {"tf": 3}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.T": {"tf": 4.358898943540674}, "b3d.types.Array.mT": {"tf": 3}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.T": {"tf": 4.358898943540674}, "b3d.utils.Array.mT": {"tf": 3}}, "df": 13, "d": {"docs": {"b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 9}, "s": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.8284271247461903}}, "df": 1}}}, "e": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.update": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 14, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 6}, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 15}, "r": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 2}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 2}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 80}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "h": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}}, "df": 3, "e": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 4.242640687119285}, "b3d.Renderer.rasterize": {"tf": 3.4641016151377544}, "b3d.Renderer.render_attribute_many": {"tf": 3.7416573867739413}, "b3d.Renderer.render_attribute": {"tf": 3.7416573867739413}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1.7320508075688772}, "b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 3}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 3}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 3}, "b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.Mesh.__init__": {"tf": 3.4641016151377544}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.7320508075688772}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 2.23606797749979}, "b3d.camera.xyz_from_depth": {"tf": 2.23606797749979}, "b3d.camera.unproject_depth": {"tf": 2.23606797749979}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1.7320508075688772}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 3.3166247903554}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2.449489742783178}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 3}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 3.1622776601683795}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2.6457513110645907}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 2.449489742783178}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 4.242640687119285}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 3.3166247903554}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 3.7416573867739413}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 3.1622776601683795}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 3.872983346207417}, "b3d.colors.ciede2000_err": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 3.3166247903554}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.downscale": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 5.196152422706632}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ndim": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.size": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.shape": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sharding": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.any": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.argmax": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.argmin": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.argpartition": {"tf": 4.795831523312719}, "b3d.pose.core.Array.argsort": {"tf": 3.3166247903554}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 4.358898943540674}, "b3d.pose.core.Array.conj": {"tf": 2}, "b3d.pose.core.Array.conjugate": {"tf": 2}, "b3d.pose.core.Array.copy": {"tf": 2.449489742783178}, "b3d.pose.core.Array.cumprod": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.cumsum": {"tf": 4.47213595499958}, "b3d.pose.core.Array.diagonal": {"tf": 6.4031242374328485}, "b3d.pose.core.Array.dot": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.flatten": {"tf": 2.23606797749979}, "b3d.pose.core.Array.max": {"tf": 3.605551275463989}, "b3d.pose.core.Array.mean": {"tf": 5}, "b3d.pose.core.Array.min": {"tf": 3.605551275463989}, "b3d.pose.core.Array.nonzero": {"tf": 4.69041575982343}, "b3d.pose.core.Array.prod": {"tf": 5.477225575051661}, "b3d.pose.core.Array.ptp": {"tf": 4.47213595499958}, "b3d.pose.core.Array.ravel": {"tf": 2.23606797749979}, "b3d.pose.core.Array.repeat": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.sort": {"tf": 2}, "b3d.pose.core.Array.squeeze": {"tf": 2.23606797749979}, "b3d.pose.core.Array.std": {"tf": 5.385164807134504}, "b3d.pose.core.Array.sum": {"tf": 5.385164807134504}, "b3d.pose.core.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 4.242640687119285}, "b3d.pose.core.Array.trace": {"tf": 5.291502622129181}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 5.385164807134504}, "b3d.pose.core.Array.view": {"tf": 4.242640687119285}, "b3d.pose.core.Array.T": {"tf": 4.123105625617661}, "b3d.pose.core.Array.mT": {"tf": 2.449489742783178}, "b3d.pose.core.Array.real": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.imag": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.nbytes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 4.242640687119285}, "b3d.pose.core.choose_good_quat": {"tf": 2.23606797749979}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 3}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 3}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 3}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 3}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 4.242640687119285}, "b3d.renderer.Renderer.rasterize": {"tf": 3.4641016151377544}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 3.7416573867739413}, "b3d.renderer.Renderer.render_attribute": {"tf": 3.7416573867739413}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1.4142135623730951}, "b3d.types.Array.ndim": {"tf": 1.4142135623730951}, "b3d.types.Array.size": {"tf": 1.4142135623730951}, "b3d.types.Array.shape": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.types.Array.sharding": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 3.4641016151377544}, "b3d.types.Array.any": {"tf": 3.4641016151377544}, "b3d.types.Array.argmax": {"tf": 3.7416573867739413}, "b3d.types.Array.argmin": {"tf": 3.7416573867739413}, "b3d.types.Array.argpartition": {"tf": 4.795831523312719}, "b3d.types.Array.argsort": {"tf": 3.3166247903554}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 4.358898943540674}, "b3d.types.Array.conj": {"tf": 2}, "b3d.types.Array.conjugate": {"tf": 2}, "b3d.types.Array.copy": {"tf": 2.449489742783178}, "b3d.types.Array.cumprod": {"tf": 3.7416573867739413}, "b3d.types.Array.cumsum": {"tf": 4.47213595499958}, "b3d.types.Array.diagonal": {"tf": 6.4031242374328485}, "b3d.types.Array.dot": {"tf": 3.7416573867739413}, "b3d.types.Array.flatten": {"tf": 2.23606797749979}, "b3d.types.Array.max": {"tf": 3.605551275463989}, "b3d.types.Array.mean": {"tf": 5}, "b3d.types.Array.min": {"tf": 3.605551275463989}, "b3d.types.Array.nonzero": {"tf": 4.69041575982343}, "b3d.types.Array.prod": {"tf": 5.477225575051661}, "b3d.types.Array.ptp": {"tf": 4.47213595499958}, "b3d.types.Array.ravel": {"tf": 2.23606797749979}, "b3d.types.Array.repeat": {"tf": 3.7416573867739413}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 3.4641016151377544}, "b3d.types.Array.sort": {"tf": 2}, "b3d.types.Array.squeeze": {"tf": 2.23606797749979}, "b3d.types.Array.std": {"tf": 5.385164807134504}, "b3d.types.Array.sum": {"tf": 5.385164807134504}, "b3d.types.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 4.242640687119285}, "b3d.types.Array.trace": {"tf": 5.291502622129181}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 5.385164807134504}, "b3d.types.Array.view": {"tf": 4.242640687119285}, "b3d.types.Array.T": {"tf": 4.123105625617661}, "b3d.types.Array.mT": {"tf": 2.449489742783178}, "b3d.types.Array.real": {"tf": 2.6457513110645907}, "b3d.types.Array.imag": {"tf": 2.6457513110645907}, "b3d.types.Array.nbytes": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 4.242640687119285}, "b3d.types.GenerativeFunction": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.simulate": {"tf": 3.872983346207417}, "b3d.types.GenerativeFunction.update": {"tf": 6.928203230275509}, "b3d.types.GenerativeFunction.assess": {"tf": 3.872983346207417}, "b3d.types.GenerativeFunction.importance": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.propose": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 5.656854249492381}, "b3d.types.GenerativeFunction.accumulate": {"tf": 4.358898943540674}, "b3d.types.GenerativeFunction.reduce": {"tf": 4.242640687119285}, "b3d.types.GenerativeFunction.iterate": {"tf": 3.3166247903554}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 3.7416573867739413}, "b3d.types.GenerativeFunction.mask": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 2}, "b3d.types.GenerativeFunction.mix": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.dimap": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.map": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.23606797749979}, "b3d.utils.get_assets": {"tf": 1.4142135623730951}, "b3d.utils.get_assets_path": {"tf": 1.4142135623730951}, "b3d.utils.get_shared": {"tf": 1.4142135623730951}, "b3d.utils.aabb": {"tf": 1.7320508075688772}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1.4142135623730951}, "b3d.utils.Array.ndim": {"tf": 1.4142135623730951}, "b3d.utils.Array.size": {"tf": 1.4142135623730951}, "b3d.utils.Array.shape": {"tf": 1.4142135623730951}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.utils.Array.sharding": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 3.4641016151377544}, "b3d.utils.Array.any": {"tf": 3.4641016151377544}, "b3d.utils.Array.argmax": {"tf": 3.7416573867739413}, "b3d.utils.Array.argmin": {"tf": 3.7416573867739413}, "b3d.utils.Array.argpartition": {"tf": 4.795831523312719}, "b3d.utils.Array.argsort": {"tf": 3.3166247903554}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 4.358898943540674}, "b3d.utils.Array.conj": {"tf": 2}, "b3d.utils.Array.conjugate": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 2.449489742783178}, "b3d.utils.Array.cumprod": {"tf": 3.7416573867739413}, "b3d.utils.Array.cumsum": {"tf": 4.47213595499958}, "b3d.utils.Array.diagonal": {"tf": 6.4031242374328485}, "b3d.utils.Array.dot": {"tf": 3.7416573867739413}, "b3d.utils.Array.flatten": {"tf": 2.23606797749979}, "b3d.utils.Array.max": {"tf": 3.605551275463989}, "b3d.utils.Array.mean": {"tf": 5}, "b3d.utils.Array.min": {"tf": 3.605551275463989}, "b3d.utils.Array.nonzero": {"tf": 4.69041575982343}, "b3d.utils.Array.prod": {"tf": 5.477225575051661}, "b3d.utils.Array.ptp": {"tf": 4.47213595499958}, "b3d.utils.Array.ravel": {"tf": 2.23606797749979}, "b3d.utils.Array.repeat": {"tf": 3.7416573867739413}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 3.4641016151377544}, "b3d.utils.Array.sort": {"tf": 2}, "b3d.utils.Array.squeeze": {"tf": 2.23606797749979}, "b3d.utils.Array.std": {"tf": 5.385164807134504}, "b3d.utils.Array.sum": {"tf": 5.385164807134504}, "b3d.utils.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 4.242640687119285}, "b3d.utils.Array.trace": {"tf": 5.291502622129181}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 5.385164807134504}, "b3d.utils.Array.view": {"tf": 4.242640687119285}, "b3d.utils.Array.T": {"tf": 4.123105625617661}, "b3d.utils.Array.mT": {"tf": 2.449489742783178}, "b3d.utils.Array.real": {"tf": 2.6457513110645907}, "b3d.utils.Array.imag": {"tf": 2.6457513110645907}, "b3d.utils.Array.nbytes": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 4.242640687119285}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 297, "n": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.449489742783178}, "b3d.pose.core.Array.diagonal": {"tf": 2.23606797749979}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.449489742783178}, "b3d.types.Array.diagonal": {"tf": 2.23606797749979}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.449489742783178}, "b3d.utils.Array.diagonal": {"tf": 2.23606797749979}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1}}, "df": 63}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 13, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}}, "df": 11}}, "m": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 9}}, "y": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 2}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.449489742783178}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 2}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 2}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.449489742783178}}, "df": 116}, "n": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 61}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 2.23606797749979}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 2.23606797749979}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 2.23606797749979}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 144}, "r": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 31}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}}, "df": 3}}}, "o": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 2}, "b3d.Renderer.render_attribute": {"tf": 2}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.449489742783178}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.any": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.argsort": {"tf": 2}, "b3d.pose.core.Array.astype": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 3}, "b3d.pose.core.Array.clip": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 4.358898943540674}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 2.449489742783178}, "b3d.pose.core.Array.min": {"tf": 2.23606797749979}, "b3d.pose.core.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.prod": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ptp": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 2}, "b3d.pose.core.Array.std": {"tf": 2.449489742783178}, "b3d.pose.core.Array.sum": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.take": {"tf": 3}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 2.449489742783178}, "b3d.pose.core.Array.view": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 3}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2}, "b3d.renderer.Renderer.render_attribute": {"tf": 2}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 2.8284271247461903}, "b3d.types.Array.any": {"tf": 2.8284271247461903}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 2.6457513110645907}, "b3d.types.Array.argsort": {"tf": 2}, "b3d.types.Array.astype": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 3}, "b3d.types.Array.clip": {"tf": 1.4142135623730951}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 4.358898943540674}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 2.449489742783178}, "b3d.types.Array.min": {"tf": 2.23606797749979}, "b3d.types.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.types.Array.prod": {"tf": 2.449489742783178}, "b3d.types.Array.ptp": {"tf": 2.449489742783178}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 2}, "b3d.types.Array.std": {"tf": 2.449489742783178}, "b3d.types.Array.sum": {"tf": 2.6457513110645907}, "b3d.types.Array.take": {"tf": 3}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 2.449489742783178}, "b3d.types.Array.view": {"tf": 2}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 3}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 4.47213595499958}, "b3d.types.GenerativeFunction.assess": {"tf": 2}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 2.8284271247461903}, "b3d.utils.Array.any": {"tf": 2.8284271247461903}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 2.6457513110645907}, "b3d.utils.Array.argsort": {"tf": 2}, "b3d.utils.Array.astype": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 3}, "b3d.utils.Array.clip": {"tf": 1.4142135623730951}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 4.358898943540674}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 2.449489742783178}, "b3d.utils.Array.min": {"tf": 2.23606797749979}, "b3d.utils.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.utils.Array.prod": {"tf": 2.449489742783178}, "b3d.utils.Array.ptp": {"tf": 2.449489742783178}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 2}, "b3d.utils.Array.std": {"tf": 2.449489742783178}, "b3d.utils.Array.sum": {"tf": 2.6457513110645907}, "b3d.utils.Array.take": {"tf": 3}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 2.449489742783178}, "b3d.utils.Array.view": {"tf": 2}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 3}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 220, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}}, "df": 4}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.nbytes": {"tf": 1}}, "df": 10}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}}, "df": 11, "s": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 15}, "n": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}}, "df": 12}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 14}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.multi_panel": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.MeshData": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 6}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput": {"tf": 2.6457513110645907}, "b3d.pose.core.Array": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.7320508075688772}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.real": {"tf": 1.4142135623730951}, "b3d.types.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 4}, "b3d.types.GenerativeFunction.accumulate": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.reduce": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array": {"tf": 1.7320508075688772}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1.4142135623730951}, "b3d.utils.Array.imag": {"tf": 1.4142135623730951}}, "df": 67, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}}, "df": 15}}}}}, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 19}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 52, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}}}}, "s": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 8, "s": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 2}}, "df": 1}}}}, "*": {"docs": {}, "df": 0, "v": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 27}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}, "m": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1.4142135623730951}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 9}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "n": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 2.8284271247461903}, "b3d.types.Array.mean": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 2.8284271247461903}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.copy": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 19}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 46, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 10}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.Renderer.rasterize": {"tf": 2.23606797749979}, "b3d.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.Renderer.render_attribute": {"tf": 2.23606797749979}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 2.6457513110645907}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.rasterize": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 2.6457513110645907}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 2.6457513110645907}}, "df": 40}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "f": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 22, "s": {"docs": {"b3d.io.MeshData": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.dot": {"tf": 2.449489742783178}, "b3d.types.Array.dot": {"tf": 2.449489742783178}, "b3d.utils.Array.dot": {"tf": 2.449489742783178}}, "df": 3}}}}, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 2.449489742783178}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 16}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "o": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}, "x": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 18}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 2}}, "df": 1}}}}, "y": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 45}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 6}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.ravel": {"tf": 2}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7, "\u2013": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}}}, "%": {"docs": {}, "df": 0, "e": {"2": {"docs": {}, "df": 0, "%": {"8": {"0": {"docs": {}, "df": 0, "%": {"9": {"3": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}}}}, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1.7320508075688772}}, "df": 10, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 17}}}}}, "x": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 2.8284271247461903}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 2.449489742783178}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.at": {"tf": 2.6457513110645907}, "b3d.types.Array.choose": {"tf": 2.449489742783178}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.at": {"tf": 2.6457513110645907}, "b3d.utils.Array.choose": {"tf": 2.449489742783178}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.at": {"tf": 2.6457513110645907}}, "df": 9, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2.6457513110645907}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 4}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.mix": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.map": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.23606797749979}}, "df": 17, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 37}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 7, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.8284271247461903}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 2.449489742783178}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 9, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 4}, "d": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}}, "df": 6}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 15}, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1, "t": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 33}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1.7320508075688772}, "b3d.types.Array.mT": {"tf": 1.7320508075688772}, "b3d.utils.Array.mT": {"tf": 1.7320508075688772}}, "df": 3}, "l": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "c": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"b3d.Pose.inv": {"tf": 2.449489742783178}, "b3d.Pose.inverse": {"tf": 2.449489742783178}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.inv": {"tf": 2.449489742783178}, "b3d.pose.core.Pose.inverse": {"tf": 2.449489742783178}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 27, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 9}, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Mesh.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 2.6457513110645907}, "b3d.types.Array.repeat": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 2.6457513110645907}}, "df": 6, "s": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 2.23606797749979}, "b3d.types.Array.repeat": {"tf": 2.23606797749979}, "b3d.utils.Array.repeat": {"tf": 2.23606797749979}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}}, "df": 6}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 6}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 2}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.map": {"tf": 2}, "b3d.types.GenerativeFunction.contramap": {"tf": 2}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 135, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.canvas_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 192}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 65}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 8, "*": {"docs": {}, "df": 0, "*": {"2": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 2.23606797749979}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 2.23606797749979}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 2}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 2.23606797749979}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 2}, "b3d.utils.Array.at": {"tf": 1}}, "df": 64, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 15}}}, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}}, "df": 7}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 2.23606797749979}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 2.23606797749979}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 2.23606797749979}, "b3d.utils.Array.reshape": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.utils.voxelize": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.resize_image_nearest_vmap": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_linear_vmap": {"tf": 1.7320508075688772}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}}, "df": 3}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 21}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}}, "df": 29, "d": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 37}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 4}}}}}}, "f": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 27, "s": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}}}}, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"b3d.pose.core.Array.real": {"tf": 2}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 2}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.real": {"tf": 2}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 7}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 4}}}}}}}}}, "y": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.6457513110645907}, "b3d.Renderer.rasterize": {"tf": 2.449489742783178}, "b3d.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.6457513110645907}, "b3d.renderer.Renderer.rasterize": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.7320508075688772}}, "df": 9}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 20, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}}, "df": 8}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 20, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}}, "df": 15}, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 33}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 30}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 3.3166247903554}, "b3d.pose.core.Array.ravel": {"tf": 3.3166247903554}, "b3d.types.Array.flatten": {"tf": 3.3166247903554}, "b3d.types.Array.ravel": {"tf": 3.3166247903554}, "b3d.utils.Array.flatten": {"tf": 3.3166247903554}, "b3d.utils.Array.ravel": {"tf": 3.3166247903554}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}}, "df": 14}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}}, "df": 3}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}}, "df": 3}}, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}}, "df": 8}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}}}}, "^": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "+": {"1": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}, "docs": {}, "df": 0}}}}, "g": {"docs": {}, "df": 0, "b": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 2}, "b3d.io.VideoInput": {"tf": 3.3166247903554}, "b3d.utils.get_rgb_pil_image": {"tf": 1.7320508075688772}, "b3d.utils.viz_rgb": {"tf": 1.7320508075688772}}, "df": 13, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 2.6457513110645907}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}}, "df": 13, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1}, "q": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}, "n": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 5}}}, "p": {"docs": {"b3d.Pose.from_vec": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2}, "b3d.pose.core.Pose.from_vec": {"tf": 2}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 2}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1.4142135623730951}}, "df": 12, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 25, "s": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 103}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 6}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}}, "df": 5, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 2}, "b3d.types.Array.argpartition": {"tf": 2}, "b3d.utils.Array.argpartition": {"tf": 2}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}}, "df": 3}}, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 33}}}, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.distinct_colors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 3.605551275463989}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 3.3166247903554}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}}, "df": 3, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 2.449489742783178}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.prod": {"tf": 2.449489742783178}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 2.449489742783178}}, "df": 16, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 9, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "b": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 15}, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 3}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}}, "df": 6, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.7320508075688772}}, "df": 2, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 2}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 2}}, "df": 19}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"2": {"0": {"6": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"2": {"3": {"docs": {}, "df": 0, "a": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "v": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 2}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 22}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 15}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1.7320508075688772}}, "df": 27, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 3}, "g": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.apply": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 3.872983346207417}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.utils.aabb": {"tf": 1.4142135623730951}}, "df": 47, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 2}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.23606797749979}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 21}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 2}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 2}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 2}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}}, "df": 35, "s": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 8}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 18}}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "w": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 19}, "y": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 2}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 2}, "b3d.types.Array.at": {"tf": 2}, "b3d.utils.Array.at": {"tf": 2}}, "df": 3, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}}, "df": 15, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 3}, "b3d.Renderer.rasterize": {"tf": 2.449489742783178}, "b3d.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.Renderer.render_attribute": {"tf": 2.23606797749979}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 3}, "b3d.renderer.Renderer.rasterize": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.23606797749979}}, "df": 25, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"b3d.utils.get_rgb_pil_image": {"tf": 1.7320508075688772}, "b3d.utils.viz_rgb": {"tf": 1.7320508075688772}, "b3d.utils.overlay_image": {"tf": 1.7320508075688772}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}, "b3d.utils.vstack_images": {"tf": 1.4142135623730951}, "b3d.utils.hstack_images": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1.4142135623730951}}, "df": 7}}, "y": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 20}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1}}, "df": 24}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 16, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.searchsorted": {"tf": 2}}, "df": 4}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 13}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 19}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 2}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 2}}, "df": 3}}, "s": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}}}, "[": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1.4142135623730951}}, "df": 19}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose": {"tf": 1}, "b3d.Pose.compose": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 2}, "b3d.pose.core.Array.argmin": {"tf": 2}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 2.23606797749979}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 2}, "b3d.types.Array.argmin": {"tf": 2}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 2.23606797749979}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 2.23606797749979}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 2}, "b3d.utils.Array.argmin": {"tf": 2}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 2.23606797749979}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 2.23606797749979}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 158, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 11}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 2}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2.23606797749979}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.ptp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.6457513110645907}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 2}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2.23606797749979}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2.6457513110645907}, "b3d.types.Array.ptp": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 2.6457513110645907}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2.23606797749979}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2.6457513110645907}, "b3d.utils.Array.ptp": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 2.6457513110645907}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.6457513110645907}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 94}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 9}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 2}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 126}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.separate_shared_vertices": {"tf": 1.4142135623730951}}, "df": 68, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}}, "df": 22}}}}, "n": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 39}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 16}}}}, "e": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 20, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}}, "df": 9}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}}, "df": 6}}, "k": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 2, "n": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}}, "df": 15}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2}}, "df": 1}}}, "c": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}, "p": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.choose": {"tf": 2}, "b3d.types.Array.choose": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 2}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}, "d": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}}, "df": 3}}}}, "x": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}}, "df": 38, "n": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 2.6457513110645907}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 2}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 3.3166247903554}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3.7416573867739413}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 2}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 3.3166247903554}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 3.7416573867739413}, "b3d.types.GenerativeFunction": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 2}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 3.3166247903554}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3.7416573867739413}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 173, "t": {"1": {"6": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 3}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 3}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 3}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}}, "df": 18}, "docs": {}, "df": 0}, "8": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.view": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.view": {"tf": 2.23606797749979}}, "df": 6}, "docs": {"b3d.Renderer.__init__": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 2}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 102, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 8, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 10, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 2.6457513110645907}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 2.6457513110645907}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 2.6457513110645907}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 2.6457513110645907}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1}}, "df": 45, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}}, "df": 23}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 42}, "r": {"docs": {"b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 2}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 2.6457513110645907}}, "df": 16}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 49}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 2}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 45, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}}, "df": 3}, "s": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.searchsorted": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.at": {"tf": 3.7416573867739413}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 3.4641016151377544}, "b3d.types.Array.searchsorted": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 3.4641016151377544}, "b3d.types.Array.at": {"tf": 3.7416573867739413}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 3.4641016151377544}, "b3d.utils.Array.searchsorted": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 3.4641016151377544}, "b3d.utils.Array.at": {"tf": 3.7416573867739413}}, "df": 43, "[": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "j": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 5}, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 2.8284271247461903}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.8284271247461903}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 12}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 117, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 13}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array": {"tf": 1.4142135623730951}}, "df": 24, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 19}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}}, "df": 20, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 23}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}}, "df": 2}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 3, "e": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.7320508075688772}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 2}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_linear_vmap": {"tf": 1.7320508075688772}, "b3d.utils.get_rgb_pil_image": {"tf": 2.6457513110645907}, "b3d.utils.viz_rgb": {"tf": 2.6457513110645907}, "b3d.utils.overlay_image": {"tf": 2.449489742783178}, "b3d.utils.vstack_images": {"tf": 1.4142135623730951}, "b3d.utils.hstack_images": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 2.449489742783178}}, "df": 21, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 2}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.7320508075688772}, "b3d.utils.vstack_images": {"tf": 2}, "b3d.utils.hstack_images": {"tf": 2}, "b3d.utils.multi_panel": {"tf": 2}}, "df": 11}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1.4142135623730951}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "g": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 31, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 126, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 21}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 2}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.assess": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 22, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}}, "df": 5}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}}, "df": 4, "[": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.identity": {"tf": 1}, "b3d.Pose.eye": {"tf": 1}, "b3d.Pose.id": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Pose.identity": {"tf": 1}, "b3d.pose.core.Pose.eye": {"tf": 1}, "b3d.pose.core.Pose.id": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}}, "df": 20}}}}}}, "x": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.xyz_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.unproject_depth": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 2.8284271247461903}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.any": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.conj": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.cumsum": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 3}, "b3d.pose.core.Array.mean": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.min": {"tf": 3}, "b3d.pose.core.Array.nonzero": {"tf": 2.23606797749979}, "b3d.pose.core.Array.prod": {"tf": 3.3166247903554}, "b3d.pose.core.Array.ptp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 3.3166247903554}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.sum": {"tf": 4}, "b3d.pose.core.Array.swapaxes": {"tf": 2.449489742783178}, "b3d.pose.core.Array.take": {"tf": 2.23606797749979}, "b3d.pose.core.Array.trace": {"tf": 3}, "b3d.pose.core.Array.var": {"tf": 3.605551275463989}, "b3d.pose.core.Array.view": {"tf": 2.23606797749979}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.imag": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.core.choose_good_quat": {"tf": 2}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 2.8284271247461903}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.6457513110645907}, "b3d.types.Array.any": {"tf": 2.8284271247461903}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 2.449489742783178}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 3.4641016151377544}, "b3d.types.Array.conj": {"tf": 1.7320508075688772}, "b3d.types.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.types.Array.cumsum": {"tf": 3.1622776601683795}, "b3d.types.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 3}, "b3d.types.Array.mean": {"tf": 3.1622776601683795}, "b3d.types.Array.min": {"tf": 3}, "b3d.types.Array.nonzero": {"tf": 2.23606797749979}, "b3d.types.Array.prod": {"tf": 3.3166247903554}, "b3d.types.Array.ptp": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 3.3166247903554}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 3.1622776601683795}, "b3d.types.Array.sum": {"tf": 4}, "b3d.types.Array.swapaxes": {"tf": 2.449489742783178}, "b3d.types.Array.take": {"tf": 2.23606797749979}, "b3d.types.Array.trace": {"tf": 3}, "b3d.types.Array.var": {"tf": 3.605551275463989}, "b3d.types.Array.view": {"tf": 2.23606797749979}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1.7320508075688772}, "b3d.types.Array.imag": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.assess": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 2.8284271247461903}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.6457513110645907}, "b3d.utils.Array.any": {"tf": 2.8284271247461903}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 2.449489742783178}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 3.4641016151377544}, "b3d.utils.Array.conj": {"tf": 1.7320508075688772}, "b3d.utils.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.utils.Array.cumsum": {"tf": 3.1622776601683795}, "b3d.utils.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 3}, "b3d.utils.Array.mean": {"tf": 3.1622776601683795}, "b3d.utils.Array.min": {"tf": 3}, "b3d.utils.Array.nonzero": {"tf": 2.23606797749979}, "b3d.utils.Array.prod": {"tf": 3.3166247903554}, "b3d.utils.Array.ptp": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 3.3166247903554}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 3.1622776601683795}, "b3d.utils.Array.sum": {"tf": 4}, "b3d.utils.Array.swapaxes": {"tf": 2.449489742783178}, "b3d.utils.Array.take": {"tf": 2.23606797749979}, "b3d.utils.Array.trace": {"tf": 3}, "b3d.utils.Array.var": {"tf": 3.605551275463989}, "b3d.utils.Array.view": {"tf": 2.23606797749979}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1.7320508075688772}, "b3d.utils.Array.imag": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 208, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose.canonical": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 2}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 2}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 2.449489742783178}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 2.449489742783178}, "b3d.pose.core.Array.mean": {"tf": 2.23606797749979}, "b3d.pose.core.Array.min": {"tf": 2.449489742783178}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.ptp": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.pose.core.Array.var": {"tf": 2.23606797749979}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.real": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.imag": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 2}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 2}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 2.449489742783178}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 2.449489742783178}, "b3d.types.Array.mean": {"tf": 2.23606797749979}, "b3d.types.Array.min": {"tf": 2.449489742783178}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 3.1622776601683795}, "b3d.types.Array.ptp": {"tf": 2}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 3.4641016151377544}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.var": {"tf": 2.23606797749979}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 1.4142135623730951}, "b3d.types.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 2}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 2}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 2.449489742783178}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 2.449489742783178}, "b3d.utils.Array.mean": {"tf": 2.23606797749979}, "b3d.utils.Array.min": {"tf": 2.449489742783178}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 3.1622776601683795}, "b3d.utils.Array.ptp": {"tf": 2}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 3.4641016151377544}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}, "b3d.utils.Array.var": {"tf": 2.23606797749979}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1.4142135623730951}, "b3d.utils.Array.imag": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 145}, "t": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 98, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 29, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}}, "df": 5}}}}, "e": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 13}}}}}}, "j": {"docs": {"b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 6}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "q": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "+": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {"b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}}, "df": 3}}, "h": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 18}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 9}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}}, "df": 47}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1, "r": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 47}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.449489742783178}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 24}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 53}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.hstack_images": {"tf": 1}}, "df": 1}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}, "r": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 4}}}}}}, "f": {"1": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}}, "df": 3}, "2": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}}, "df": 3}, "docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.copy": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}}, "df": 29, "x": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"3": {"2": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 2.8284271247461903}, "b3d.types.Array.at": {"tf": 2.8284271247461903}, "b3d.utils.Array.at": {"tf": 2.8284271247461903}}, "df": 4}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 9}, "docs": {}, "df": 0}, "docs": {"b3d.Renderer.__init__": {"tf": 2.449489742783178}, "b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.Renderer.render_attribute": {"tf": 2.23606797749979}, "b3d.RendererOriginal.__init__": {"tf": 2.449489742783178}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData": {"tf": 3}, "b3d.io.VideoInput": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.23606797749979}, "b3d.renderer.RendererOriginal.__init__": {"tf": 2.449489742783178}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}}, "df": 36, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}}, "df": 3}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 48}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}}}, "g": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "r": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2.449489742783178}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array": {"tf": 2.23606797749979}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2.449489742783178}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 3.1622776601683795}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.T": {"tf": 2.23606797749979}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 3}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 2.449489742783178}, "b3d.utils.Array": {"tf": 2.23606797749979}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2.449489742783178}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 3.1622776601683795}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.T": {"tf": 2.23606797749979}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3}}, "df": 184, "m": {"docs": {"b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}}, "df": 15}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}}, "df": 9}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 14}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.multi_panel": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.multi_panel": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "y": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 7}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 16}}, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 26}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}, "q": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}}, "df": 3}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction": {"tf": 2.23606797749979}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.io.VideoInput.load": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 2.449489742783178}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 3.3166247903554}, "b3d.types.GenerativeFunction.assess": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.importance": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}}, "df": 99}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.7320508075688772}}, "df": 4, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 21}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}}, "df": 43}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.at": {"tf": 3}, "b3d.types.Array.nonzero": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.at": {"tf": 3}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.at": {"tf": 3}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.io.MeshData.save": {"tf": 1}, "b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 8, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 7}, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 9}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}}, "df": 6}}}, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.propose": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.types.GenerativeFunction.map": {"tf": 2}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.23606797749979}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 52, "s": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}}, "df": 11}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 9}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}}, "df": 23, "y": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 2.6457513110645907}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 2.6457513110645907}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 9}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "d": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}, "w": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}}, "df": 5, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 2}}, "^": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 9, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 24}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 47}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}}, "df": 7}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 18}}, "t": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}, "b": {"1": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.utils.multi_panel": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 43}}, "x": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 117}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 3, "r": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 9}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}, "p": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}}, "df": 6}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}, "g": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.utils.normalize_log_scores": {"tf": 2.23606797749979}}, "df": 8, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 2.23606797749979}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"b3d.io.MeshData.load": {"tf": 1}, "b3d.io.FeatureTrackData.load": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 96, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.7320508075688772}, "b3d.utils.vstack_images": {"tf": 1.4142135623730951}, "b3d.utils.hstack_images": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 2}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1.7320508075688772}}, "df": 16}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 2.6457513110645907}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1.7320508075688772}}, "df": 2}}}, "k": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}}, "df": 15}, "l": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}, "x": {"1": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}, "2": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}, "docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.Pose.canonical": {"tf": 2}, "b3d.Pose.inv": {"tf": 1.7320508075688772}, "b3d.Pose.inverse": {"tf": 1.7320508075688772}, "b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.449489742783178}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.23606797749979}, "b3d.pose.core.Array": {"tf": 2}, "b3d.pose.core.Array.conj": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 3.605551275463989}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 3.3166247903554}, "b3d.pose.core.Array.mT": {"tf": 2.23606797749979}, "b3d.pose.core.Array.at": {"tf": 5.830951894845301}, "b3d.pose.core.choose_good_quat": {"tf": 2}, "b3d.pose.core.Pose.canonical": {"tf": 2}, "b3d.pose.core.Pose.inv": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.inverse": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 2}, "b3d.types.Array.conj": {"tf": 1.7320508075688772}, "b3d.types.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 3.605551275463989}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.T": {"tf": 3.3166247903554}, "b3d.types.Array.mT": {"tf": 2.23606797749979}, "b3d.types.Array.at": {"tf": 5.830951894845301}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.contramap": {"tf": 2}, "b3d.utils.Array": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 1.7320508075688772}, "b3d.utils.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 3.605551275463989}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.T": {"tf": 3.3166247903554}, "b3d.utils.Array.mT": {"tf": 2.23606797749979}, "b3d.utils.Array.at": {"tf": 5.830951894845301}, "b3d.utils.make_grid_points": {"tf": 1.4142135623730951}}, "df": 80, "y": {"docs": {}, "df": 0, "z": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.449489742783178}}, "df": 10, "w": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.449489742783178}}, "df": 5}, "/": {"docs": {}, "df": 0, "z": {"docs": {"b3d.camera.planar_coordinates": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.at": {"tf": 3.3166247903554}, "b3d.types.Array.at": {"tf": 3.3166247903554}, "b3d.utils.Array.at": {"tf": 3.3166247903554}}, "df": 3}}}}, "*": {"docs": {}, "df": 0, "*": {"2": {"docs": {"b3d.types.GenerativeFunction.map": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "y": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.23606797749979}, "b3d.pose.core.Array.conj": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 4}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.conj": {"tf": 1.4142135623730951}, "b3d.types.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 4}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 1.4142135623730951}, "b3d.utils.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 4}, "b3d.utils.make_grid_points": {"tf": 1.4142135623730951}}, "df": 32, "/": {"docs": {}, "df": 0, "z": {"docs": {"b3d.camera.planar_coordinates": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 20, "r": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}}, "df": 6}}}}}, "^": {"2": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}}, "df": 1}}, "c": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.23606797749979}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 2.23606797749979}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 2}, "b3d.types.GenerativeFunction.importance": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.6457513110645907}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 2.23606797749979}}, "df": 22, "x": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 8}, "y": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 2}}, "df": 13, "s": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 2}, "b3d.io.VideoInput": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 2}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 8}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 7, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}}, "df": 1}, "r": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 24}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.449489742783178}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": null}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": null}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": null}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": null}}, "df": 4}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}}, "df": 5, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.conj": {"tf": 2}, "b3d.pose.core.Array.conjugate": {"tf": 2}, "b3d.types.Array.conj": {"tf": 2}, "b3d.types.Array.conjugate": {"tf": 2}, "b3d.utils.Array.conj": {"tf": 2}, "b3d.utils.Array.conjugate": {"tf": 2}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 2}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_xyz": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 28}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 19}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 36}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 4.58257569495584}, "b3d.types.GenerativeFunction.assess": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.propose": {"tf": 1.7320508075688772}}, "df": 8}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 23}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}}, "df": 6}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}}, "df": 4, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.compose": {"tf": 1}, "b3d.pose.core.Pose.compose": {"tf": 1}}, "df": 2, "d": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"1": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 19, "d": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 15}, "s": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}, "x": {"docs": {"b3d.pose.core.Array.conj": {"tf": 2}, "b3d.pose.core.Array.conjugate": {"tf": 2}, "b3d.pose.core.Array.real": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.imag": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 2}, "b3d.types.Array.conjugate": {"tf": 2}, "b3d.types.Array.real": {"tf": 1.7320508075688772}, "b3d.types.Array.imag": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 2}, "b3d.utils.Array.conjugate": {"tf": 2}, "b3d.utils.Array.real": {"tf": 1.7320508075688772}, "b3d.utils.Array.imag": {"tf": 1.7320508075688772}}, "df": 12}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1}}, "df": 12}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3, "r": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}}, "df": 2, "d": {"docs": {"b3d.utils.multi_panel": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2}}}}}}}}, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 2}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.copy": {"tf": 2}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 2}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 41, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}}}}, "v": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.7320508075688772}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 54, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 30}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.compute_relative_poses": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.aabb": {"tf": 1.4142135623730951}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1.7320508075688772}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 2}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 9, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.449489742783178}, "b3d.types.Array.choose": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1.7320508075688772}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1.7320508075688772}, "b3d.utils.grid1": {"tf": 1.7320508075688772}, "b3d.utils.grid2": {"tf": 2.449489742783178}, "b3d.utils.grid3": {"tf": 3}, "b3d.utils.grid4": {"tf": 3.4641016151377544}, "b3d.utils.Array.choose": {"tf": 2.449489742783178}}, "df": 11}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}}, "df": 9, "d": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 4}, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}}, "df": 6}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 50, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.xyz_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.unproject_depth": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_camera": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_xyz": {"tf": 1.7320508075688772}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.7320508075688772}, "b3d.camera.canvas_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.8284271247461903}, "b3d.io.FeatureTrackData": {"tf": 2.6457513110645907}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 4.242640687119285}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}}, "df": 19}}}, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 21}}, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 37, "s": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 16}}, "t": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}, "p": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}, "s": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 2.23606797749979}}, "df": 1}}}, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 23, "s": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 24}, "d": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}}, "df": 5}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"2": {"0": {"0": {"0": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 9}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}}}, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1.7320508075688772}}, "df": 1}}}, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2.23606797749979}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 2}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.colors.ciede2000_err": {"tf": 2}, "b3d.io.MeshData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData": {"tf": 2.449489742783178}, "b3d.pose.core.Array.choose": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 3.4641016151377544}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 3.4641016151377544}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.voxelize": {"tf": 1}}, "df": 61, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.RendererOriginal.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics": {"tf": 1}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.resize_image_nearest_vmap": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "w": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.23606797749979}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 84}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 36}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 3}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 3.1622776601683795}, "b3d.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 3}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 3.1622776601683795}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 13, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 64, "s": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 2.449489742783178}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 2.23606797749979}, "b3d.pose.core.Array.dot": {"tf": 2.23606797749979}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.mT": {"tf": 2}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array": {"tf": 2.449489742783178}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 2.23606797749979}, "b3d.types.Array.dot": {"tf": 2.23606797749979}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 2.6457513110645907}, "b3d.types.Array.mT": {"tf": 2}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array": {"tf": 2.449489742783178}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 2.23606797749979}, "b3d.utils.Array.dot": {"tf": 2.23606797749979}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 2.6457513110645907}, "b3d.utils.Array.mT": {"tf": 2}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 145}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {"b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 11, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}}, "df": 93, "e": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2.23606797749979}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 38, "s": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 8}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"b3d.utils.normalize_log_scores": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 34, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 66}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 4.69041575982343}, "b3d.types.Array.nonzero": {"tf": 4.69041575982343}, "b3d.utils.Array.nonzero": {"tf": 4.69041575982343}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 90}}}}}, "i": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}}, "df": 3, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.take": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.take": {"tf": 2}}, "df": 6}}}}, "m": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 18}}}, "+": {"1": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}}, "df": 3}, "2": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}}, "df": 22, "z": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.types.Array.take": {"tf": 2}, "b3d.utils.Array.take": {"tf": 2}}, "df": 3}, "k": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.types.Array.take": {"tf": 2}, "b3d.utils.Array.take": {"tf": 2}}, "df": 3}, "j": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.types.Array.take": {"tf": 2}, "b3d.utils.Array.take": {"tf": 2}}, "df": 3}}, "o": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1, "f": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 2.449489742783178}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.inv": {"tf": 1.4142135623730951}, "b3d.Pose.inverse": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.7320508075688772}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.7320508075688772}, "b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.Mesh.__init__": {"tf": 2.8284271247461903}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.__init__": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 2.8284271247461903}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.xyz_from_depth": {"tf": 1.7320508075688772}, "b3d.camera.unproject_depth": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.camera.canvas_from_intrinsics": {"tf": 1.7320508075688772}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 2.449489742783178}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 2}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2.449489742783178}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 3}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.23606797749979}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.23606797749979}, "b3d.colors.ciede2000_err": {"tf": 2}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.VideoInput": {"tf": 3.4641016151377544}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2.449489742783178}, "b3d.pose.core.Array.any": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argmax": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argmin": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argpartition": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.argsort": {"tf": 2.23606797749979}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 3.3166247903554}, "b3d.pose.core.Array.conj": {"tf": 2}, "b3d.pose.core.Array.conjugate": {"tf": 2}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.cumsum": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.diagonal": {"tf": 4.358898943540674}, "b3d.pose.core.Array.dot": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.mean": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.min": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.nonzero": {"tf": 4}, "b3d.pose.core.Array.prod": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.ptp": {"tf": 3}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.round": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 3}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.squeeze": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.std": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.sum": {"tf": 3.605551275463989}, "b3d.pose.core.Array.swapaxes": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.take": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.trace": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 3.605551275463989}, "b3d.pose.core.Array.view": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.T": {"tf": 3}, "b3d.pose.core.Array.mT": {"tf": 2.449489742783178}, "b3d.pose.core.Array.real": {"tf": 2}, "b3d.pose.core.Array.imag": {"tf": 2}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3.605551275463989}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.inverse": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.7320508075688772}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.449489742783178}, "b3d.types.Array.any": {"tf": 2.449489742783178}, "b3d.types.Array.argmax": {"tf": 2.23606797749979}, "b3d.types.Array.argmin": {"tf": 2.23606797749979}, "b3d.types.Array.argpartition": {"tf": 3.4641016151377544}, "b3d.types.Array.argsort": {"tf": 2.23606797749979}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 3.3166247903554}, "b3d.types.Array.conj": {"tf": 2}, "b3d.types.Array.conjugate": {"tf": 2}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 2.6457513110645907}, "b3d.types.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.types.Array.cumsum": {"tf": 2.6457513110645907}, "b3d.types.Array.diagonal": {"tf": 4.358898943540674}, "b3d.types.Array.dot": {"tf": 3.1622776601683795}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 3.1622776601683795}, "b3d.types.Array.mean": {"tf": 2.6457513110645907}, "b3d.types.Array.min": {"tf": 3.1622776601683795}, "b3d.types.Array.nonzero": {"tf": 4}, "b3d.types.Array.prod": {"tf": 3.4641016151377544}, "b3d.types.Array.ptp": {"tf": 3}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.types.Array.repeat": {"tf": 2.6457513110645907}, "b3d.types.Array.round": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 3}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.squeeze": {"tf": 2.6457513110645907}, "b3d.types.Array.std": {"tf": 3.7416573867739413}, "b3d.types.Array.sum": {"tf": 3.605551275463989}, "b3d.types.Array.swapaxes": {"tf": 2.6457513110645907}, "b3d.types.Array.take": {"tf": 3.1622776601683795}, "b3d.types.Array.trace": {"tf": 3.7416573867739413}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 3.605551275463989}, "b3d.types.Array.view": {"tf": 2.6457513110645907}, "b3d.types.Array.T": {"tf": 3}, "b3d.types.Array.mT": {"tf": 2.449489742783178}, "b3d.types.Array.real": {"tf": 2}, "b3d.types.Array.imag": {"tf": 2}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction": {"tf": 3}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 3.7416573867739413}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 3.7416573867739413}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.contramap": {"tf": 2}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.aabb": {"tf": 1.7320508075688772}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 2}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.449489742783178}, "b3d.utils.Array.any": {"tf": 2.449489742783178}, "b3d.utils.Array.argmax": {"tf": 2.23606797749979}, "b3d.utils.Array.argmin": {"tf": 2.23606797749979}, "b3d.utils.Array.argpartition": {"tf": 3.4641016151377544}, "b3d.utils.Array.argsort": {"tf": 2.23606797749979}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 3.3166247903554}, "b3d.utils.Array.conj": {"tf": 2}, "b3d.utils.Array.conjugate": {"tf": 2}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 2.6457513110645907}, "b3d.utils.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.utils.Array.cumsum": {"tf": 2.6457513110645907}, "b3d.utils.Array.diagonal": {"tf": 4.358898943540674}, "b3d.utils.Array.dot": {"tf": 3.1622776601683795}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 3.1622776601683795}, "b3d.utils.Array.mean": {"tf": 2.6457513110645907}, "b3d.utils.Array.min": {"tf": 3.1622776601683795}, "b3d.utils.Array.nonzero": {"tf": 4}, "b3d.utils.Array.prod": {"tf": 3.4641016151377544}, "b3d.utils.Array.ptp": {"tf": 3}, "b3d.utils.Array.ravel": {"tf": 2}, "b3d.utils.Array.repeat": {"tf": 2.6457513110645907}, "b3d.utils.Array.round": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 3}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.squeeze": {"tf": 2.6457513110645907}, "b3d.utils.Array.std": {"tf": 3.7416573867739413}, "b3d.utils.Array.sum": {"tf": 3.605551275463989}, "b3d.utils.Array.swapaxes": {"tf": 2.6457513110645907}, "b3d.utils.Array.take": {"tf": 3.1622776601683795}, "b3d.utils.Array.trace": {"tf": 3.7416573867739413}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 3.605551275463989}, "b3d.utils.Array.view": {"tf": 2.6457513110645907}, "b3d.utils.Array.T": {"tf": 3}, "b3d.utils.Array.mT": {"tf": 2.449489742783178}, "b3d.utils.Array.real": {"tf": 2}, "b3d.utils.Array.imag": {"tf": 2}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3.605551275463989}, "b3d.utils.distinct_colors": {"tf": 1.7320508075688772}, "b3d.utils.voxelize": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 301, "f": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 80, "e": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 74, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 7}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"b3d.camera.rgb_for_point_from_img": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 24}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 8}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 3}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1.7320508075688772}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}}, "df": 31, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}}, "df": 6}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}}, "df": 2, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 2.23606797749979}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3.1622776601683795}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 2.23606797749979}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 2.23606797749979}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3.1622776601683795}}, "df": 42, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 46, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 9}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.compose": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.compose": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 12, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 40}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 64, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.all": {"tf": 2.23606797749979}, "b3d.pose.core.Array.any": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 2.23606797749979}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 2.23606797749979}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 2}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 2}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.23606797749979}, "b3d.types.Array.any": {"tf": 2.8284271247461903}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 2.23606797749979}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 2.23606797749979}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 2}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 2}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.23606797749979}, "b3d.utils.Array.any": {"tf": 2.8284271247461903}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 2.23606797749979}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 2.23606797749979}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 2}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 2}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 114, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"1": {"9": {"0": {"4": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1.4142135623730951}, "b3d.utils.grid4": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 105}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.copy": {"tf": 2}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.ravel": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 2}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 3.1622776601683795}, "b3d.types.Array.ravel": {"tf": 3.1622776601683795}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 2}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 3.1622776601683795}, "b3d.utils.Array.ravel": {"tf": 3.1622776601683795}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 36}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 14, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 36, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 2.23606797749979}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2.23606797749979}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 2.23606797749979}, "b3d.types.Array.sum": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 2.23606797749979}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2.23606797749979}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2.23606797749979}, "b3d.utils.Array.sum": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 2.23606797749979}, "b3d.utils.Array.at": {"tf": 1}}, "df": 91, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 9}}}}, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "d": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 2}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2.8284271247461903}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 2}}, "df": 16, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.bayes3d.model.ModelArgs": {"tf": 1.4142135623730951}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 26}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 7}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 7}}}, "s": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 12}}}}}}}}, "f": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 4, "d": {"docs": {"b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10}, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 2.23606797749979}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 2.23606797749979}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 2.449489742783178}, "b3d.pose.core.Array.sum": {"tf": 2.449489742783178}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 2.449489742783178}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 2.23606797749979}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 2.23606797749979}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2.449489742783178}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 2.449489742783178}, "b3d.types.Array.sum": {"tf": 2.449489742783178}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 2.449489742783178}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 2.23606797749979}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 2.23606797749979}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2.449489742783178}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 2.449489742783178}, "b3d.utils.Array.sum": {"tf": 2.449489742783178}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 2.449489742783178}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 90, "s": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 28}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 4, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 34}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 12, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}, "s": {"docs": {"b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.round": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 3.1622776601683795}, "b3d.types.Array.std": {"tf": 3.1622776601683795}, "b3d.utils.Array.std": {"tf": 3.1622776601683795}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 9}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 9}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.trace": {"tf": 2}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 3.4641016151377544}, "b3d.types.Array.trace": {"tf": 2}, "b3d.utils.Array.diagonal": {"tf": 3.4641016151377544}, "b3d.utils.Array.trace": {"tf": 2}}, "df": 14, "s": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 2.449489742783178}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 2.449489742783178}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.utils.Array.diagonal": {"tf": 2.449489742783178}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}}, "df": 6}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.7320508075688772}}, "df": 5, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 2.23606797749979}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 2.23606797749979}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 2.23606797749979}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 2.23606797749979}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 34, "#": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}}}}}, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.utils.distinct_colors": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.discretize": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2.23606797749979}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 2.23606797749979}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 2.23606797749979}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 56}, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}}, "df": 24, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 6}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}, "s": {"docs": {"b3d.utils.aabb": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1.4142135623730951}}, "df": 1, "#": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"2": {"0": {"0": {"0": {"docs": {"b3d.colors.ciede2000_err": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 10}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 46, "n": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 20}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 93}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.utils.grid2": {"tf": 1}, "b3d.utils.grid3": {"tf": 1.4142135623730951}, "b3d.utils.grid4": {"tf": 1.7320508075688772}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.transpose": {"tf": 1}}, "df": 15}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4, "e": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData.downscale": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.downsize_images": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"b3d.pose.core.Array.dot": {"tf": 3.3166247903554}, "b3d.types.Array.dot": {"tf": 3.3166247903554}, "b3d.utils.Array.dot": {"tf": 3.3166247903554}}, "df": 3}}, "^": {"3": {"docs": {"b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 3.1622776601683795}, "b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1.4142135623730951}}, "df": 58, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}}, "df": 15}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 2}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.cumsum": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.prod": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.8284271247461903}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.types.Array.cumsum": {"tf": 2.8284271247461903}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.types.Array.prod": {"tf": 2.8284271247461903}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2.6457513110645907}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 3.1622776601683795}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.23606797749979}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 2.8284271247461903}, "b3d.utils.Array.cumsum": {"tf": 2.8284271247461903}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.utils.Array.prod": {"tf": 2.8284271247461903}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2.6457513110645907}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 3.1622776601683795}, "b3d.utils.Array.T": {"tf": 2}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.8284271247461903}}, "df": 66}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {"b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 3, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"3": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 5}}, "docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.449489742783178}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 2.8284271247461903}, "b3d.types.Array.dot": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.utils.Array.dot": {"tf": 2.8284271247461903}}, "df": 9, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Renderer.__init__": {"tf": 1}, "b3d.RendererOriginal.__init__": {"tf": 1}, "b3d.renderer.Renderer.__init__": {"tf": 1}, "b3d.renderer.RendererOriginal.__init__": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 30}}, "a": {"docs": {"b3d.pose.core.Array.choose": {"tf": 2.6457513110645907}, "b3d.types.Array.choose": {"tf": 2.6457513110645907}, "b3d.utils.Array.choose": {"tf": 2.6457513110645907}}, "df": 3, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 9}}}}}}}}, "e": {"docs": {"b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}}, "df": 4, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 96, "s": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 9}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}}, "df": 4, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 10}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 2}}}}, "y": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 111, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 9}}}}, "e": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2.23606797749979}, "b3d.pose.core.Array.any": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.diagonal": {"tf": 2.449489742783178}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.ptp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.23606797749979}, "b3d.types.Array.any": {"tf": 2.23606797749979}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 2.449489742783178}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.23606797749979}, "b3d.utils.Array.any": {"tf": 2.23606797749979}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.diagonal": {"tf": 2.449489742783178}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 2.8284271247461903}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.ptp": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.searchsorted": {"tf": 2.449489742783178}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 2.8284271247461903}}, "df": 107, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 13}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 4}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 98}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 10}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 15}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"b3d.camera.RenderConfig": {"tf": 1}, "b3d.camera.RenderConfig.__init__": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.utils.aabb": {"tf": 1.7320508075688772}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 3.1622776601683795}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.at": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.at": {"tf": 3.1622776601683795}}, "df": 7}}}}, "x": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1.4142135623730951}, "b3d.utils.aabb": {"tf": 1.7320508075688772}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 2}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 2}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 59, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 17, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 12}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 13}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 2}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1.4142135623730951}, "b3d.utils.hstack_images": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 42, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 2.23606797749979}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.utils.overlay_image": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}}, "df": 3}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose.canonical": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 48, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 5, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.449489742783178}, "b3d.Renderer.render_attribute_many": {"tf": 2}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.bayes3d.model.ModelArgs": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1.7320508075688772}, "b3d.utils.grid1": {"tf": 1.7320508075688772}, "b3d.utils.grid2": {"tf": 2.449489742783178}, "b3d.utils.grid3": {"tf": 3}, "b3d.utils.grid4": {"tf": 3.4641016151377544}}, "df": 15, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"b3d.utils.normalize_log_scores": {"tf": 1.7320508075688772}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1.4142135623730951}, "b3d.types.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1.4142135623730951}, "b3d.utils.Array.conjugate": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 40}}}, "n": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.GenerativeFunction.scan": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 2}}, "df": 8, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 4}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.Renderer.render_attribute_many": {"tf": 2.6457513110645907}, "b3d.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 2}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.VideoInput": {"tf": 3}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 2}, "b3d.pose.core.Array.argmin": {"tf": 2}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 2}, "b3d.pose.core.Array.T": {"tf": 2}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.6457513110645907}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 2}, "b3d.types.Array.argmin": {"tf": 2}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.6457513110645907}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.view": {"tf": 2}, "b3d.types.Array.T": {"tf": 2}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 2}, "b3d.utils.Array.argmin": {"tf": 2}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.6457513110645907}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.view": {"tf": 2}, "b3d.utils.Array.T": {"tf": 2}}, "df": 86, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}, "[": {"0": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "+": {"1": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}}}}}}, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 30}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 12}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 18}, "d": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 2.23606797749979}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 2.23606797749979}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 2.23606797749979}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 67}, "r": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.io.MeshData": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}, "d": {"docs": {"b3d.utils.make_grid_points": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2}}, "df": 3}}}}, "n": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.8284271247461903}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}}, "df": 6, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 2, "`": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 3.1622776601683795}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.std": {"tf": 3.1622776601683795}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.std": {"tf": 3.1622776601683795}}, "df": 8}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 2}, "b3d.pose.core.Array.sort": {"tf": 2}, "b3d.types.Array.argsort": {"tf": 2}, "b3d.types.Array.sort": {"tf": 2}, "b3d.utils.Array.argsort": {"tf": 2}, "b3d.utils.Array.sort": {"tf": 2}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 2}, "b3d.pose.core.Array.ravel": {"tf": 2}, "b3d.types.Array.flatten": {"tf": 2}, "b3d.types.Array.ravel": {"tf": 2}, "b3d.utils.Array.flatten": {"tf": 2}, "b3d.utils.Array.ravel": {"tf": 2}}, "df": 8}}}, "r": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 8, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1, "d": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "d": {"docs": {"b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 13}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 6}}}, "m": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_gps_model.minimal_observation_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 16}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 4.123105625617661}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 4.123105625617661}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 4.123105625617661}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 52, "s": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.449489742783178}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 19}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 6}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 3}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 24, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 23, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 2.23606797749979}}, "df": 1, "r": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}}, "df": 27}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 2.23606797749979}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 2.8284271247461903}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 2.23606797749979}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 2.8284271247461903}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 2.23606797749979}}, "df": 12, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 18}, "r": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 3}}}}, "^": {"2": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 3}, "3": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 3}}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.assess": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}}, "df": 15, "s": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 18}, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 84}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"b3d.io.MeshData.save": {"tf": 1}, "b3d.io.FeatureTrackData.save": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}}, "df": 4}, "d": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}, "e": {"3": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1, "e": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 65, "m": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}, "n": {"docs": {"b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}}, "df": 2}}, "t": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 46, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}}, "df": 6}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 16}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1}}, "df": 9}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.compress": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 12}}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 3}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 3}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.23606797749979}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 3}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}}, "df": 16, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 9}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 5}, "*": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 36}}, "b": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 39, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 9, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.io.FeatureTrackData.slice_time": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1.7320508075688772}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "^": {"2": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "p": {"3": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 2}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2}, "b3d.Renderer.rasterize": {"tf": 2.23606797749979}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.as_matrix": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1.4142135623730951}, "b3d.Pose.from_quat": {"tf": 1.4142135623730951}, "b3d.Pose.from_pos": {"tf": 1.4142135623730951}, "b3d.Pose.from_translation": {"tf": 1.4142135623730951}, "b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.Pose.from_pos_matrix": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.MeshLibrary.add_object": {"tf": 1.7320508075688772}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1.7320508075688772}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2.6457513110645907}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 2.449489742783178}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 4.358898943540674}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.8284271247461903}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.colors.ciede2000_err": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 2.449489742783178}, "b3d.pose.core.Array.any": {"tf": 2.449489742783178}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 3.3166247903554}, "b3d.pose.core.Array.argsort": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.copy": {"tf": 2.449489742783178}, "b3d.pose.core.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.cumsum": {"tf": 3.3166247903554}, "b3d.pose.core.Array.diagonal": {"tf": 4.795831523312719}, "b3d.pose.core.Array.dot": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.flatten": {"tf": 2.23606797749979}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2.449489742783178}, "b3d.pose.core.Array.mean": {"tf": 2.23606797749979}, "b3d.pose.core.Array.min": {"tf": 2.449489742783178}, "b3d.pose.core.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.prod": {"tf": 3}, "b3d.pose.core.Array.ptp": {"tf": 2.23606797749979}, "b3d.pose.core.Array.ravel": {"tf": 2.23606797749979}, "b3d.pose.core.Array.repeat": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.sort": {"tf": 2.23606797749979}, "b3d.pose.core.Array.squeeze": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.std": {"tf": 2.23606797749979}, "b3d.pose.core.Array.sum": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.swapaxes": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.take": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.trace": {"tf": 3}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.view": {"tf": 2.449489742783178}, "b3d.pose.core.Array.T": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.mT": {"tf": 2}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.as_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_pos": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_translation": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2}, "b3d.renderer.Renderer.rasterize": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 2.449489742783178}, "b3d.types.Array.any": {"tf": 2.449489742783178}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 3.3166247903554}, "b3d.types.Array.argsort": {"tf": 3.1622776601683795}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 3.7416573867739413}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1.7320508075688772}, "b3d.types.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 2.449489742783178}, "b3d.types.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.types.Array.cumsum": {"tf": 3.3166247903554}, "b3d.types.Array.diagonal": {"tf": 4.795831523312719}, "b3d.types.Array.dot": {"tf": 3.7416573867739413}, "b3d.types.Array.flatten": {"tf": 2.23606797749979}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2.449489742783178}, "b3d.types.Array.mean": {"tf": 2.23606797749979}, "b3d.types.Array.min": {"tf": 2.449489742783178}, "b3d.types.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.types.Array.prod": {"tf": 3}, "b3d.types.Array.ptp": {"tf": 2.23606797749979}, "b3d.types.Array.ravel": {"tf": 2.23606797749979}, "b3d.types.Array.repeat": {"tf": 1.7320508075688772}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 3.1622776601683795}, "b3d.types.Array.sort": {"tf": 2.23606797749979}, "b3d.types.Array.squeeze": {"tf": 3.1622776601683795}, "b3d.types.Array.std": {"tf": 2.23606797749979}, "b3d.types.Array.sum": {"tf": 3.4641016151377544}, "b3d.types.Array.swapaxes": {"tf": 3.1622776601683795}, "b3d.types.Array.take": {"tf": 2.6457513110645907}, "b3d.types.Array.trace": {"tf": 3}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 2.6457513110645907}, "b3d.types.Array.view": {"tf": 2.449489742783178}, "b3d.types.Array.T": {"tf": 3.4641016151377544}, "b3d.types.Array.mT": {"tf": 2}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 3.872983346207417}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 4.898979485566356}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 5.0990195135927845}, "b3d.types.GenerativeFunction.accumulate": {"tf": 4.242640687119285}, "b3d.types.GenerativeFunction.reduce": {"tf": 4.242640687119285}, "b3d.types.GenerativeFunction.iterate": {"tf": 4.795831523312719}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 4.58257569495584}, "b3d.types.GenerativeFunction.mask": {"tf": 2}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.dimap": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.map": {"tf": 2}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.6457513110645907}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1.4142135623730951}, "b3d.utils.viz_rgb": {"tf": 1.4142135623730951}, "b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 2.449489742783178}, "b3d.utils.Array.any": {"tf": 2.449489742783178}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 3.3166247903554}, "b3d.utils.Array.argsort": {"tf": 3.1622776601683795}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 3.7416573867739413}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1.7320508075688772}, "b3d.utils.Array.conjugate": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 2.449489742783178}, "b3d.utils.Array.cumprod": {"tf": 2.6457513110645907}, "b3d.utils.Array.cumsum": {"tf": 3.3166247903554}, "b3d.utils.Array.diagonal": {"tf": 4.795831523312719}, "b3d.utils.Array.dot": {"tf": 3.7416573867739413}, "b3d.utils.Array.flatten": {"tf": 2.23606797749979}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2.449489742783178}, "b3d.utils.Array.mean": {"tf": 2.23606797749979}, "b3d.utils.Array.min": {"tf": 2.449489742783178}, "b3d.utils.Array.nonzero": {"tf": 2.6457513110645907}, "b3d.utils.Array.prod": {"tf": 3}, "b3d.utils.Array.ptp": {"tf": 2.23606797749979}, "b3d.utils.Array.ravel": {"tf": 2.23606797749979}, "b3d.utils.Array.repeat": {"tf": 1.7320508075688772}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 3.1622776601683795}, "b3d.utils.Array.sort": {"tf": 2.23606797749979}, "b3d.utils.Array.squeeze": {"tf": 3.1622776601683795}, "b3d.utils.Array.std": {"tf": 2.23606797749979}, "b3d.utils.Array.sum": {"tf": 3.4641016151377544}, "b3d.utils.Array.swapaxes": {"tf": 3.1622776601683795}, "b3d.utils.Array.take": {"tf": 2.6457513110645907}, "b3d.utils.Array.trace": {"tf": 3}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 2.6457513110645907}, "b3d.utils.Array.view": {"tf": 2.449489742783178}, "b3d.utils.Array.T": {"tf": 3.4641016151377544}, "b3d.utils.Array.mT": {"tf": 2}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1.7320508075688772}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}, "b3d.utils.discretize": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 259, "n": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.from_matrix": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.7320508075688772}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.item": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 2.449489742783178}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 2.449489742783178}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_matrix": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.7320508075688772}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.item": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 2.449489742783178}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 2.449489742783178}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 2.6457513110645907}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.7320508075688772}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.item": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 2.449489742783178}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 2.449489742783178}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 2.6457513110645907}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 154, "d": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose": {"tf": 1}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_pos_matrix": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 3.1622776601683795}, "b3d.pose.core.Array": {"tf": 2.23606797749979}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 3}, "b3d.pose.core.Array.dot": {"tf": 2}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 2.449489742783178}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_pos_matrix": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 2.23606797749979}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 3.1622776601683795}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 3}, "b3d.types.Array.dot": {"tf": 2}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 2.449489742783178}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 4.58257569495584}, "b3d.types.GenerativeFunction.accumulate": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.reduce": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.iterate": {"tf": 3}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.dimap": {"tf": 2.23606797749979}, "b3d.utils.Array": {"tf": 2.23606797749979}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 3.1622776601683795}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 3}, "b3d.utils.Array.dot": {"tf": 2}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 2.449489742783178}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 144}, "y": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 2.6457513110645907}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 2.6457513110645907}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 57}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.choose_good_quat": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 2}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3.4641016151377544}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3.4641016151377544}}, "df": 50, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 2.449489742783178}, "b3d.Renderer.render_attribute": {"tf": 2.449489742783178}, "b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 2}, "b3d.io.VideoInput": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.449489742783178}}, "df": 11}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.at": {"tf": 3.1622776601683795}, "b3d.types.Array.at": {"tf": 3.1622776601683795}, "b3d.utils.Array.at": {"tf": 3.1622776601683795}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}}, "df": 13, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.Renderer.render_attribute_many": {"tf": 2.6457513110645907}, "b3d.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.7320508075688772}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.planar_coordinates": {"tf": 1.4142135623730951}, "b3d.camera.rgb_for_point_from_img": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 3}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2}, "b3d.colors.ciede2000_err": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 2.449489742783178}, "b3d.io.FeatureTrackData": {"tf": 3.1622776601683795}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.dtype": {"tf": 1}, "b3d.pose.core.Array.ndim": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.shape": {"tf": 1}, "b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.is_fully_replicated": {"tf": 1}, "b3d.pose.core.Array.sharding": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.any": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.argmax": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.argmin": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.argpartition": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.argsort": {"tf": 3}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumprod": {"tf": 2}, "b3d.pose.core.Array.cumsum": {"tf": 2.449489742783178}, "b3d.pose.core.Array.diagonal": {"tf": 4.123105625617661}, "b3d.pose.core.Array.dot": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.flatten": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2.449489742783178}, "b3d.pose.core.Array.mean": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.min": {"tf": 2.449489742783178}, "b3d.pose.core.Array.nonzero": {"tf": 4.123105625617661}, "b3d.pose.core.Array.prod": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.ptp": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.ravel": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.repeat": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.sort": {"tf": 2.449489742783178}, "b3d.pose.core.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 3}, "b3d.pose.core.Array.sum": {"tf": 3}, "b3d.pose.core.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.trace": {"tf": 2.449489742783178}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 3.3166247903554}, "b3d.pose.core.Array.view": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 4.795831523312719}, "b3d.pose.core.Array.mT": {"tf": 3.3166247903554}, "b3d.pose.core.Array.real": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.imag": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 3}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.rasterize": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.6457513110645907}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.6457513110645907}, "b3d.types.Array": {"tf": 2.8284271247461903}, "b3d.types.Array.dtype": {"tf": 1}, "b3d.types.Array.ndim": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.shape": {"tf": 1}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.types.Array.is_fully_replicated": {"tf": 1}, "b3d.types.Array.sharding": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.8284271247461903}, "b3d.types.Array.any": {"tf": 2.6457513110645907}, "b3d.types.Array.argmax": {"tf": 2.8284271247461903}, "b3d.types.Array.argmin": {"tf": 2.8284271247461903}, "b3d.types.Array.argpartition": {"tf": 3.1622776601683795}, "b3d.types.Array.argsort": {"tf": 3}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 3.7416573867739413}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.cumprod": {"tf": 2}, "b3d.types.Array.cumsum": {"tf": 2.449489742783178}, "b3d.types.Array.diagonal": {"tf": 4.123105625617661}, "b3d.types.Array.dot": {"tf": 2.8284271247461903}, "b3d.types.Array.flatten": {"tf": 3.4641016151377544}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 2.449489742783178}, "b3d.types.Array.mean": {"tf": 3.1622776601683795}, "b3d.types.Array.min": {"tf": 2.449489742783178}, "b3d.types.Array.nonzero": {"tf": 4.123105625617661}, "b3d.types.Array.prod": {"tf": 2.6457513110645907}, "b3d.types.Array.ptp": {"tf": 2.6457513110645907}, "b3d.types.Array.ravel": {"tf": 3.4641016151377544}, "b3d.types.Array.repeat": {"tf": 2.8284271247461903}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2.6457513110645907}, "b3d.types.Array.sort": {"tf": 2.449489742783178}, "b3d.types.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 3}, "b3d.types.Array.sum": {"tf": 3}, "b3d.types.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.trace": {"tf": 2.449489742783178}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 3.3166247903554}, "b3d.types.Array.view": {"tf": 3.1622776601683795}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 4.795831523312719}, "b3d.types.Array.mT": {"tf": 3.3166247903554}, "b3d.types.Array.real": {"tf": 1.4142135623730951}, "b3d.types.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.types.Array.at": {"tf": 3}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 3.4641016151377544}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array": {"tf": 2.8284271247461903}, "b3d.utils.Array.dtype": {"tf": 1}, "b3d.utils.Array.ndim": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.shape": {"tf": 1}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.utils.Array.is_fully_replicated": {"tf": 1}, "b3d.utils.Array.sharding": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.8284271247461903}, "b3d.utils.Array.any": {"tf": 2.6457513110645907}, "b3d.utils.Array.argmax": {"tf": 2.8284271247461903}, "b3d.utils.Array.argmin": {"tf": 2.8284271247461903}, "b3d.utils.Array.argpartition": {"tf": 3.1622776601683795}, "b3d.utils.Array.argsort": {"tf": 3}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 3.7416573867739413}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumprod": {"tf": 2}, "b3d.utils.Array.cumsum": {"tf": 2.449489742783178}, "b3d.utils.Array.diagonal": {"tf": 4.123105625617661}, "b3d.utils.Array.dot": {"tf": 2.8284271247461903}, "b3d.utils.Array.flatten": {"tf": 3.4641016151377544}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2.449489742783178}, "b3d.utils.Array.mean": {"tf": 3.1622776601683795}, "b3d.utils.Array.min": {"tf": 2.449489742783178}, "b3d.utils.Array.nonzero": {"tf": 4.123105625617661}, "b3d.utils.Array.prod": {"tf": 2.6457513110645907}, "b3d.utils.Array.ptp": {"tf": 2.6457513110645907}, "b3d.utils.Array.ravel": {"tf": 3.4641016151377544}, "b3d.utils.Array.repeat": {"tf": 2.8284271247461903}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2.6457513110645907}, "b3d.utils.Array.sort": {"tf": 2.449489742783178}, "b3d.utils.Array.squeeze": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 3}, "b3d.utils.Array.sum": {"tf": 3}, "b3d.utils.Array.swapaxes": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.trace": {"tf": 2.449489742783178}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 3.3166247903554}, "b3d.utils.Array.view": {"tf": 3.1622776601683795}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 4.795831523312719}, "b3d.utils.Array.mT": {"tf": 3.3166247903554}, "b3d.utils.Array.real": {"tf": 1.4142135623730951}, "b3d.utils.Array.imag": {"tf": 1.4142135623730951}, "b3d.utils.Array.nbytes": {"tf": 1}, "b3d.utils.Array.itemsize": {"tf": 1}, "b3d.utils.Array.at": {"tf": 3}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 230, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 37}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.sparse.gps_utils.IndexDist": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.canvas_from_intrinsics": {"tf": 1}, "b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2.449489742783178}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 3.605551275463989}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.vstack_images": {"tf": 1}, "b3d.utils.hstack_images": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.normalize_log_scores": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.voxelize": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 99, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.imag": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.real": {"tf": 1.4142135623730951}, "b3d.types.Array.imag": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1.4142135623730951}, "b3d.utils.Array.imag": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 27, "s": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1.4142135623730951}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.types.GenerativeFunction.contramap": {"tf": 2}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 55}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1.7320508075688772}}, "df": 1}, "x": {"docs": {"b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2.8284271247461903}}, "df": 1}}}}}}, "e": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.7320508075688772}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.449489742783178}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 2}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.at": {"tf": 3}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.449489742783178}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 2}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 2}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 3}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.449489742783178}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 2}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 3}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 107, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.HyperparamsAndIntrinsics": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 2}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.round": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 1}}, "df": 14}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}}, "df": 3}}}}}}}, "p": {"docs": {"b3d.io.VideoInput": {"tf": 2.449489742783178}}, "df": 1}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 33}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.ModelArgs.color_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_tolerance": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.inlier_score": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.outlier_prob": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.color_multiplier": {"tf": 1}, "b3d.bayes3d.model.ModelArgs.depth_multiplier": {"tf": 1}, "b3d.camera.Intrinsics.width": {"tf": 1}, "b3d.camera.Intrinsics.height": {"tf": 1}, "b3d.camera.Intrinsics.fx": {"tf": 1}, "b3d.camera.Intrinsics.fy": {"tf": 1}, "b3d.camera.Intrinsics.cx": {"tf": 1}, "b3d.camera.Intrinsics.cy": {"tf": 1}, "b3d.camera.Intrinsics.near": {"tf": 1}, "b3d.camera.Intrinsics.far": {"tf": 1}, "b3d.camera.RenderConfig.bg_color": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.color_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.depth_tolerance": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.inlier_score": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.outlier_prob": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.multiplier": {"tf": 1}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 26}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.aabb": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argsort": {"tf": 2.23606797749979}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 2.23606797749979}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.argsort": {"tf": 2.23606797749979}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 2.23606797749979}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.argsort": {"tf": 2.23606797749979}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.7320508075688772}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 2.23606797749979}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 67}}}, "l": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 2.449489742783178}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.all": {"tf": 2.449489742783178}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.449489742783178}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 2}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 52, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 10, "s": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}}, "df": 18}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.treescope_color": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"b3d.utils.overlay_image": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.apply": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.apply": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.utils.Array": {"tf": 1}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 6}, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}, "y": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}}, "df": 4}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"1": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}}, "df": 9}, "2": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}}, "df": 9}, "docs": {"b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 2.449489742783178}, "b3d.pose.core.Array.any": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.argmax": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argmin": {"tf": 2.23606797749979}, "b3d.pose.core.Array.argpartition": {"tf": 3}, "b3d.pose.core.Array.argsort": {"tf": 3}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumsum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.max": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.mean": {"tf": 2}, "b3d.pose.core.Array.min": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.prod": {"tf": 2.8284271247461903}, "b3d.pose.core.Array.ptp": {"tf": 2.449489742783178}, "b3d.pose.core.Array.repeat": {"tf": 2}, "b3d.pose.core.Array.sort": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 2}, "b3d.pose.core.Array.sum": {"tf": 3}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 2.449489742783178}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 2}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 2.449489742783178}, "b3d.types.Array.any": {"tf": 2.6457513110645907}, "b3d.types.Array.argmax": {"tf": 2.23606797749979}, "b3d.types.Array.argmin": {"tf": 2.23606797749979}, "b3d.types.Array.argpartition": {"tf": 3}, "b3d.types.Array.argsort": {"tf": 3}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.types.Array.cumsum": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.types.Array.max": {"tf": 2.6457513110645907}, "b3d.types.Array.mean": {"tf": 2}, "b3d.types.Array.min": {"tf": 2.6457513110645907}, "b3d.types.Array.prod": {"tf": 2.8284271247461903}, "b3d.types.Array.ptp": {"tf": 2.449489742783178}, "b3d.types.Array.repeat": {"tf": 2}, "b3d.types.Array.sort": {"tf": 1.7320508075688772}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.std": {"tf": 2}, "b3d.types.Array.sum": {"tf": 3}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 2.449489742783178}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 2}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.utils.aabb": {"tf": 1}, "b3d.utils.Array.all": {"tf": 2.449489742783178}, "b3d.utils.Array.any": {"tf": 2.6457513110645907}, "b3d.utils.Array.argmax": {"tf": 2.23606797749979}, "b3d.utils.Array.argmin": {"tf": 2.23606797749979}, "b3d.utils.Array.argpartition": {"tf": 3}, "b3d.utils.Array.argsort": {"tf": 3}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumsum": {"tf": 2.23606797749979}, "b3d.utils.Array.diagonal": {"tf": 2.6457513110645907}, "b3d.utils.Array.max": {"tf": 2.6457513110645907}, "b3d.utils.Array.mean": {"tf": 2}, "b3d.utils.Array.min": {"tf": 2.6457513110645907}, "b3d.utils.Array.prod": {"tf": 2.8284271247461903}, "b3d.utils.Array.ptp": {"tf": 2.449489742783178}, "b3d.utils.Array.repeat": {"tf": 2}, "b3d.utils.Array.sort": {"tf": 1.7320508075688772}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.std": {"tf": 2}, "b3d.utils.Array.sum": {"tf": 3}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 2.449489742783178}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 2}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 90}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 2.6457513110645907}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 2}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 2.6457513110645907}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 75}}}, "s": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.camera.Intrinsics.as_array": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.FeatureTrackData.intrinsics": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmin": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 2.23606797749979}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 2.449489742783178}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.view": {"tf": 2.23606797749979}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1.7320508075688772}, "b3d.types.Array.argmin": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 2.23606797749979}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.prod": {"tf": 2.449489742783178}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 2}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.view": {"tf": 2.23606797749979}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.make_gif_from_pil_images": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmin": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 2.23606797749979}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 2.449489742783178}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 2}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.view": {"tf": 2.23606797749979}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 139, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}}, "df": 4}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.astype": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 9}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.at": {"tf": 2.23606797749979}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array.at": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 2.23606797749979}}, "df": 8, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 27}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.addressable_data": {"tf": 1}, "b3d.pose.core.Array.addressable_shards": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 2.23606797749979}, "b3d.types.Array.addressable_data": {"tf": 1}, "b3d.types.Array.addressable_shards": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 2.23606797749979}, "b3d.utils.Array.addressable_data": {"tf": 1}, "b3d.utils.Array.addressable_shards": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 2.23606797749979}}, "df": 9}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 7}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 18}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.utils.get_assets": {"tf": 1}, "b3d.utils.get_assets_path": {"tf": 1}, "b3d.utils.get_shared": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.VideoInput": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 28}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 7}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 3}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 9}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 6}}}}}}}}, "@": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.sparse.gps_utils.ellipsoid_embedding": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 36}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 1}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2}, "b3d.types.Array.trace": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 2}, "b3d.utils.Array.trace": {"tf": 1}}, "df": 9, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 12}, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}}}, "j": {"0": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}, "1": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 2.23606797749979}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 2}, "b3d.renderer.Renderer.rasterize_many": {"tf": 2.23606797749979}}, "df": 6, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Pose.from_vec": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.23606797749979}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.23606797749979}, "b3d.pose.core.Array": {"tf": 3.3166247903554}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argpartition": {"tf": 2}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.flatten": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.pose.core.Array.ravel": {"tf": 2.6457513110645907}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.reshape": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.mT": {"tf": 3}, "b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.Array": {"tf": 3.3166247903554}, "b3d.types.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.types.Array.argpartition": {"tf": 2}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1.7320508075688772}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 2.6457513110645907}, "b3d.types.Array.flatten": {"tf": 2.6457513110645907}, "b3d.types.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.types.Array.ravel": {"tf": 2.6457513110645907}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.reshape": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.Array.T": {"tf": 3.7416573867739413}, "b3d.types.Array.mT": {"tf": 3}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.or_else": {"tf": 2}, "b3d.types.GenerativeFunction.switch": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mix": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}, "b3d.utils.Array": {"tf": 3.3166247903554}, "b3d.utils.Array.is_fully_addressable": {"tf": 1.7320508075688772}, "b3d.utils.Array.argpartition": {"tf": 2}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1.7320508075688772}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 2.6457513110645907}, "b3d.utils.Array.flatten": {"tf": 2.6457513110645907}, "b3d.utils.Array.nonzero": {"tf": 3.1622776601683795}, "b3d.utils.Array.ravel": {"tf": 2.6457513110645907}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.reshape": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.flat": {"tf": 1}, "b3d.utils.Array.T": {"tf": 3.7416573867739413}, "b3d.utils.Array.mT": {"tf": 3}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 93}}, "n": {"docs": {}, "df": 0, "p": {"docs": {"b3d.Mesh.__init__": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 2.449489742783178}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 3}, "b3d.pose.core.Array.flatten": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 3.3166247903554}, "b3d.pose.core.Array.ravel": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.view": {"tf": 3.7416573867739413}, "b3d.pose.core.Array.T": {"tf": 3}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 3}, "b3d.types.Array.flatten": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 3.3166247903554}, "b3d.types.Array.ravel": {"tf": 1.7320508075688772}, "b3d.types.Array.view": {"tf": 3.7416573867739413}, "b3d.types.Array.T": {"tf": 3}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 3}, "b3d.utils.Array.flatten": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 3.3166247903554}, "b3d.utils.Array.ravel": {"tf": 1.7320508075688772}, "b3d.utils.Array.view": {"tf": 3.7416573867739413}, "b3d.utils.Array.T": {"tf": 3}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 34}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 3}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 3}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 3}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 31, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}}, "df": 8}}}, "j": {"docs": {"b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}}, "df": 3}, "t": {"docs": {}, "df": 0, "u": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_xyz": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.8284271247461903}}, "df": 12, "v": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1}, "b3d.camera.screen_from_xyz": {"tf": 1}, "b3d.camera.screen_from_world": {"tf": 1}, "b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 11, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {"b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 10, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 3.1622776601683795}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1.7320508075688772}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1.7320508075688772}, "b3d.utils.grid1": {"tf": 1.7320508075688772}, "b3d.utils.grid2": {"tf": 2.449489742783178}, "b3d.utils.grid3": {"tf": 3}, "b3d.utils.grid4": {"tf": 3.4641016151377544}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 15, "d": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}}, "df": 1}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 3}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 5, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1.7320508075688772}, "b3d.types.Array.at": {"tf": 1.7320508075688772}, "b3d.utils.Array.at": {"tf": 1.7320508075688772}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1.7320508075688772}, "b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1.4142135623730951}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 2}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 8}}}, "t": {"docs": {"b3d.pose.pose_utils.unit_disc_to_sphere": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 23, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}}, "df": 5}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}}, "df": 24}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 24}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 12}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2}, "b3d.types.GenerativeFunction.reduce": {"tf": 2}, "b3d.types.GenerativeFunction.iterate": {"tf": 2}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.flat": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.flat": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.treescope_color": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.flat": {"tf": 1}}, "df": 43, "r": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 18, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 2}, "d": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 2}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 2}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 2}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}}, "df": 66}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.sort": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 25}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"8": {"docs": {"b3d.io.MeshData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {}, "df": 0}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.prod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1.4142135623730951}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1.4142135623730951}, "b3d.types.Array.prod": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1.4142135623730951}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1.4142135623730951}, "b3d.utils.Array.prod": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 30}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}, "v": {"1": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.assess": {"tf": 2}}, "df": 2}, "2": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.assess": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.camera.camera_from_screen_and_depth": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.7320508075688772}, "b3d.camera.screen_from_xyz": {"tf": 1.7320508075688772}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 2.6457513110645907}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.utils.Array.searchsorted": {"tf": 2.6457513110645907}}, "df": 20, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.real": {"tf": 2}, "b3d.pose.core.Array.imag": {"tf": 2}, "b3d.types.Array.real": {"tf": 2}, "b3d.types.Array.imag": {"tf": 2}, "b3d.utils.Array.real": {"tf": 2}, "b3d.utils.Array.imag": {"tf": 2}}, "df": 6, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 2}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 2.23606797749979}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.7320508075688772}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 2}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 2}, "b3d.pose.core.Array.nonzero": {"tf": 3}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.take": {"tf": 2.23606797749979}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 2.8284271247461903}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.render_attribute": {"tf": 1.4142135623730951}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.max": {"tf": 2}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 2}, "b3d.types.Array.nonzero": {"tf": 3}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.types.Array.std": {"tf": 1.4142135623730951}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.take": {"tf": 2.23606797749979}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.propose": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}, "b3d.utils.overlay_image": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.max": {"tf": 2}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 2}, "b3d.utils.Array.nonzero": {"tf": 3}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.repeat": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1.4142135623730951}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.take": {"tf": 2.23606797749979}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 2.8284271247461903}}, "df": 90, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argmax": {"tf": 1}, "b3d.pose.core.Array.argmin": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 2.23606797749979}, "b3d.pose.core.Array.clip": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 2}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argmax": {"tf": 1}, "b3d.types.Array.argmin": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 2.23606797749979}, "b3d.types.Array.clip": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 2}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argmax": {"tf": 1}, "b3d.utils.Array.argmin": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 2.23606797749979}, "b3d.utils.Array.clip": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 2}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.7320508075688772}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 69}, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 8}}}, "r": {"docs": {"b3d.pose.core.Array.var": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 3.1622776601683795}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.var": {"tf": 3.1622776601683795}, "b3d.utils.Array.var": {"tf": 3.1622776601683795}}, "df": 10}}, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average_rgbd": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 2.449489742783178}, "b3d.Renderer.render_attribute": {"tf": 2.449489742783178}, "b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 2.6457513110645907}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 2}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 2.449489742783178}, "b3d.renderer.Renderer.render_attribute": {"tf": 2.449489742783178}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1.4142135623730951}}, "df": 20, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.utils.vstack_images": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.render_to_rgbd_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.barycentric_interpolation": {"tf": 1.4142135623730951}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.io.MeshData": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1.4142135623730951}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 18}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 36, "s": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 6}}}}}, "y": {"docs": {"b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1.7320508075688772}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1.7320508075688772}}, "df": 6}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.Pose.__init__": {"tf": 1}, "b3d.Pose.inv": {"tf": 1}, "b3d.Pose.inverse": {"tf": 1}, "b3d.Pose.from_pos": {"tf": 1}, "b3d.Pose.from_translation": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose.__init__": {"tf": 1}, "b3d.pose.core.Pose.inv": {"tf": 1}, "b3d.pose.core.Pose.inverse": {"tf": 1}, "b3d.pose.core.Pose.from_pos": {"tf": 1}, "b3d.pose.core.Pose.from_translation": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.7320508075688772}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"b3d.Pose.apply": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.pose.core.Pose.apply": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.pose.core.Pose.sample_uniform_pose_vmap": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}, "b3d.utils.resize_image_nearest_vmap": {"tf": 1}, "b3d.utils.resize_image_linear_vmap": {"tf": 1}, "b3d.utils.enumerate_choices": {"tf": 1}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1}, "b3d.utils.grid1": {"tf": 1}, "b3d.utils.grid2": {"tf": 1.4142135623730951}, "b3d.utils.grid3": {"tf": 1.7320508075688772}, "b3d.utils.grid4": {"tf": 2}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1}}, "df": 13}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1.4142135623730951}}, "df": 7}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.utils.voxelize": {"tf": 1}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera": {"tf": 1.7320508075688772}, "b3d.utils.voxel_occupied_occluded_free_parallel_camera_depth": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"b3d.utils.voxelize": {"tf": 1}}, "df": 1, "d": {"docs": {"b3d.utils.voxelize": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.transpose": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 2.23606797749979}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.types.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.types.Array.transpose": {"tf": 1}, "b3d.types.Array.view": {"tf": 2.23606797749979}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.7320508075688772}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.squeeze": {"tf": 1.4142135623730951}, "b3d.utils.Array.swapaxes": {"tf": 1.7320508075688772}, "b3d.utils.Array.transpose": {"tf": 1}, "b3d.utils.Array.view": {"tf": 2.23606797749979}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 34, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.io.FeatureTrackData": {"tf": 2}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.get_rgb_pil_image": {"tf": 1}, "b3d.utils.viz_rgb": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {"b3d.io.VideoInput": {"tf": 2.8284271247461903}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.io.VideoInput.save": {"tf": 1}, "b3d.io.VideoInput.save_in_timeframe": {"tf": 1}, "b3d.io.VideoInput.load": {"tf": 1}}, "df": 4}}}}}}}}, "a": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mT": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.T": {"tf": 1.7320508075688772}, "b3d.types.Array.mT": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1.7320508075688772}, "b3d.utils.Array.mT": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1}}, "df": 25}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.vmap": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "x": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_screen_and_depth": {"tf": 2.449489742783178}, "b3d.camera.camera_from_depth": {"tf": 2.8284271247461903}, "b3d.camera.xyz_from_depth": {"tf": 2.8284271247461903}, "b3d.camera.unproject_depth": {"tf": 2.8284271247461903}, "b3d.camera.screen_from_camera": {"tf": 2}, "b3d.camera.screen_from_xyz": {"tf": 2}, "b3d.camera.planar_coordinates": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_z_value": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.camera_from_position_and_target": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_vec": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_position_and_target": {"tf": 1.4142135623730951}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1.4142135623730951}}, "df": 22, "[": {"docs": {}, "df": 0, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.rasterize": {"tf": 1.7320508075688772}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 23, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.view": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1}}, "df": 20}}}}, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}}, "df": 8}, "^": {"2": {"docs": {"b3d.pose.pose_utils.volume_of_cap_around_north_pole": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "e": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1.4142135623730951}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 35, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.astype": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.conj": {"tf": 1}, "b3d.pose.core.Array.conjugate": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.item": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.itemsize": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.astype": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.conj": {"tf": 1}, "b3d.types.Array.conjugate": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.item": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.itemsize": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.astype": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.conj": {"tf": 1}, "b3d.utils.Array.conjugate": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.item": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.itemsize": {"tf": 1}}, "df": 36, "s": {"docs": {"b3d.Renderer.rasterize_many": {"tf": 1}, "b3d.Renderer.rasterize": {"tf": 1}, "b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.size": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 2}, "b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 2.23606797749979}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.trace": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.real": {"tf": 1}, "b3d.pose.core.Array.imag": {"tf": 1}, "b3d.pose.core.Array.nbytes": {"tf": 1}, "b3d.renderer.Renderer.rasterize_many": {"tf": 1}, "b3d.renderer.Renderer.rasterize": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.size": {"tf": 1}, "b3d.types.Array.all": {"tf": 1.4142135623730951}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.types.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.types.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1.4142135623730951}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 2}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 2.23606797749979}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.trace": {"tf": 1.4142135623730951}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.real": {"tf": 1}, "b3d.types.Array.imag": {"tf": 1}, "b3d.types.Array.nbytes": {"tf": 1}, "b3d.utils.Array.size": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1.4142135623730951}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.7320508075688772}, "b3d.utils.Array.cumprod": {"tf": 1.4142135623730951}, "b3d.utils.Array.cumsum": {"tf": 1.4142135623730951}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1.4142135623730951}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 2}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 2.23606797749979}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.trace": {"tf": 1.4142135623730951}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.real": {"tf": 1}, "b3d.utils.Array.imag": {"tf": 1}, "b3d.utils.Array.nbytes": {"tf": 1}}, "df": 73}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.or_else": {"tf": 2}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"b3d.Renderer.render_attribute_many": {"tf": 1}, "b3d.Renderer.render_attribute": {"tf": 1}, "b3d.Mesh.__init__": {"tf": 1}, "b3d.camera.pixel_centers_from_shape": {"tf": 1.4142135623730951}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.camera.rgb_for_point_from_img": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.random_color_by_cluster": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.logpdf": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.logpdf": {"tf": 1}, "b3d.io.MeshData": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.renderer.Renderer.render_attribute_many": {"tf": 1}, "b3d.renderer.Renderer.render_attribute": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.utils.multi_panel": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}}, "df": 46}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.swapaxes": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 3}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.camera.canvas_from_intrinsics": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 6, "{": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"b3d.io.VideoInput": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.types.GenerativeFunction.mask": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"b3d.camera.homogeneous_coordinates": {"tf": 1}, "b3d.camera.planar_coordinates": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_weights_and_barycentric_coords": {"tf": 1.4142135623730951}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}}, "df": 3, "s": {"docs": {"b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction.assess": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}}, "df": 4}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.hgps_utils.depreciated": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 23, "s": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.T": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.T": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.T": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 45}}}}}}, "p": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1, "s": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.types.GenerativeFunction.mix": {"tf": 1}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 1}}, "df": 2, "s": {"docs": {"b3d.types.GenerativeFunction.switch": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.repeat": {"tf": 1}, "b3d.types.Array.repeat": {"tf": 1}, "b3d.utils.Array.repeat": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.nonzero": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.nonzero": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.nonzero": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.max": {"tf": 1}, "b3d.pose.core.Array.mean": {"tf": 1}, "b3d.pose.core.Array.min": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.std": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.var": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.max": {"tf": 1}, "b3d.types.Array.mean": {"tf": 1}, "b3d.types.Array.min": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.std": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.var": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.max": {"tf": 1}, "b3d.utils.Array.mean": {"tf": 1}, "b3d.utils.Array.min": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.std": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.var": {"tf": 1}}, "df": 30}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.dot": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.7320508075688772}, "b3d.types.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.7320508075688772}, "b3d.utils.Array.nonzero": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1}}, "df": 11}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.pose.core.Array.is_fully_addressable": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.pose.core.Array.flatten": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.ravel": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.take": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.T": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.at": {"tf": 1.4142135623730951}, "b3d.types.Array.is_fully_addressable": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.Array.flatten": {"tf": 1.4142135623730951}, "b3d.types.Array.ravel": {"tf": 1.4142135623730951}, "b3d.types.Array.take": {"tf": 1.4142135623730951}, "b3d.types.Array.T": {"tf": 1.4142135623730951}, "b3d.types.Array.at": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.utils.Array.is_fully_addressable": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}, "b3d.utils.Array.flatten": {"tf": 1.4142135623730951}, "b3d.utils.Array.ravel": {"tf": 1.4142135623730951}, "b3d.utils.Array.take": {"tf": 1.4142135623730951}, "b3d.utils.Array.T": {"tf": 1.4142135623730951}, "b3d.utils.Array.at": {"tf": 1.4142135623730951}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 25}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"b3d.pose.core.Array": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.utils.Array": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 10}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1}}, "df": 7}}}}}, "q": {"docs": {"b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.Pose.from_vec": {"tf": 2.23606797749979}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.from_vec": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.vmap": {"tf": 1}}, "df": 6, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1.4142135623730951}, "b3d.io.VideoInput": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.Pose.__init__": {"tf": 1.4142135623730951}, "b3d.Pose.canonical": {"tf": 1}, "b3d.Pose.from_xyzw": {"tf": 1}, "b3d.Pose.from_quat": {"tf": 1}, "b3d.Pose.from_vec": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.chisight.sparse.gps_utils.cov_from_dq_composition": {"tf": 1}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.choose_good_quat": {"tf": 1.4142135623730951}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.__init__": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.pose.core.Pose.from_xyzw": {"tf": 1}, "b3d.pose.core.Pose.from_quat": {"tf": 1}, "b3d.pose.core.Pose.from_vec": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 21, "s": {"docs": {"b3d.Pose": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 2}, "b3d.io.FeatureTrackData": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1.7320508075688772}, "b3d.pose.core.Pose": {"tf": 1}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1}}, "df": 7}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"b3d.io.FeatureTrackData": {"tf": 1}}, "df": 1}}}}, "[": {"3": {"docs": {"b3d.Pose.canonical": {"tf": 1.4142135623730951}, "b3d.pose.core.Pose.canonical": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}}, "g": {"docs": {"b3d.chisight.dense.differentiable_renderer.render_to_dist_params": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.render_to_average": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2.449489742783178}, "b3d.utils.Array.ptp": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 13, "t": {"docs": {"b3d.Pose.canonical": {"tf": 1}, "b3d.chisight.sparse.gps_utils.inv": {"tf": 4.58257569495584}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 2.449489742783178}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 5.196152422706632}, "b3d.pose.core.Array.flatten": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.nonzero": {"tf": 6.324555320336759}, "b3d.pose.core.Array.ravel": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.swapaxes": {"tf": 1}, "b3d.pose.core.Array.view": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.T": {"tf": 5.744562646538029}, "b3d.pose.core.Array.mT": {"tf": 3.4641016151377544}, "b3d.pose.core.Array.at": {"tf": 5.196152422706632}, "b3d.pose.core.Pose.canonical": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.dot": {"tf": 5.196152422706632}, "b3d.types.Array.flatten": {"tf": 3.4641016151377544}, "b3d.types.Array.nonzero": {"tf": 6.324555320336759}, "b3d.types.Array.ravel": {"tf": 3.4641016151377544}, "b3d.types.Array.swapaxes": {"tf": 1}, "b3d.types.Array.view": {"tf": 3.4641016151377544}, "b3d.types.Array.T": {"tf": 5.744562646538029}, "b3d.types.Array.mT": {"tf": 3.4641016151377544}, "b3d.types.Array.at": {"tf": 5.196152422706632}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 5.196152422706632}, "b3d.utils.Array.flatten": {"tf": 3.4641016151377544}, "b3d.utils.Array.nonzero": {"tf": 6.324555320336759}, "b3d.utils.Array.ravel": {"tf": 3.4641016151377544}, "b3d.utils.Array.swapaxes": {"tf": 1}, "b3d.utils.Array.view": {"tf": 3.4641016151377544}, "b3d.utils.Array.T": {"tf": 5.744562646538029}, "b3d.utils.Array.mT": {"tf": 3.4641016151377544}, "b3d.utils.Array.at": {"tf": 5.196152422706632}}, "df": 42}, "e": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.or_else": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1}}, "df": 21, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.dot": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.pose.core.Array.mT": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.dot": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.Array.mT": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.dot": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}, "b3d.utils.Array.mT": {"tf": 1}}, "df": 18, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}, "b3d.pose.core.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_jit": {"tf": 1}, "b3d.pose.core.Pose.sample_gaussian_vmf_pose_vmap": {"tf": 1}}, "df": 7}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.utils.distinct_colors": {"tf": 1}, "b3d.utils.make_grid_points": {"tf": 1}}, "df": 3, "d": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.particle_system.make_dense_gps_model": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2}, "b3d.types.GenerativeFunction": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.simulate": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.assess": {"tf": 2}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.propose": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 2}}, "df": 15, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.vmap": {"tf": 2}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 2}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 2}, "b3d.types.GenerativeFunction.dimap": {"tf": 2}, "b3d.types.GenerativeFunction.map": {"tf": 1}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}}, "df": 17}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 2}}, "df": 1}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1.4142135623730951}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 2.6457513110645907}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction": {"tf": 3}, "b3d.types.GenerativeFunction.simulate": {"tf": 3.605551275463989}, "b3d.types.GenerativeFunction.update": {"tf": 5}, "b3d.types.GenerativeFunction.assess": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.importance": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.propose": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.repeat": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.scan": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction.accumulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.reduce": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.iterate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.mask": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.or_else": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.switch": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.mix": {"tf": 3}, "b3d.types.GenerativeFunction.dimap": {"tf": 2.6457513110645907}, "b3d.types.GenerativeFunction.map": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.contramap": {"tf": 2.23606797749979}}, "df": 26}}}}, "t": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.get_uniform_multilaplace_rgbonly_image_dist_with_fixed_params": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.23606797749979}, "b3d.pose.core.Array.at": {"tf": 2.8284271247461903}, "b3d.types.Array.at": {"tf": 2.8284271247461903}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.23606797749979}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.importance": {"tf": 1.4142135623730951}, "b3d.utils.enumerate_choices_get_scores": {"tf": 1.7320508075688772}, "b3d.utils.grid1": {"tf": 1.7320508075688772}, "b3d.utils.grid2": {"tf": 2.449489742783178}, "b3d.utils.grid3": {"tf": 3}, "b3d.utils.grid4": {"tf": 3.4641016151377544}, "b3d.utils.Array.at": {"tf": 2.8284271247461903}, "b3d.utils.distinct_colors": {"tf": 1}}, "df": 19, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.get_dynamic_gps": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"b3d.chisight.dense.differentiable_renderer.get_signed_dist_and_barycentric_coords": {"tf": 1}}, "df": 1, "n": {"docs": {"b3d.MeshLibrary.add_object": {"tf": 1}, "b3d.bayes3d.mesh_library.MeshLibrary.add_object": {"tf": 1}, "b3d.camera.camera_from_depth": {"tf": 1}, "b3d.camera.xyz_from_depth": {"tf": 1}, "b3d.camera.unproject_depth": {"tf": 1}, "b3d.camera.camera_rays_from_intrinsics": {"tf": 1}, "b3d.chisight.dense.differentiable_renderer.project_pixel_to_plane": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches": {"tf": 1}, "b3d.chisight.patch_tracking.get_patches_from_pointcloud": {"tf": 1}, "b3d.chisight.patch_tracking.get_adam_optimization_patch_tracker": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS.change_coordinates": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1}, "b3d.io.FeatureTrackData.downscale": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1}, "b3d.pose.core.Array.any": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.compress": {"tf": 1}, "b3d.pose.core.Array.copy": {"tf": 1}, "b3d.pose.core.Array.cumprod": {"tf": 1}, "b3d.pose.core.Array.cumsum": {"tf": 1}, "b3d.pose.core.Array.diagonal": {"tf": 1}, "b3d.pose.core.Array.prod": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.repeat": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.round": {"tf": 1}, "b3d.pose.core.Array.searchsorted": {"tf": 1}, "b3d.pose.core.Array.sum": {"tf": 1}, "b3d.pose.core.Array.take": {"tf": 1}, "b3d.pose.core.Array.trace": {"tf": 1}, "b3d.types.Array.all": {"tf": 1}, "b3d.types.Array.any": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.compress": {"tf": 1}, "b3d.types.Array.copy": {"tf": 1}, "b3d.types.Array.cumprod": {"tf": 1}, "b3d.types.Array.cumsum": {"tf": 1}, "b3d.types.Array.diagonal": {"tf": 1}, "b3d.types.Array.prod": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1.4142135623730951}, "b3d.types.Array.repeat": {"tf": 1.4142135623730951}, "b3d.types.Array.round": {"tf": 1}, "b3d.types.Array.searchsorted": {"tf": 1}, "b3d.types.Array.sum": {"tf": 1}, "b3d.types.Array.take": {"tf": 1}, "b3d.types.Array.trace": {"tf": 1}, "b3d.types.GenerativeFunction.scan": {"tf": 1}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1}, "b3d.types.GenerativeFunction.reduce": {"tf": 1}, "b3d.types.GenerativeFunction.iterate": {"tf": 1}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1}, "b3d.types.GenerativeFunction.switch": {"tf": 1}, "b3d.utils.downsize_images": {"tf": 1}, "b3d.utils.Array.all": {"tf": 1}, "b3d.utils.Array.any": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.compress": {"tf": 1}, "b3d.utils.Array.copy": {"tf": 1}, "b3d.utils.Array.cumprod": {"tf": 1}, "b3d.utils.Array.cumsum": {"tf": 1}, "b3d.utils.Array.diagonal": {"tf": 1}, "b3d.utils.Array.prod": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1.4142135623730951}, "b3d.utils.Array.repeat": {"tf": 1.4142135623730951}, "b3d.utils.Array.round": {"tf": 1}, "b3d.utils.Array.searchsorted": {"tf": 1}, "b3d.utils.Array.sum": {"tf": 1}, "b3d.utils.Array.take": {"tf": 1}, "b3d.utils.Array.trace": {"tf": 1}, "b3d.utils.separate_shared_vertices": {"tf": 1}, "b3d.utils.triangle_color_mesh_to_vertex_color_mesh": {"tf": 1}}, "df": 79}, "s": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"b3d.utils.make_gif_from_pil_images": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"b3d.chisight.dense.differentiable_renderer.DifferentiableRendererHyperparams": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.gaussian_restriction_to_ray": {"tf": 1.4142135623730951}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.logpdf": {"tf": 1}}, "df": 6, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.inv": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"b3d.pose.core.Array.choose": {"tf": 1}, "b3d.pose.core.Array.ptp": {"tf": 1}, "b3d.types.Array.choose": {"tf": 1}, "b3d.types.Array.ptp": {"tf": 1}, "b3d.utils.Array.choose": {"tf": 1}, "b3d.utils.Array.ptp": {"tf": 1}}, "df": 6}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"b3d.utils.voxelize": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"b3d.pose.core.Array.global_shards": {"tf": 1}, "b3d.types.Array.global_shards": {"tf": 1}, "b3d.utils.Array.global_shards": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"b3d.pose.core.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.types.Array.searchsorted": {"tf": 1.4142135623730951}, "b3d.utils.Array.searchsorted": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.pose.core.Array.at": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.types.Array.at": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}, "b3d.utils.Array.at": {"tf": 1}}, "df": 6}, "s": {"docs": {"b3d.pose.core.Array.view": {"tf": 1}, "b3d.types.Array.view": {"tf": 1}, "b3d.utils.Array.view": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {"b3d.types.GenerativeFunction.update": {"tf": 1}}, "df": 1}}, "k": {"docs": {"b3d.camera.camera_from_screen_and_depth": {"tf": 1.4142135623730951}, "b3d.camera.camera_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.xyz_from_depth": {"tf": 1.4142135623730951}, "b3d.camera.unproject_depth": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_camera": {"tf": 1.4142135623730951}, "b3d.camera.screen_from_xyz": {"tf": 1.4142135623730951}, "b3d.camera.camera_matrix_from_intrinsics": {"tf": 1}, "b3d.chisight.sparse.dynamic_gps.DynamicGPS": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1}, "b3d.io.VideoInput": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 2.23606797749979}, "b3d.pose.core.Array.copy": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.flatten": {"tf": 1}, "b3d.pose.core.Array.ravel": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 2.23606797749979}, "b3d.types.Array.copy": {"tf": 1.4142135623730951}, "b3d.types.Array.flatten": {"tf": 1}, "b3d.types.Array.ravel": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}, "b3d.utils.Array.argpartition": {"tf": 2.23606797749979}, "b3d.utils.Array.copy": {"tf": 1.4142135623730951}, "b3d.utils.Array.flatten": {"tf": 1}, "b3d.utils.Array.ravel": {"tf": 1}}, "df": 24, "w": {"docs": {"b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1}, "b3d.types.GenerativeFunction": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.assess": {"tf": 1}, "b3d.types.GenerativeFunction.importance": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}}, "df": 15}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.sample": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.sample": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jimportance": {"tf": 1.7320508075688772}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 2.449489742783178}, "b3d.pose.pose_utils.uniform_samples_from_SE3_around_identity": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.simulate": {"tf": 2.449489742783178}, "b3d.types.GenerativeFunction.update": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.importance": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.vmap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.repeat": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.scan": {"tf": 1.7320508075688772}, "b3d.types.GenerativeFunction.accumulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.reduce": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.iterate_final": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mask": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.or_else": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.switch": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.mix": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.dimap": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.map": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction.contramap": {"tf": 1.4142135623730951}}, "df": 25, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"b3d.bayes3d.model.RGBDSensorModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ArgMap.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.ImageDistFromPixelDist.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.UniformRGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.RGBDPixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.VmapMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.dense.likelihoods.other_likelihoods.PythonMixturePixelModel.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussian.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.ProjectiveGaussianMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.HomogeneousMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.TwoComponentMixture.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.IndexDist.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureHack.__init__": {"tf": 1}, "b3d.chisight.sparse.gps_utils.MixtureStepHack.__init__": {"tf": 1}, "b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1}, "b3d.pose.pose_utils.UniformPoseInBall.__init__": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1}}, "df": 21}}}}, "s": {"docs": {"b3d.chisight.particle_system.latent_particle_model": {"tf": 1}, "b3d.chisight.sparse.sparse_model_reality_check.jsimulate": {"tf": 1.4142135623730951}, "b3d.types.GenerativeFunction": {"tf": 2}, "b3d.types.GenerativeFunction.simulate": {"tf": 1.4142135623730951}}, "df": 4}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"b3d.io.FeatureTrackData": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"b3d.chisight.sparse.sparse_gps_model.make_sparse_gps_model": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.remove_points_invisible_at_frame0": {"tf": 1}, "b3d.io.FeatureTrackData.sparsify_points_to_minimum_2D_distance_at_frame0": {"tf": 1.4142135623730951}, "b3d.io.FeatureTrackData.min_2D_distance_at_frame0": {"tf": 1}}, "df": 5}}}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"b3d.chisight.dense.likelihoods.blur_likelihood.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_cutoff.log_gaussian_kernel": {"tf": 1}, "b3d.chisight.dense.likelihoods.blur_likelihood_gaussian.log_gaussian_kernel": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 2.23606797749979}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.sparse.gps_utils.logsumexp": {"tf": 1}, "b3d.pose.core.Array.all": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.any": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.argmax": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.argmin": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.max": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.mean": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.min": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.prod": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.ptp": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.std": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.sum": {"tf": 1.7320508075688772}, "b3d.pose.core.Array.var": {"tf": 1.7320508075688772}, "b3d.types.Array.all": {"tf": 1.7320508075688772}, "b3d.types.Array.any": {"tf": 1.7320508075688772}, "b3d.types.Array.argmax": {"tf": 1.4142135623730951}, "b3d.types.Array.argmin": {"tf": 1.4142135623730951}, "b3d.types.Array.max": {"tf": 1.7320508075688772}, "b3d.types.Array.mean": {"tf": 1.7320508075688772}, "b3d.types.Array.min": {"tf": 1.7320508075688772}, "b3d.types.Array.prod": {"tf": 1.7320508075688772}, "b3d.types.Array.ptp": {"tf": 1.7320508075688772}, "b3d.types.Array.std": {"tf": 1.7320508075688772}, "b3d.types.Array.sum": {"tf": 1.7320508075688772}, "b3d.types.Array.var": {"tf": 1.7320508075688772}, "b3d.utils.Array.all": {"tf": 1.7320508075688772}, "b3d.utils.Array.any": {"tf": 1.7320508075688772}, "b3d.utils.Array.argmax": {"tf": 1.4142135623730951}, "b3d.utils.Array.argmin": {"tf": 1.4142135623730951}, "b3d.utils.Array.max": {"tf": 1.7320508075688772}, "b3d.utils.Array.mean": {"tf": 1.7320508075688772}, "b3d.utils.Array.min": {"tf": 1.7320508075688772}, "b3d.utils.Array.prod": {"tf": 1.7320508075688772}, "b3d.utils.Array.ptp": {"tf": 1.7320508075688772}, "b3d.utils.Array.std": {"tf": 1.7320508075688772}, "b3d.utils.Array.sum": {"tf": 1.7320508075688772}, "b3d.utils.Array.var": {"tf": 1.7320508075688772}}, "df": 37}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"b3d.chisight.sparse.gps_utils.add_dummy_var": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs": {"tf": 1}, "b3d.chisight.dense.likelihoods.krays.KRaysImageLikelihoodArgs.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.types.Array.argpartition": {"tf": 1.4142135623730951}, "b3d.utils.Array.argpartition": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"b3d.pose.core.Array.argpartition": {"tf": 1}, "b3d.pose.core.Array.argsort": {"tf": 1.4142135623730951}, "b3d.pose.core.Array.sort": {"tf": 1}, "b3d.types.Array.argpartition": {"tf": 1}, "b3d.types.Array.argsort": {"tf": 1.4142135623730951}, "b3d.types.Array.sort": {"tf": 1}, "b3d.types.GenerativeFunction.update": {"tf": 1}, "b3d.utils.Array.argpartition": {"tf": 1}, "b3d.utils.Array.argsort": {"tf": 1.4142135623730951}, "b3d.utils.Array.sort": {"tf": 1}}, "df": 10}}}, "k": {"docs": {"b3d.pose.core.Array.take": {"tf": 2}, "b3d.types.Array.take": {"tf": 2}, "b3d.utils.Array.take": {"tf": 2}}, "df": 3}, "/": {"docs": {}, "df": 0, "l": {"docs": {"b3d.types.GenerativeFunction": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();
