[project]
name = "b3d"
dynamic = ["version"]
description = "A 3D computer vision library"
license = { text = "Apache 2.0" }
authors = [{ name = "Nishad Gothoskar", email = "nishadg@mit.edu" }]
requires-python = ">= 3.10"
dependencies = [ # py-pi pacakges (currently unavailable on conda)
    "genjax==0.5.1",
    "opencv-python>=4.10.0.84,<4.10.1",
    "pyliblzfse>=0.4.1,<0.5",
    "pyransac3d>=0.6.0,<0.7",
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64"]

[tool.pixi.pypi-options]
index-url = "https://pypi.org/simple"
extra-index-urls = [
    "https://oauth2accesstoken@us-west1-python.pkg.dev/probcomp-caliban/probcomp/simple",
]

[tool.pixi.pypi-dependencies]
b3d = { path = ".", editable = true }

[tool.pixi.target.osx-arm64]
build-dependencies = { scipy = { version = "1.14.0.*" }, numpy = { version = "1.26.4.*" } }

[tool.pixi.environments]
cpu = { features = ["cpu", "dev"], solve-group = "default" }
gpu = { features = ["cuda", "dev"], solve-group = "cuda" }

[tool.pixi.tasks.rerun]
description = "start rerun"
cmd = "./task-rerun.sh"
cwd = "scripts"

[tool.pixi.tasks.gcp-auth]
description = "authenticate to gcloud"
cmd = "gcloud auth login --update-adc"

[tool.pixi.tasks.gcp-list]
description = "list gcp instances"
cmd = "./gcp.sh :gcp-list"
cwd = "scripts"

[tool.pixi.tasks.gcp-active-host]
description = "active gcp host"
cmd = "./gcp.sh :gcp-active-host"
cwd = "scripts"

[tool.pixi.tasks.gcp-create]
description = "create, configure, bootstrap gcp instance"
depends_on = [
    "gcp-create-new",
    "gcp-config-ssh",
    "gcp-remote-forward",
    "gcp-bootstrap",
]

[tool.pixi.tasks.gcp-create-new]
description = "create gcp instance"
cmd = "./gcp.sh :gcp-create"
cwd = "scripts"

[tool.pixi.tasks.gcp-bootstrap]
description = "bootstrap a gcp instance"
cmd = "./gcp.sh :gcp-bootstrap"
cwd = "scripts"

[tool.pixi.tasks.gcp-config-ssh]
description = "ssh-config gcp instance"
cmd = "./gcp.sh :gcp-config-ssh"
cwd = "scripts"

[tool.pixi.tasks.gcp-remote-forward]
description = "remote-forward gcp instance for rerun"
cmd = "./gcp.sh :gcp-remote-forward"
cwd = "scripts"

[tool.pixi.tasks.gcp-delete]
description = "delete gcp instance"
cmd = "./gcp.sh :gcp-delete"
cwd = "scripts"

[tool.pixi.tasks.gcp-start]
description = "start gcp instance"
cmd = "./gcp.sh :gcp-start"
cwd = "scripts"
depends-on = ["gcp-bootstrap"]

[tool.pixi.tasks.gcp-status]
description = "status of gcp instance"
cmd = "./gcp.sh :gcp-status"
cwd = "scripts"

[tool.pixi.tasks.gcp-stop]
description = "stop gcp instance"
cmd = "./gcp.sh :gcp-stop"
cwd = "scripts"

[tool.pixi.tasks.gcp-ssh]
description = "ssh into a gcp instance"
cmd = "./gcp.sh :gcp-ssh"
cwd = "scripts"
depends_on = ["rerun"]

[tool.pixi.feature.cpu.target.osx-arm64.dependencies]
jax = "*"
jaxlib = { version = "*", build = "cpu*" }

[tool.pixi.feature.dev.dependencies]
distinctipy = ">=1.3.4,<1.4"
imageio = "*"
jupyter = ">=1.0.0,<1.1"
matplotlib = ">=3.9.1,<3.10"
natsort = ">=8.4.0,<8.5"
numpy = "<2.0.0"
rerun-sdk = "==0.16.1"
ruff = "*"
trimesh = "==4.2.4"
tqdm = "==4.66.2"
pdoc3 = ">=0.11.1,<0.12"
pillow = "==10.3.0"
polars = ">=0.20,<0.21"
pytest = "*"
scikit-learn = ">=1.5.1,<1.6"
scipy = ">=1.14.0,<1.15"

[tool.pixi.feature.cuda]
platforms = ["linux-64"]
system-requirements = { cuda = "12" }

[tool.pixi.feature.cuda.activation.env]
XLA_PYTHON_CLIENT_PREALLOCATE = "false"
XLA_PYTHON_CLIENT_ALLOCATOR = "platform"
CPLUS_INCLUDE_PATH = "$CONDA_PREFIX/targets/x86_64-linux/include"

[tool.pixi.feature.cuda.tasks.b3d-pull]
description = "download test data"
cmd = "python b3d_pull.py -ow"
cwd = "src/b3d/bucket_utils"

[tool.pixi.feature.cuda.tasks.test]
description = "run tests"
cmd = "./scripts/task-tests.sh"
depends_on = ["b3d-pull"]

[tool.pixi.feature.cuda.target.linux-64.dependencies]
cuda-toolkit = "*"
ffmpeg = "*"
fire = ">=0.6.0,<0.7"
glfw = "*"
gcc = "*"
ipython = ">=8.26.0,<8.27"
jax = "*"
jaxlib = { version = "0.4.28", build = "cuda12*" }
libglib = "*"
libglu = "*"
libglvnd-devel-cos7-x86_64 = ">=1.0.1,<1.1"
libglvnd-cos7-x86_64 = ">=1.0.1,<1.1"
libnvjitlink = "*"
mesalib = "*"
mesa-libegl-devel-cos7-x86_64 = "*"
mesa-libegl-cos7-x86_64 = "*"
mesa-libglu-devel-cos7-x86_64 = "*"
mesa-libglu-cos7-x86_64 = "*"
ninja = "*"
optax = ">=0.2.2,<0.3"
pytorch = { version = "==2.3.0", build = "cuda12*" }
torchvision = "*"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.ruff.lint]
preview = true
extend-select = ["I"]
select = ["E4", "E7", "E9", "F"]
ignore = ["F403"] # disables "*" import errors
fixable = ["ALL"]
unfixable = []
