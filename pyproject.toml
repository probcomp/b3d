[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "b3d"
dynamic = ["version"]
description = "A 3D computer vision library"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache 2.0"}
authors = [
    {name = "Nishad Gothoskar", email = "nishadg@mit.edu"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "genjax==0.5.0",
    "rerun-sdk==0.16.1",
    "tqdm==4.66.2",
    "numpy==1.26.4",
    "pillow==10.3.0",
    "tensorflow-probability==0.23.0",
    "trimesh==4.2.4",
    "matplotlib==3.8.4",
    "scipy==1.13.0",
    "ninja==1.11.1.1",
    "scikit-learn==1.4.1.post1",
    "pytest==8.1.1",
    "ipython==8.23.0",
    "jupyter==1.0.0",
    "pyransac3d==0.6.0",
    "pdoc3==0.10.0",
    "opencv-python==4.9.0.80",
    "optax==0.2.2",
    "fire==0.6.0",
    "torch==2.2.2",
    "torchvision==0.17.2",
    "jax[cuda12]~=0.4.28",
    "natsort",
    "distinctipy",
    "pyliblzfse",
    "nvidia-cuda-nvcc-cu12==12.3.52",
    "nvidia-nvjitlink-cu12==12.3.52",
    "imageio",
]

[project.scripts]
b3d_pull = "b3d.bucket_utils.b3d_pull:download_from_bucket"
b3d_push = "b3d.bucket_utils.b3d_push:upload_to_bucket"

[tool.setuptools.package-data]
"b3d" = [
    "nvdiffrast/common/*.h",
    "nvdiffrast/common/*.inl",
    "nvdiffrast/common/*.cu",
    "nvdiffrast/common/*.cpp",
    "nvdiffrast/common/cudaraster/*.hpp",
    "nvdiffrast/common/cudaraster/impl/*.cpp",
    "nvdiffrast/common/cudaraster/impl/*.hpp",
    "nvdiffrast/common/cudaraster/impl/*.inl",
    "nvdiffrast/common/cudaraster/impl/*.cu",
    "nvdiffrast/lib/*.h",
    "nvdiffrast/torch/*.h",
    "nvdiffrast/torch/*.inl",
    "nvdiffrast/torch/*.cpp",
    "nvdiffrast/tensorflow/*.cu",
    "nvdiffrast/jax/*.h",
    "nvdiffrast/jax/*.inl",
    "nvdiffrast/jax/*.cpp",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyright]
typeCheckingMode = "standard"
